%!PS-Adobe-3.1 EPSF-3.0%ADO_DSC_Encoding: MacOS Roman%%Title: logo.eps%%Creator: Adobe Illustrator(R) 12%%AI8_CreatorVersion: 12.0.1%AI9_PrintingDataBegin%%For: Michael Tatham%%CreationDate: 6/24/09%%BoundingBox: 0 0 572 209%%HiResBoundingBox: 0 0 571.0157 208.2813%%CropBox: 0 0 571.0157 208.2813%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0%%+ procset Adobe_CoolType_Utility_T42 1.0 0%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%+ procset Adobe_CoolType_Core 2.23 0%%+ procset Adobe_AGM_Core 2.0 0%%+ procset Adobe_AGM_Utils 1.0 0%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x5205 R agm 4.3861 ct 5.530%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 48 8%%BeginData: 7040 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD05FFA93736615AFD06FF615A615AFD14FF6136AFFF853637FD0F%FF371437368514373637843736615A615AFD38FF85360E3784FD04FF850E%371485A9FD13FF363785FF363714FD0FFF84360E85FF850E375AAF0E85FF%850EFD3AFF36371461FD04FF36371437FD16FFA9FFFFAF1437FD10FF3637%36FFFF3714373637AFFF3685FD0BFFAFA9FD2CFF843636360EAFFFFF8436%36360EFD05FFAFA9A8FD04FFAFA8FFA8AFFD04FFAF85A8FFA8360EFD05FF%A8A9FD09FF850E3684FF60360E3660FFA836A8FFFFFFA9A984FD04FF850E%A9FD04FFA8AFA9FD04FFA95AFFA9FD1DFFAF368514375AFFFF615A611437%FD04FF5A5B363785FFA961365B3637365BAFFF5A3714AFFFAF1437FFFFFF%6136611461FD09FF371461FFFF143736FFFF8536FFFFFF855B846136AFFF%8536373661FFFF5A3785375AFFFF8514613637A9FD1CFF8437A95B0E37A9%850EA936360EFFFFFF365BFFAF0E37FFAF36373685A9611461A9AF143684%FFA9360EFFFF5B0EAFFF360EAFFD08FF5A360EAFFF610E3784FF3685FFFF%603784FF5A3784FFA85B148584FF363684FF84365AFF3636363714AFFD1C%FFAF14AFA93714613637FF613637FFFFA95B85FFA93714FFFF611461FFFF%84375AFFFF3736AFFFAF3637FFFF3685FFFF3637A9FD09FF36375AFF3637%1461A937A9FFFF855AFFFF851485FFFF3637A9FFA9373637365B3685FF85%3661FD1FFFA83684FF36360E3684FF36360EFD04FFA95A360E36FFFF3636%36FFFF850E61FFFF0E36A8FF84360EFFFFFFA8610E370EA9FD09FF610E36%5A360E360E375AFD04FFAF5A3736365AFFFF5B0EAFFFA90E36A9FD05FF5A%3636FD1FFFAF14AFFFAF143736FFFF613637FFFFFF611461AF3714FFFF61%1461FFFF84375AFFFF3736AFFFAF3637FFFF85375AFF3637A9FD09FFA937%143736AF143736AFFD04FF3637A9851461FFFF5A37A9FFA9373685FD05FF%853661FD1FFFA93684FFFF360E85FFFF363714FFFFAF1436A98514365AFF%843636FFFF850E61FFFF0E37A9FF843714FFFF37148584371461A8FD09FF%36360EAFFF360E37FD04FF843636FF36363685FF5B0E85A9FF3637148560%615AFF603736FD1EFF855B363784FF8537A9FF5A37143736AFA937363736%61365B8537363785AF363736AF5A371461A96114375AFF36373637603736%FD0AFF853661FFFF613784FD04FFAF36371485363784FF85371461FFAF36%37363736FF8537143736FD1DFFAF84AFA8AFFFFFA9FFFFAFA8A984AFA9FF%A8AFA8FFFFAFAFAF84AFA8AFA8AF8485A8AFA8855AAFA8A984AFFFFF84AF%FFFFA8FD0CFF85AFFFFFFF84AFFD06FFA8FFFFFFAFFFFFFFA9AFFD04FF84%AFA9FD05FFA8FDFCFFFD30FFAFAF85858485858584AFAFFD72FF84613636%0E360E360E360E360E36366184FD6CFFAF85363736371437363714373637%143736371437366185FD67FFAF5A3714360E3714360E3714360E3714360E%3714360E3714363685A9FD1EFFAF84613637143636615A8584FD38FFAF85%3637143736371437363714373637143736371437363714373637143760FD%19FFA9853637143736371437363714373637146185FD34FF84360E360E36%0E360E360E360E360E360E360E360E360E360E360E360E360E360E61A8FD%14FFAF5A360E360E360E360E360E360E360E360E360E360E3684FD30FF85%371437363714615A85848585858485616114373637143736371437363714%373637143761FD11FFA96136371437363714373637143736371437363714%37363714373685AFFD2CFF843714363685A9FD0DFFA88536360E3714360E%3714360E3714360E371461A9FD0DFF5A360E3714360E3714360E3714360E%3714360E3714360E3714360E3714365AFD2AFF85373685FD14FFAF853637%363714373637143736371437363784FD0AFFAF3637363714373637143736%3714373637143736371437363714373637143736371485AFFD26FFA83760%FD19FF845B0E360E360E360E360E360E360E360E85FD07FFAF36360E360E%365A8584A984AFA8A984AF608536360E360E360E360E360E360E360E360E%365AAFFD24FF61AFFD1CFFAF5A37363714373637143736371437365B85FD%05FF3637148585FD10FFAF5A3736371437363714373637143736371485FD%2DFFA9855A6136360E37365B5AA9A9FD09FF848514360E3714360E371436%0E37143636AFFFFF363784FD15FFA98536360E3714360E3714360E371436%0E3784FD28FF85611437363714373637143736371437368585FD09FF6037%14373637143736371437363714853685AFFD19FFA9611437363714373637%14373637143736A9FD23FFA9610E360E360E360E360E360E360E360E360E%360E360E85A9FD07FFA9610E360E360E360E360E360E360E365AFD1CFFAF%36360E360E360E360E360E360E360E3684FD20FF61371437363714373637%1437363714373637143736371437363736AFFD08FF613714373637143736%37143736373685FD1CFFAF8514373637143736371437363714375AFD1DFF%850E3714360E3714360E3714360E3714360E3714360E3714360E3714360E%3784FD07FFA985363714360E3714360E3714360E375AFD1DFF5A3714360E%3714360E3714360E371461A9FD18FFAF6136371437363714373637143736%371437363714373637143736371437363714373685FD08FF845B36371437%36371437363714373661A9FD1BFFA9853637143736371437363714373637%60FD16FFA9360E360E36368584A984FD05FFA9A9848536360E360E360E36%0E360E360E360E360E3684FD08FFA95A360E360E360E360E360E360E3636%85A9FD1BFF5A360E360E360E360E360E360E360E85AFFD13FF61143761AF%FD10FFAFAF3637143736371437363714373637143736AFFD08FFAF853637%1437363714373637143736373685A9FD05FF858585FD11FFAF8536371437%363714373637143736375AFD10FFA95B3685A9FD15FFA9610E3714360E37%14360E3714360E37145B84FD09FF8561363714360E3714360E3714360E37%14360E37143636FD15FF84360E3714360E3714360E3714360E85A9FD0DFF%855AFD1BFF845B36371437363714373637143736375AFD0BFFA985363714%373637143736371437363714375AFD18FFA9363736371437363714373637%14373685A9FD0AFF84FD1EFF8536360E360E360E360E360E360E360E85AF%FD0BFFA9A95A6136360E360E360E363685A8FD1BFFA86136360E360E360E%360E360E360E36368584A984FFA9A95A37FD21FF85613637143736371437%36371437363784FD11FFA9AFA9FD23FF8585363714373637143736371437%3637143736371437AFFD23FFA936360E3714360E3714360E37143636A9FD%38FFA985363714360E3714360E3714360E37145BA8FD26FF853714373637%14373637143736371461A9FD39FFAFAF8585366136371437366184FD2BFF%8536360E360E360E360E360E360E3636A9FD71FF85611437363714373637%14373637146185FD71FFAF5A3714360E3714360E3714360E373685A9FD70%FFAF8536371437363714373637143736375A85AFFD09FFA9FD66FFA8610E%360E360E360E360E360E360E3636615A8560855A610EA9FD69FF85611437%3637143736371437363714373637143736AFFD6DFF848536360E3714360E%3714360E37143636AFFD72FFAF8585606136615A616085AFFDB9FFFF%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 70 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/set_gvm{	currentglobal exch setglobal}bdf/reset_gvm{	setglobal}bdf/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/thold_halftone{ 	level3		{sethalftone currenthalftone}		{			dup /HalftoneType get 3 eq			{				sethalftone currenthalftone			}			{				begin				Width Height mul {					Thresholds read {pop} if				} repeat				end				currenthalftone			} ifelse		}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			/srcDataStrs [ imageDict begin				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse				{					Width Decode length 2 div mul cvi string				} repeat				end ] def					imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put			imageDict /Decode [0 1] put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		DataSource 0 get type		dup /filetype eq			{			1 dict begin			/flushbuffer Width cvi string def			1 1 Height cvi				{				pop				0 1 DataSource length 1 sub					{					DataSource exch get					flushbuffer readstring pop pop					}for				}for			end			}if		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and			{			Width Height mul cvi				{				0 1 DataSource length 1 sub					{dup DataSource exch get exec length exch 0 ne {pop}if}for				dup 0 eq					{pop exit}if				sub dup 0 le					{exit}if				}loop			pop			}if				}		{		/DataSource load type 		dup /filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 idiv mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and			{				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul					{					DataSource length dup 0 eq						{pop exit}if					sub dup 0 le						{exit}if					}loop				pop			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 	dup type /dicttype eq		{			Adobe_AGM_Core/AGMCORE_tmp get			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			Adobe_AGM_Core/AGMCORE_tmp get exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{ 	/indexed_colorspace_dict AGMCORE_gget dup null ne {		dup /CSDBase known {			/CSDBase get /CSD get_res /Names known 		}{			pop false		}ifelse	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse{	/pdfmark_5 {cleartomark} bind def}{	/pdfmark_5 {pdfmark} bind def}ifelse/ReadBypdfmark_5{	2 dict begin	/makerString exch def string /tmpString exch def	{		currentfile tmpString readline pop		makerString anchorsearch		{		pop pop cleartomark exit		}{			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5		} ifelse	}loop	end} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for%% definitions of some fundamental procedures.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 201 dict dup begin put/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSD_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_in_pattern false def/AGMCORE_currentpagedevice nd/knockout_unitsq ndcurrentglobal true setglobal[/CSA /Gradient /Procedure]{	/Generic /Category findresource dup length dict copy /Category defineresource pop} forallsetglobal/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	//Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_&setoverprint /setoverprint ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse			/AGMCORE_gstackptr exch store		}def		/grestoreall {			AGMCORE_&grestoreall			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			/AGMCORE_gstackptr exch store			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/setoverprint{			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint		}def			0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/sRGB ne					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			//Adobe_AGM_Core begin			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						current_spot_alias false set_spot_alias						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor						set_spot_alias						currentgray 1 ne					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						//Adobe_AGM_Core/AGMCORE_name xddf						false						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not AGMCORE_currentpagedevice/OverrideSeparations known and						{							AGMCORE_currentpagedevice/OverrideSeparations get							{								/HqnSpots /ProcSet resourcestatus								{									pop pop pop true								}if							}if						}if											{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not						}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace							false							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall								not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse			end		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	/AGMCORE_IsSeparationAProcessColor		{		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or		}def	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		level3 {			/AGMCORE_IsCurrentColor				{				dup AGMCORE_IsSeparationAProcessColor					{					AGMCORE_plate_ndx 0 eq						{dup (Cyan) eq exch /Cyan eq or}if					AGMCORE_plate_ndx 1 eq						{dup (Magenta) eq exch /Magenta eq or}if					AGMCORE_plate_ndx 2 eq						{dup (Yellow) eq exch /Yellow eq or}if					AGMCORE_plate_ndx 3 eq						{dup (Black) eq exch /Black eq or}if					AGMCORE_plate_ndx 4 eq						{pop false}if					}{					gsave					false setoverprint					current_spot_alias false set_spot_alias					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor					set_spot_alias					currentgray 1 ne					grestore					}ifelse				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf				dup type /dicttype eq					{					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end}{					channel get 0 paint? AGMCORE_separateShadingFunction					}ifelse				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					Shading /AGMCORE_ignoreshade known					currentdict end exch					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				//Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					/AGMCORE_SpotAliasAry2 where {						begin						dup 0 get dup /Separation eq						{							pop							dup length array copy							dup dup 1 get							current_spot_alias							{								dup map_alias								{									false set_spot_alias									dup 1 exch setsepcolorspace									true set_spot_alias									begin									/sep_colorspace_dict currentdict AGMCORE_gput									pop pop	pop									[ 										/Separation Name 										CSA map_csa										MappedCSA 										/sep_colorspace_proc load									]									dup Name									end								}if							}if							map_reserved_ink_name 1 xpt						}{							/DeviceN eq 							{								dup length array copy								dup dup 1 get [ 									exch {										current_spot_alias{											dup map_alias{												/Name get exch pop											}if										}if										map_reserved_ink_name									} forall 								] 1 xpt							}if						}ifelse						end					} if				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	/AGMCORE_def_ht currenthalftone def	/clonedict Adobe_AGM_Utils begin /clonedict load end def	/clonearray Adobe_AGM_Utils begin /clonearray load end def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/getrampcolor	{ 		/indx exch def		0 1 NumComp 1 sub		{			dup			Samples exch get			dup type /stringtype eq {indx get} if			exch			Scaling exch get aload pop			3 1 roll			mul add		} for		ColorSpaceFamily /Separation eq 		{sep}		{			ColorSpaceFamily /DeviceN eq			{devn} {setcolor}ifelse		}ifelse	} bdf	/sssetbackground {aload pop setcolor} bdf	/RadialShade	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/r2 xdf		/c2y xdf		/c2x xdf		/r1 xdf		/c1y xdf		/c1x xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		c1x c2x eq		{			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope c2y c1y sub c2x c1x sub div def			/theta slope 1 atan def			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if		} ifelse		gsave		clippath		c1x c1y translate		theta rotate		-90 rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax xdf		/xMax xdf		/yMin xdf		/xMin xdf		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			/max { 2 copy gt { pop } {exch pop} ifelse } bdf			/min { 2 copy lt { pop } {exch pop} ifelse } bdf			rampdict begin			40 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			c1x c1y translate			theta rotate			-90 rotate			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def			/c1y 0 def			/c1x 0 def			/c2x 0 def			ext0			{				0 getrampcolor				c2y r2 add r1 sub 0.0001 lt				{					c1x c1y r1 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2y r1 add r2 le					{						c1x c1y r1 0 360 arc						fill					}					{						c2x c2y r2 0 360 arc fill						r1 r2 eq						{							/p1x r1 neg def							/p1y c1y def							/p2x r1 def							/p2y c1y def							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto							fill						}						{							/AA r2 r1 sub c2y div def							AA -1 eq							{ /theta 89.99 def}							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}							ifelse							/SS1 90 theta add dup sin exch cos div def							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def							/p1y p1x SS1 div neg def							/SS2 90 theta sub dup sin exch cos div def							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def							/p2y p2x SS2 div neg def							r1 r2 gt							{								/L1maxX p1x yMin p1y sub SS1 div add def								/L2maxX p2x yMin p2y sub SS2 div add def							}							{								/L1maxX 0 def								/L2maxX 0 def							} ifelse							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto							L1maxX L1maxX p1x sub SS1 mul p1y add lineto							fill						} ifelse					} ifelse				} ifelse			} if		c1x c2x sub dup mul		c1y c2y sub dup mul		add 0.5 exp		0 dtransform		dup mul exch dup mul add 0.5 exp 72 div		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt		1 index 1 index lt { exch } if pop		/hires xdf		hires mul		/numpix xdf		/numsteps NumSamples def		/rampIndxInc 1 def		/subsampling false def		numpix 0 ne		{			NumSamples numpix div 0.5 gt			{				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def				/rampIndxInc NumSamples 1 sub numsteps div def				/subsampling true def			} if		} if		/xInc c2x c1x sub numsteps div def		/yInc c2y c1y sub numsteps div def		/rInc r2 r1 sub numsteps div def		/cx c1x def		/cy c1y def		/radius r1 def		newpath		xInc 0 eq yInc 0 eq rInc 0 eq and and		{			0 getrampcolor			cx cy radius 0 360 arc			stroke			NumSamples 1 sub getrampcolor			cx cy radius 72 hires div add 0 360 arc			0 setlinewidth			stroke		}		{			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				cx cy radius 0 360 arc				/cx cx xInc add def				/cy cy yInc add def				/radius radius rInc add def				cx cy radius 360 0 arcn				eofill				rampIndxInc add			} repeat			pop		} ifelse		ext1		{			c2y r2 add r1 lt			{				c2x c2y r2 0 360 arc				fill			}			{				c2y r1 add r2 sub 0.0001 le				{					c2x c2y r2 360 0 arcn					pathbbox					/aymax exch def					/axmax exch def					/aymin exch def					/axmin exch def					/bxMin xMin axmin min def					/byMin yMin aymin min def					/bxMax xMax axmax max def					/byMax yMax aymax max def					bxMin byMin moveto					bxMax byMin lineto					bxMax byMax lineto					bxMin byMax lineto					bxMin byMin lineto					eofill				}				{					c2x c2y r2 0 360 arc fill					r1 r2 eq					{						/p1x r2 neg def						/p1y c2y def						/p2x r2 def						/p2y c2y def						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto						fill					}					{						/AA r2 r1 sub c2y div def						AA -1 eq						{ /theta 89.99 def}						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}						ifelse						/SS1 90 theta add dup sin exch cos div def						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def						/p1y c2y p1x SS1 div sub def						/SS2 90 theta sub dup sin exch cos div def						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def						/p2y c2y p2x SS2 div sub def						r1 r2 lt						{							/L1maxX p1x yMax p1y sub SS1 div add def							/L2maxX p2x yMax p2y sub SS2 div add def						}						{							/L1maxX 0 def							/L2maxX 0 def						}ifelse						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto						L1maxX L1maxX p1x sub SS1 mul p1y add lineto						fill					} ifelse				} ifelse			} ifelse		} if		grestore		grestore		end		end		end		} ifelse	} bdf	/GenStrips	{		40 dict begin		/ColorSpaceFamily xdf		/background xdf		/ext1 xdf		/ext0 xdf		/BBox xdf		/y2 xdf		/x2 xdf		/y1 xdf		/x1 xdf		/rampdict xdf		/setinkoverprint where {pop /setinkoverprint{pop}def}if		gsave		BBox length 0 gt		{			newpath			BBox 0 get BBox 1 get moveto			BBox 2 get BBox 0 get sub 0 rlineto			0 BBox 3 get BBox 1 get sub rlineto			BBox 2 get BBox 0 get sub neg 0 rlineto			closepath			clip			newpath		} if		x1 x2 eq		{			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse		}		{			/slope y2 y1 sub x2 x1 sub div def			/theta slope 1 atan def			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if		}		ifelse		gsave		clippath		x1 y1 translate		theta rotate		{ pathbbox } stopped		{ 0 0 0 0 } if		/yMax exch def		/xMax exch def		/yMin exch def		/xMin exch def		grestore		xMax xMin eq yMax yMin eq or		{			grestore			end		}		{			rampdict begin			20 dict begin			background length 0 gt { background sssetbackground gsave clippath fill grestore } if			gsave			x1 y1 translate			theta rotate			/xStart 0 def			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def			/ySpan yMax yMin sub def			/numsteps NumSamples def			/rampIndxInc 1 def			/subsampling false def			xStart 0 transform			xEnd 0 transform			3 -1 roll			sub dup mul			3 1 roll			sub dup mul			add 0.5 exp 72 div			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt			1 index 1 index lt { exch } if pop			mul			/numpix xdf			numpix 0 ne			{				NumSamples numpix div 0.5 gt				{					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def					/rampIndxInc NumSamples 1 sub numsteps div def					/subsampling true def				} if			} if			ext0			{				0 getrampcolor				xMin xStart lt				{					xMin yMin xMin neg ySpan rectfill				} if			} if			/xInc xEnd xStart sub numsteps div def			/x xStart def			0			numsteps			{				dup				subsampling { round cvi } if				getrampcolor				x yMin xInc ySpan rectfill				/x x xInc add def				rampIndxInc add			} repeat			pop			ext1 {				xMax xEnd gt				{					xEnd yMin xMax xEnd sub ySpan rectfill				} if			} if			grestore			grestore			end			end			end		} ifelse	} bdf}def/page_trailer{	end}def/doc_trailer{}def/capture_currentpagedevice {	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf} defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup //Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA get_csa_by_name setcolorspace_opt		set_crd	end}def/map_csa{	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse	{pop}{get_csa_by_name /MappedCSA xdf}ifelse} def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	/AGMCORE_tmp exch store	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	CSA map_csa	/AGMCORE_sep_special Name dup () eq exch (All) eq or store	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc {setcolor} bdf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		7 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {					/AliasedColorants false def					exit				}				{					new_LookupTables names_index get 0 get null eq {						dup /Names get names_index get /name xdf						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq						or or or not {							/AliasedColorants false def							exit						} if					} if				} ifelse			} for			lut_entry_len 1 eq {				/AliasedColorants false def			} if			AliasedColorants {				dup begin				/Names new_names def				/LookupTables new_LookupTables def				/AliasedColorants true def				/NComponents lut_entry_len def				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	dup not {		CSA map_csa	} if	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			AvoidAliasedColorants {				/currentspotalias current_spot_alias def				false set_spot_alias			} if			Names {				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				/names_index names_index 1 add def			} forall			AvoidAliasedColorants {				currentspotalias set_spot_alias			} if			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx 					0 0 0 0 /setcmykcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				{setcolor} bdf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSDBase known {			CSDBase /CSD get_res begin			currentdict /Names known {				currentdict devncs			}{				1 currentdict sepcs			} ifelse			AGMCORE_host_sep{				4 dict begin				/compCnt /Names where {pop Names length}{1}ifelse def				/NewLookup HiVal 1 add string def				0 1 HiVal {					/tableIndex xdf					Lookup dup type /stringtype eq {						compCnt tableIndex map_index					}{						exec					} ifelse					/Names where {						pop setdevicencolor					}{						setsepcolor					} ifelse					currentgray					tableIndex exch					HiVal mul cvi 					NewLookup 3 1 roll put				} for				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt				end			}{				level3				{					currentdict /Names known {						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt					} ifelse				}{				[/Indexed MappedCSA HiVal					[					currentdict /Names known {						Lookup dup type /stringtype eq							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx					}{						Lookup dup type /stringtype eq							{/exch cvx /get cvx 255 /div cvx}							{/exec cvx}ifelse							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx					} ifelse					]cvx				]setcolorspace_opt				}ifelse			} ifelse			end			set_crd		}		{			CSA map_csa			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 			begin			CSDBase /CSD get_res begin			currentdict /Names known{				map_indexed_devn				devn			}			{				Lookup 1 3 -1 roll map_index				sep			}ifelse			end			end		}{			/Lookup get 4 3 -1 roll map_index setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_res{	dup /CSD eq {		pop 		//Adobe_AGM_Core begin		/AGMCORE_CSD_cache load 3 1 roll put		end	}{		defineresource pop	} ifelse}def/del_res{	{		aload pop exch		dup /CSD eq {			pop 			{				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef			}forall		}{			exch			{				1 index undefineresource			}forall			pop		} ifelse	} forall}def/get_res{	dup /CSD eq {		pop		dup type dup /nametype eq exch /stringtype eq or {			AGMCORE_CSD_cache exch get		} if	}{		findresource	} ifelse}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		/CSA get_res	} if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/wrap_paintproc{   statusdict /currentfilenameextend known{	clonedict	begin	/OldPaintProc /PaintProc load def	/PaintProc	{		mark exch		dup /OldPaintProc get stopped		{closefile restore end} if		cleartomark	}  def	end  } {pop} ifelse} def/make_pattern{	exch clonedict exch	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	1 index dup /ID get exch /Pattern add_res	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/RenderingIntent known{		currentcolorrendering/RenderingIntent get	}{null}ifelse	Intent ne {		Intent /ColorRendering {findresource} stopped		{			pop pop systemdict /findcolorrendering known			{				Intent findcolorrendering pop				/ColorRendering findresource 				true			}			{false} ifelse		}		{true} ifelse		{			dup begin			currentdict /TransformPQR known {				currentdict /TransformPQR get aload pop				3 {{} eq 3 1 roll} repeat or or			}			{true} ifelse			currentdict /MatrixPQR known {				currentdict /MatrixPQR get aload pop				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq				and and and and and and and and			}			{true} ifelse			end			or			{				clonedict begin				/TransformPQR [					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind				] def				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def				currentdict end			} if			setcolorrendering_opt		} if			}if} def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict /ColorRendering known{			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		clonedict		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/set_spot_alias_ary{	dup inherit_aliases	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf}def/set_spot_normalization_ary{	dup inherit_aliases	dup length	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if	array	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf	/AGMCORE_SpotAliasAry where{		pop		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval		AGMCORE_SpotAliasAry length	}{0} ifelse	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval	true set_spot_alias}def/inherit_aliases{	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall}def/set_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry2 where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry2 where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry2{				dup/Name get AGMCORE_name eq{					/CSD get /CSD get_res					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	//Adobe_AGM_Core begin	/setcustomcolor	{		currentdict/TintProc known currentdict/CSA known and 3 1 roll		//Adobe_AGM_Core begin		dup /customcolor_tint exch AGMCORE_gput		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not		current_spot_alias and{1 index 4 get map_alias}{false}ifelse		{			false set_spot_alias			4 -1 roll{				exch pop /sep_tint AGMCORE_gget exch			}if			mark 3 1 roll			setsepcolorspace			counttomark 0 ne{				setsepcolor			}if			pop			pop			true set_spot_alias		}{			AGMCORE_&setcustomcolor			pop		}ifelse		end	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	//Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defend/set_def_ht{	AGMCORE_def_ht sethalftone} defendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.25 0%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.25 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.25 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict /Adobe_CoolType_Data 2 copy known not	 { 2 copy 10 dict put }ifget	 begin	 /@opStackCountByLevel 32 dict def	 /@opStackLevel 0 def	 /@dictStackCountByLevel 32 dict def	 /@dictStackLevel 0 def	 endsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup /args			7 index			5 add array put			put get			}			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{ pop count }			if			dup /argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					 { (*) { pop stop } 128 string /Category resourceforall }				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup					 {						  /@shouldNotDisappearDictValue known								{										  {												end												currentdict 1 index eq													 { pop exit }												if										  }									 loop								}						  if					 }				if				end		}		{ false }	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end		currentglobal false setglobal	  userdict /Adobe_CoolType_Data 2 copy known not		  { 2 copy 10 dict put }		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.%%Version: 1.21 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 27 add dict copy }	{ 27 dict }ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {				mark				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put					 {					 ((Hex) 57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec					 }				stopped					 {					 cleartomark					 Adobe_CoolType_Utility /@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						  {						  2 copy get 3 index eq								{ 1 index length exch sub 1 sub { end } repeat exit }								{ pop }						  ifelse						  }					 for					 pop pop					 Adobe_CoolType_Utility /@eexecStartData get eexec					 }					 { cleartomark }				ifelse			} }			{ {				Adobe_CoolType_Utility /@eexecStartData get eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind def/T0AddT42Mtx2{	/CIDFont findresource /Metrics2 get begin def end}bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/AGMIMG_flushfilters nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/AGMIMG_flushfilters{	dup type /arraytype ne		{1 array astore}if	aload length		{		dup type /filetype eq			{			dup status 1 index currentfile ne and				{dup flushfile closefile}				{pop}			ifelse			}{pop}ifelse		} repeat}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	CSA map_csa	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{ 									Name AGMCORE_IsSeparationAProcessColor  									{ 										Operator /imagemask eq{ 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor 										}{											invert_image_samples 										}ifelse	 								}{	 									[ /Separation Name [/DeviceGray]	 									{ 	 										sep_colorspace_proc AGMCORE_get_ink_data											1 exch sub	 									} bind										] AGMCORE_&setcolorspace										/sep_tint AGMCORE_gget AGMCORE_&setcolor 									}ifelse 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name AGMCORE_IsSeparationAProcessColor not and					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	mark currentcolor counttomark dup 2 add 1 roll cleartomark} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/DataSource origMultipleDataSources		{			[			BitsPerComponent 8 idiv origDecode length 2 idiv mul string			0 1 origDecode length 2 idiv 1 sub				{				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch				origDataSource exch get 0 () /SubFileDecode filter				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx				}for 			]bind cvx		}{origDataSource}ifelse 0 () /SubFileDecode filter def			[		origcolorSpaceElemCnt string		0 2 origDecode length 2 sub			{			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx			}for		/convProc load /exec cvx		origcolorSpaceElemCnt 1 sub -1 0			{			/dup cvx 2 /add cvx /index cvx			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx			}for	]bind cvx 0 () /SubFileDecode filter	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	CSA map_csa	2 dict begin	dup	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi			{				dup 65535 gt {1 add 2 div cvi}{exit}ifelse			} loop			string		} repeat		end ] def	/dstDataStr srcDataStrs 0 get length string def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [ [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def									/MultipleDataSources true def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA get_csa_by_name 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							devn_alt_datasource						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								devn_alt_datasource							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get get_csa_by_name				}{					/Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		<<			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		>>		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		current_spot_alias{dup 4 get map_alias}{false}ifelse		{			false set_spot_alias			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask			true set_spot_alias		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: (Page 1) 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2009-06-24T16:05:37-04:00</xap:CreateDate>
         <xap:ModifyDate>2009-06-24T16:05:37-04:00</xap:ModifyDate>
         <xap:MetadataDate>2009-06-24T16:05:37-04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>96</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEBkAGQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABkAAAAAEA&#xA;AQGQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAYAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qwT83tPtv8NyasDJH&#xA;f2ZjS3ljkZABJIoYFQaHbNr2TkPi8H8J5/J1HbOMeFx78UeXzYl+Unmu9tfMEmi6lPI0d7VYxMzE&#xA;pcR9vi6chUfOmbHtbSxlj44j6fudb2Pq5RynHM/V39703zn5hTQPLt1qFf34X07Vf5pn2T7vtH2G&#xA;aPR6fxcgj06+532t1Pg4jLr097xLyVHe6z5us9K1G9uxDM0vrhZnV6xxO9KmtPiTfOn1pjjwmcRG&#xA;xXTzeU0IllziEjKjfXyL6GhiWKJIlrxjUKtTU0ApuTnHk2be1AoU5ZYmcorqXX7Sgio+YxorYdJJ&#xA;HHG0kjBI0BZ3YgAAbkknEC9gpIAsrFu7RoY51mjMMwDQyhgVdWFVKtWhBrtTDwG6rcI441d7FVyL&#xA;Jhvk7yhBomt6zIusfXLi63ktVI9SJXYsrygs5LdgSB3zZazVnLjgOCgOvf7nV6LRjFkmePiJ6d3v&#xA;Yj5ehu7X84jYz3s98LYTCOa5cu9Gg5fL9rtmx1BEtFxACN1y97rdNGUddwmRlV8/c9gJABJNANyT&#xA;nOPTKcN1bT8vQmSXgaPwYNQ+9OmSlEjmGMZg8iqZFkxL8zvLzat5ammt+QvtPDXFuUJBKgVkTbry&#xA;Ube4GbDszUeHlAP0y2/U63tTTeJiJH1R3H6WE/lXbaTrujaxol8p+uuVnW45sJOAUohFD/up2J8P&#xA;izadqSninHJH6eX49/6HVdkxhmxzxy+rnf47v0sV0bU18u61qEGtWpvJIYbm1SKQsQs5Uxg9R8LA&#xA;lT7GozPzYvGhEwNWQfg67Bl8DJIZBxUCPjyZxpuhWXl/8urvW9YRp9SvbVlVZHf4UnoIogtRTfiz&#xA;d/uzVZM8s2pEIbRifu5l22LTxw6U5J7ylH7+QZn5B0N9I8tWsc5dr25UXF40hYt6kgB4nkduC0X6&#xA;M1uvz+JlJH0jYO17PweHiAP1Hcp4b2zE4gM8frnYRc15/wDA1rmLwSq62cvjjdXuvmnhghead1ih&#xA;jBaSRyFVVG5JJ2AwRiSaHNMpACzyQOga/p+u2Bv7Asbf1HiVnHEkxmlQKnY9RlufBLFLhlzadPqI&#xA;5o8UeSNnuba3UNPKkSk0DSMFFfpyuMSeQbZSA5ml6OjqHRgytuGBqCPmMBFJBtRa/sVvUsWuIxeS&#xA;IZEtiw9QoNiwXrTJDHLh4q9PexOSPFw36u5WVlYAqQQehG4yDNvFXYq7FXYq7FXYqw383f8AlBbz&#xA;/jJB/wAnVzZdk/34+P3Or7Y/xc/D73nn5k6HLpV3pOv2RMa3cMLF124XMKKQ3+yAB+YObjs3OMgl&#xA;jl0J+RdL2ngOOUMsf4gPmGQWms/4/wDM+iwBCNN0uFb3UYyKKbnYcN+o5UA9uWYc8P5TFM/xSND3&#xA;fj9DmwzfnM0B/DAcUvf+P0sZ8gf+TUg/4z3n/JmXM7X/AOKH3R+8Ov7O/wAcHvl9xeo+eNN8x6n9&#xA;Vs7G5jsdHqX1a6aQxuYwR8AI3pxrXp7nNFosmOFykOKf8Ieg1+LLkqMTww/iNvNfPdz5Ztdc0h/K&#xA;jRwvbMVnuLTkAXDLx/e9HahNSCffN3oY5ZY5eN17/wBXR0Wvlijkh4O1dR+vqyb88IZ49MsrqO6n&#xA;RJJPq8torkQMKM4ZkHVqjrmD2IQZEUO++rn9vAiAIJ51XRRs/wAvdFvPIA1W9knudROn+tbzSSNx&#xA;g4RlkjjQELwFKUNfoyU+0Jx1HBGhHio+e7GHZ2OWm45WZcFjflt0RX5VGfXfJV3p19czejDcelDJ&#xA;FI0cqJxVwodTWgPb6OmQ7UrFnEogWR8Gzsm8uAxkTQPfuk/5HeoNb1cSEmT0V5kmp5epvU5kdt1w&#xA;RrvcXsG/EnfciNO/8npc/wCz/wCoUZDJ/iA/H8TZj/40D+P4WQ+Z9JvrzzKl5r15Ba+TrEClvLLx&#xA;FxIUr8a7A/vNqE9BsN8xNNljHFw4wTml1rl+A5mqwyll4shAwR6Xz/BYhol/p0X5uxPoJEOk3vwC&#xA;NI2hjZTB8QVGC/D6i8ht16ZsM0JHRnxN5x+PX9TrcGSI1o8PaEvh0/W9ozmnqXEAih3B6jFXhEob&#xA;yL+ZoZfg09pA3sbS46/8i/1rnVj/AArS/wBL9I/X+l5A/wCCav8Ao/70/q/Qg/zTurC585Xdxpy1&#xA;WL04rqZd0a4UEGh6dFp8wcs7LjKOECXw9zV2tOMs5MelX72afp2PzzeeWdMjIaKNf0jrUY6K0HwB&#xA;CPBnrt4MDms8A6WOSX+bH4u1/MDVyxwHL6pfD8fazDzpZ+ZL3SRaaFcR2k0zgXN1IxQpDQ8irAEg&#xA;1puM12jnijO8gsDkPN2euhllDhxmieZ8nmX5iDyda+XrOw0b0J9UtJ4xeX1ulS37uTl6lwBRmdxy&#xA;pyJ2zedn+NLIZTsQI2B945B0HaXgRxCOOjMEWR7jzLLvM1vHqn5TwXV47yzR2Fvdc+bDlN6a1Z6H&#xA;4t2PXvmu00uDVkR5cRHwt2eqj4mjBlueEH40gvyj0XT18ux643qm8hknAAlcR0Ap/d14dD4Zb2tm&#xA;l4nh7Ua6fpaex8EfC8TfiF9f0JB5OvtR8z65qeqX+kx6/MioIraaWNIoEkLbJHKGU/Yp0/E5l6yE&#xA;cGOMIy8Md4G5+Th6LJLPklOUPEPcTsPmyvyJ5d80aPreoJLAbLy7ch3t7QzJKYpCwK8OJanw1B+j&#xA;MDXajFkxxo8WQczVW7Hs/TZsWSVjhxHkLumDWPlqfWvzD1XRptRuaJ9YRrxm5yskbAKHJpyHSo2z&#xA;aT1IxaaMxEdNujqcelOXUyxmR679Xr/lHy5/h3Q4dL+std+kzt6zLwHxsWoq1biB8853V6jxshnV&#xA;PS6PTeBjELtOcxnKdirsVdirsVdirCPzSTWL/Rm0XTdLnvGuPTka6j4+mnB68TU8uXw+Hfrm07MM&#xA;IT45SAro6ntUTnDw4RMr6r73R9Q8zeQ5dMv9OfT9St0UW0cjI4M0Kjg6MppR/smvSpwQzRwagSjL&#xA;iiefuKZ4ZZ9OYSjwyHL3hD/l/wCXNQ8q+Vri5msHuNYunDyWcbR+pxU8Y05FgmwJc798nr9RHPlA&#xA;EqgOrDs7TS0+EkxuZ6bfD9bB/L+g+ctI83R662gXEyJLM5gBUGkyumzbjbnXNpqM+HJh8PjA2H2O&#xA;p0+nz48/ieGTuftZZ+a2j+a9bsdNOl28z2ZUvd2IKh1kPEp6ihqNx3G1aHNf2Vmw4pS4yL6F2Xa+&#xA;HNljHgB4eo/Wlfmnyn5s1nTNPubTRIdNTTG9O10qORWlKvQvI7VRKckFF+1uScv0uqw45SBmZcXO&#xA;XRx9XpM2WETGAjw8o9fejPzCtPN2t+XtMsJNHeTU+f1u6lt6GGMH1FWEVYksFZeXb78r7PnhxZJS&#xA;EvTyF8+m7Z2jDNlxRiYevma5DnsndjLqtv8AlzHYyaRdm/Fs2n/VkVC/IxFRKasv7v8AH2zFmIHU&#xA;8QlHhviv48ve5eMzGl4TCXFXDXw5+5JPy0/T3lzRtQt7vQr6SUy+tEEVAGJCpxHNlPvWlKZldpeH&#xA;mnEiceTidl+JgxyEoSu7QP5a2PmHy/rl5JqWi3gS+jorxxhlUhi/xEkDfplvaU8ebGBGcfS1dmY8&#xA;uHITOEvU62tvM8P5jS+Zz5fvDZyM37kBPVCtF6YP2uNe9K4yliOm8LjjxfttYxzDVHN4cuH7eVIn&#xA;z1oHm2588WmqJpzarpVuYXt7UOoUBKF0cEkLyetTShGQ0OowxwGHFwzN7s9fp80tQJ8PHAVQUda8&#xA;t/mFL5rs/M0enQyXR4lbNJVKW5QcUSRiU5dakrtksOp04wnEZGu+ufuY59LqTmGYRF918ve9Zj9Q&#xA;RqJCDJQcyuwJpvSuc+fJ6MXW67Al5/8Am75RutZ022v9Pgae/s24NFGKs8MnWg6ni1D9Jzb9k6sY&#xA;5GMjUT97pu2NGcsBKIuUfuUrT8tVj/Lm40p4wdYuVF27bVFwgrHHX2HwfST3yU+0r1In/ANvh+N2&#xA;MOy60ph/Gd/j3foVPyi8pXmjWF5eajbtb391J6axyCjLFH/zUxP3DI9rasZJCMTcR96extHLFEyk&#xA;KkfuTf8AMvSNd1byw9no/wAU7So08IYIZIQDVASQPtcTSvbMfs3Njx5eKfKvtcntTDkyYeHHzv5h&#xA;hr+TvOOpeSIND/RkGnLYVnPN0Mt1OCwHHgeKfCxqXO5p2zZDWYYZzk4jLi28oj9PwdYdFnnpxj4R&#xA;Hh385H9HxZJpPl/zPdfl7daHqscVpdGD6vYxAhuKRooUyOpYVdgenQZhZdRijqBkhZF2f2Odh0+a&#xA;WmOOdA1Q/ah/y20/zfpVoujajpUdvp0byvNdSTKzsXGyoicq79ztTJ9pZMOQ8cZXLbamHZmPPjHh&#xA;yjUd97Y3B5S8+eS9flu9AthqFjLVAAQweMmqrIlVYMv8w/szNlq9PqcYGQ8MvxycCOj1OlyGWMcU&#xA;T+N2feXLnz3OZ77XbeC2hERFtpcFDK0gIPJpGZlWtKAcu+9KZqdRHTio4ySb3kXc6aWoNyyAAVtE&#xA;c/mw3RtF89ab53vPMR0BpIL15Q1uLq25KkrBqhudCRxzZZs2CeAY+PeNdD0+Dq8GDUQ1By+HtK9u&#xA;KPX4vV1JKgkFSRUqaVHttXOfejbxV2KuxV2KuxV2KuxV2KuxVI9U88eUtLYreanCsg6xRkyuPmsY&#xA;cj6cysWizZPpifu+9xMuvw4/qkPv+5j9x+dPk2I/u1urj3jiUf8AJx0zMj2NmP8ANHxcKXbmAcuI&#xA;/BST87/KLNQ298g8Wjip+EpwnsXN3x+39TEdu4e6XyH6030780PJN8wRdRW3c/s3CtEP+CYcP+Gz&#xA;HydmZ4/w37t3Jx9q6ef8Ve/Zk8E8E8QlgkWWJvsyIwZT8iNswZRINF2EZAixuvwJdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYX5w/NHRNAL2tvS/1Naq0EbUSM/8&#xA;WPvv/kjfxpmz0nZk8u59MfxydVre1ceHYeqf45vIPMPn3zPrrEXl20duelpBWOKnuAat/sic6LT6&#xA;DFi+kb955vNantDNm+o7dw5MezLcJ2KuxV2Ko7TNb1fSpfU068mtWrU+k5UH/WXo305XlwQyCpAF&#xA;txZ54zcSQ9D8vfndfwlYddtRcx9DdW4CSAeJQ/A30cc0+o7Fid8ZryLu9N27IbZBfmPx+p6hofmX&#xA;Q9cg9bTLtJwBV4xtIn+show+7NFn02TEamKd/g1WPKLgbTPKHIdirsVdirTukaM7sERRVmY0AA7k&#xA;nCBaCaYZr35teVNLYxQSNqNwNittQoD7yEhf+Brmywdk5sm59I8/1Or1HbGHHsPUfL9bDdQ/PTWJ&#xA;CRp+nQW69jMzzN8/h9IZssfYcB9Uifdt+t1mTt+Z+mIHv3/Ukz/m/wCeWaouokH8ohjp+IJzJHZG&#xA;DuPzcU9s6jvHyCItPzo84wkesLa5Hf1Iip/5JsmQn2NhPKx8WcO28450fh+pk2kfnnYyME1bTng8&#xA;ZrdhIv0o3Aj7zmDl7DkPolfvc/D29E/XGvczvRfNnlzWh/uNv4p5KVMNeEo/55vxb8M1WbSZMX1R&#xA;p2+DWYsv0SB+9Nsx3JdirsVdirsVdirsVdirsVdirsVYN511/X766k8teVYmlveIGo3ynitur9E5&#xA;nZXI+kDpv02uiwY4jxcx9PQd7qNdqMkz4WEer+I9yS6P+RtsOMutag8sh3eG2AVa/wDGRwxb/gRm&#xA;Tm7bPKEfm4uHsEc8kr9362W2X5a+SLQDhpccjDq0xeWv0OWH4Zr59pZ5fxfLZ2UOy9PH+EfHdNE8&#xA;s+W0UKmk2aqOii3iA/4jlB1OU/xS+ZcgaXEP4Y/ILZfK3lmVeMmkWTj3t4j93w4jVZRylL5lB0mI&#xA;84R+QSXUvyq8k3qmlibSQ/7stnZCPkp5J/wuZWPtTPHrfvcXL2Tp5/w17vxTB9e/JDU4A0ui3a3i&#xA;jcW81IpPkGrwb6eObTB21E7TFef4/a6nUdhTG+M8Xkdvx9jzzUtJ1PS7g2+oWslrMOiyqVrTup6E&#xA;e4zb48sZi4mw6TLhnjNSBBQmWNata3d1aTpcWszwTxmqSxsUYH2IocEoCQoiwyhMxNg0XpXlX86L&#xA;23Mdr5gj+tQ9PrsQAlUf5aCiv9FD880mq7Gid8ex7ujvdJ23KO2UWO/q9X0jW9K1i1F1ptylzCep&#xA;Q7qfBlNGU+xGaDLhnjNSFF6PDnhlFwNhG5U2pB5v86aV5YshNdH1bqX/AHms0I5ufE/yqO7Zl6TR&#xA;zzyocupcLWa6GCNnc9A8M8x+cvMfmm64XDsYC37mwgB9MeHwjd29znU6fR4sA2595eS1Oty6g78u&#xA;4KNr5H84XVPS0e6oehkiaMGvu/EZKWtwx5yj82MNBnlyhL5Iz/lWfnr/AKtMn/Bxf815X/KWD+d9&#xA;7b/Jeo/mfchrnyF5ytgTJo9yQOvpoZP+TfLLI67DLlINcuz88ecD96S3Ftc28hjuInhkHVJFKt9x&#xA;pmTGQIsG3FlExNEUpYWK5HdHDoxV1NVYGhBHcEYkWkGma+W/za8zaUyxXj/pOzGxjnP70D/Jl3b/&#xA;AIKuazU9k4sm8fSfL9TtdN2xlx7S9cfPn83rPlj8wPLfmFVS1n9G8PWznoklf8nej/7E5z+p0GXD&#xA;zFx7w9Hpe0cWbkal3FkmYTnOxV2KuxV2KuxV2KuxV2Koew06ysIDBZwrDGWLsBUlnY1Z2Y1LMe5J&#xA;rk8mSUzcjbDHjjAVEUk+v+ffK+hFo728VrletrD+8lr4EDZf9kRmTg0GXLvEbd5cXUdoYcW0jv3D&#xA;mwPU/wA9pCWXS9LAX9mW6ckn5xpSn/B5tcXYY/jl8vx+h1GXt8/wR+f6v2pBP+cvnWQsUkt4Q3QJ&#xA;CCF+XMv+OZcex8A7z8XCl21nPcPgsi/ODzwjcmuYpB/K0KAf8KFOE9kYD0PzQO2dQOo+Sd6b+emp&#xA;IQNS02GZe727NEaf6r+oD94zGydhx/hkR73LxdvzH1xB92362baJ+aXk/VSsf1o2U7dIrsCPf2ep&#xA;j/4bNXm7LzY+nEPL8W7XB2tgybXwnz/FMjvdP03VLQwXkEV3ayCoVwHU17j+ozDhklA3EkFzp44Z&#xA;I1IAh5v5k/JK0l5T6BcfV5Ov1S4JaP8A2Mgqy/TX55udN20RtkF+YdHquwonfEa8i8v1ry7rWiXH&#xA;oanaPbsTRHIqjf6riqt9Bze4dRDKLgbefz6bJiNTFJblzQjNL1bUtKu1u9OuXtrhejxmlR1ow6MP&#xA;Y7ZXlxRyCpCw2Ys08cuKJovTtG/PCllImr2XK9RD6EsBCxyPT4RIGPwe5Fflmjzdier0H0+b0GDt&#xA;701Mery/GyaaJ+XFlrUv+IPMd+usXN2fUEdu5+rKOyBlPJgvYCgHTfKM/aMsQ8PFHgA7+bfg7Mjl&#xA;Pi5ZcZPdyZ5YaVpmnRelYWsVrH04woqV+dBvmqyZZTNyJLuMeGEBUQAisrbHYq7FUNf6Zp2oQmC+&#xA;torqI/sSorj6KjbJ48soG4khryYozFSAIYF5g/JXQ7sPLpEz6fOd1hYmSAn6fjX7z8s22n7ZyR2m&#xA;OIfa6fUdh45bwPCfseYeYvI/mTy+xN/ak29aLdxfHCf9kPs/7IDN7p9bizfSd+7q6DU6DLh+obd/&#xA;RIMynDbBKkMpoRuCOoOKs88qfm7ruk8LbUq6lYrtVz+/Rf8AJc/a+TfeM1Wq7Jx5N4+mX2O40nbG&#xA;THtP1R+17B5d82aF5gt/V025EjL/AHkDfDKn+sh/WNs5zUaTJhNSH6nptNrMeYXA/rTfMdyXYq7F&#xA;XYq7FXYqhdT1Sw0uxlvr+ZYLWEVeRvwAA3JPYDLMWKU5CMRZLXlyxxxMpGgHifnD81tZ1mV7PSi9&#xA;hpxPEcDSeUHb4mH2a/yr9Nc6fSdlQxjin6pfYHlNb2vkynhh6Y/aWN2Xk3zZfAPb6VdOrbiRo2RT&#xA;XwZ+IOZk9ZhjzkHBhos0+UZfJMk/Kvz66hhpRAPjNbqfuMgOUntTT/zvsP6m8dk6n+b9o/Wtl/K7&#xA;z5EvJtKYj/Ilhc/crk4R2npz/F9h/Ug9lagfw/aP1pNqXl3XtMBN/p9xbIDT1JI2CV9npxP35kY9&#xA;Rjn9MgXGy6bJj+qJHwS7Lmh2KpzoPm/zFoUgOnXjxxA1Nux5wnxrG1V+kb5j59Jjy/UP1uVp9Zlw&#xA;/Sfh0eq+V/zm0m+4W+tR/o+5O31hatAx9/2k+mo980Gq7HnHeHqH2/teh0nbcJ7ZPSe/p+xns0On&#xA;anZcJUivLKda0IWSN1PQjqDmpEpQltYkHcGMckd6lEvPfMn5KaZdFp9Dn+ozGp+rS1eEn2bd0/4b&#xA;5ZuNN21KO2QcQ7+rpdT2HCW+M8J7un4+bzLXvJfmXQiTqFk6wD/j5T95Cew+NagV8Goc3mDWYsv0&#xA;nfu6uh1Ghy4fqjt39EjzJcRNND8y65oc/raZdvASavGN43/1kNVP3ZTn02PKKmLcjBqsmI3A09P8&#xA;u/ndZy8YdetTbP0+tW4Lx/7KM1dfoLZotR2LIb4zfkXf6bt2J2yCvMfj9b0TTNa0nVYfW067iuo+&#xA;5jYMR/rL1X6c0+XDPGakCHd4s8MguJBRuVNrsVdirsVaZVZSrAMrCjKdwQexxBUhg3mb8ovLuq8p&#xA;7D/cXeHesS1hY+8W1P8AYkfI5tdN2tkx7S9Q+35uo1XY+LJvH0S+z5PJvMfkTzL5fZmvbUvajpeQ&#xA;1eIj3IFV/wBkBnQafXYs30nfuPN5zU9n5cP1DbvHJj2ZbhKtrdXNrOlxayvBPGaxyxsVZT4gjfBK&#xA;IkKIsMoTMTYNF6V5W/Om+tuFtr8X1uHp9ciAWVR/lLsr/RQ/PNJquxoy3xmj3dHe6TtyUdsgsd/V&#xA;6ro2v6PrVt9Y0y7juY/2gp+Ja9nQ0ZfpGaHNgnjNSFPRYNRDKLgbTDKW52KuxV2KsFv/ACpqXnHU&#xA;Bda3LJZ6BA1bDTEqssg6erNUfAWHReoG229drj1UdNGoC8h5y6e4OoyaSepleQ8OMco9T5llGj+W&#xA;tB0dAum2MVsaUMirWQj/ACpDVz9JzBzanJk+okuww6XHi+iICZZQ3uxV2KtMqspVgCpFCDuCDirF&#xA;td/LPyjq4ZmsxaXDdLi1pEa+6gcD9K5n4O0s2PrY83XajsvBk6cJ7xs8z8x/k75i00PNpxGqWq70&#xA;jHGcD/jGSeX+xJPtm70/a+Oe0vSfs+bodT2LlhvH1j7fkwSSOSKRo5FKSIaOjAggjqCDm2BB3DqC&#xA;CDRWYoTzy35y1/y9Ny064IhJrJayfHC3zXt81ocxtTo8eYeob9/Vy9NrcmE+k7d3R6/5V/NnQNXC&#xA;W9+Rpt+aDjIf3Lk7fBJ2+TU+nOd1XZWTHvH1R+16XSdsY8m0vTL7PmzghXUggMjChB3BBzVcnb82&#xA;Ka7+V/lDVy0htfqVw3+7rSke/ulCh/4GubDB2nmx9eIebrtR2Vgyb1wny/FMD1j8jtYhJfSr2K7j&#xA;6iOYGGT5Ajmp+8ZtcPbcD9YI+10+bsGY+gg+/ZiV/wCQvONiT6+k3BA6tEvrL98XPNhj1+GXKQ+7&#xA;73W5Oz88OcD9/wByTj67Yzhh6trcLup+KNx8uhzJ9Mh3hxvVA9QWQWH5j+ebYLHBqs0vYLKqTsfp&#xA;kV2/HMTJ2dgluYj7vuczH2nqI7CR+/72U6bqf5y+YHWGJ5bO2fZ7qSCO3QA/tBygc/7DMDJj0WLc&#xA;0T3Xf4+LsMWXXZthcR31X6Pueo+XtEXR9OFsbmW8nc+pc3U7s7ySEAMasTQbbDNFqM3iSugB0Aeh&#xA;02Dwo1ZkepKZ5Q3uxV2KuIDAqwqDsQehGKsK8x/lN5X1bnLbIdMu2qfUtwPTJ/yotl/4Hjmz0/au&#xA;XHsfUPP9bqtT2Rhybj0y8v1PM9f/ACo82aUHlihGoWy7+pa1Z6e8R+P7gfnm7wdq4cmxPCfP9bod&#xA;R2Rmx7gcQ8v1MOdHRyjqVdTRlYUIPuDmyBt1hFKtlfXtjcLcWc8lvOn2ZYmKMPpGRnCMhUhYZQyS&#xA;gbiaL0Py9+desWgWHWbdb+IbfWEpFMB7gDg33D55p9R2LCW8Dw/c7rTduTjtkHF58i9A0j8zvJmp&#xA;gBb9bSU/7qux6JH+yP7v7mzUZezM8P4b92/7Xc4e1MGT+Kj57fsZJBe2c8fqwTxyxDcujqy79Nwc&#xA;wpQkDRDnxnEiwbQmo+YtD01Qby9ijZtkiDcpXJNAEjXk7GvYDLMenyT+kH8ebVl1OOH1Efp+SY5S&#xA;3uxV2KuxV2KuxV2KuxVJfMPk7y9r8ZGo2itNSi3KfBMvycdfkajMnT6zJi+k7d3RxdTosWYeob9/&#xA;V5R5n/JzXNO5T6Q36StRv6YHG4X/AGPR/wDY7+2dBpu2Mc9p+k/Y85quxckN4eofa8/mhmglaKZG&#xA;ilQ0eNwVYHwIO4zbAgiw6aUSDR5rMKGVeVvzH8x+XykMcv1uwWgNnOSVA/4rb7SfRt7Zg6rs7Hm3&#xA;IqXeHYaTtPLh2BuPcfxs9f8ALH5leWteCRCYWV81AbS4IUk+CP8AZf8AX7Zzmp7Ny4t6uPeHptL2&#xA;nizbXwy7iyvMB2LsVaeNJF4uoZfBhUfjhBpBFrUt4I25RxqjdKqoB/DEyJURA5BfgS7FXYq7FXYq&#xA;7FXYq7FUu1by3oOroV1KxhuSRTm6jmB7OKOPoOXYtRkx/SSGjNpseT64gsK1T8kPL1xVtPup7Jz0&#xA;VqTRj6Dxf/hs2eLtrIPqAl9jqsvYWI/STH7fx82MXv5HeY4qm0vLW5UdAxeJj9HFl/4bM6HbeM8w&#xA;Q4E+wco+kxP2Ja/5QeeFagtYnH8yzR0/EjLx2vg7z8mg9jajuHzCvafkx5ymYCYW9qvdpJeX4Rh8&#xA;hPtnCOVn4ModiZzzofH9T0Lyb+Vuk+X50vriQ32pIPgkZQscZPdE3+L/ACifuzT6ztSeYcI9MXd6&#xA;LsmGE8RPFJm2ax2rsVdirsVdirsVdirsVdirsVSnXvKnl/XY+Op2aTPSiTgcZV/1XWjfR0zIwarJ&#xA;iPpP6nG1Gkx5h6xf3vNNf/I+7j5y6HeCdOotbmiSfISD4W+kLm7wdtg7ZBXmHRajsKQ3xm/I/red&#xA;6toOs6RN6WpWctq1aKZFPFv9Vx8LfQc3GLPDILiQXSZtPkxmpghAZa0sq8ufmV5p0PjFHcfW7Nf+&#xA;PW5q6gdKK321+QNPbMDUdm4su9Ue8Ox03aebFsDce4vRtH/Ozy5chV1KCbT5f2mA9aL71o//AAma&#xA;fN2Lkj9JEvs/Hzd3h7cxS+sGP2j8fBltp5w8q3cfqQatasvcNKiMPmrlWH3Zr56PLE0Yy+Tsoa3D&#xA;IWJx+apL5o8tRRmSTVrNUXckzx/81ZEaXKf4ZfIpOrxDcyj8wraRrNhq9obywdpLXmUSYoyB+PUp&#xA;zAJWu1cjmwyxnhlzZ4c0ckeKPJG5U2uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KrJoIJ4minjWWJxR43AZSPcHbDGRBsIlEEUdwxTVfyq8l6gSwszZyN1e1Yx/ch5&#xA;Rj/gc2GLtTPDrfv/ABbrsvZOCfTh934pid/+RB5FtP1b4e0dxFuP9mh3/wCBzPx9ufzo/Iutydgf&#xA;zZfMJJcfkp5vjP7uS0nHbhIwP/DouZUe2sJ58QcWXYeccuE/H9inF+THnN3CsLaIH9t5SQP+BVj+&#xA;GE9s4B3/ACYjsTOe75so0D8kLOCRZtbvPrVKEW0AKIT/AJTn4iPkBmDn7bkRWMV5l2Gn7CiDeQ35&#xA;B6db28FvBHBBGsUMShI40ACqoFAABmjlIk2ebv4xERQ5L8CXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FX//2Q==</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:7282925A626311DE87CE82190EF9B81E</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:2F9549E4626B11DE87CE82190EF9B81E</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:72829259626311DE87CE82190EF9B81E</stRef:instanceID>
            <stRef:documentID>uuid:72829258626311DE87CE82190EF9B81E</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <photoshop:ColorMode>3</photoshop:ColorMode>
         <photoshop:History/>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_AGM_Core/capture_currentpagedevice get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -208.281 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 208.281 li571.016 208.281 li571.016 0 licpclp[1 0 0 1 0 0 ] concat325.597 50.458 mo323.853 50.335 321.323 50.8599 320.787 49.6484 cv320.163 48.2388 319.625 46.6113 318.93 45.2671 cv318.915 45.1558 318.828 45.062 318.977 45.0288 cv318.944 44.9648 318.832 45.0703 318.787 44.9336 cv318.521 44.2817 318.321 43.7026 318.072 43.124 cv317.482 41.7524 316.825 40.439 316.215 38.9331 cv316.162 38.8027 316.172 38.6299 316.12 38.5044 cv316.106 38.4727 316.01 38.4604 315.977 38.4092 cv315.73 38.0293 315.606 37.4609 315.405 36.9805 cv314.861 35.6802 314.121 34.2036 313.596 32.79 cv313.17 33.0977 313.266 33.4346 312.882 33.9805 cv312.86 34.0103 312.667 34.1167 312.691 34.0757 cv312.537 34.3418 312.434 34.6382 312.263 34.9331 cv311.934 35.499 311.588 36.1152 311.263 36.6948 cv311.104 36.9751 311.004 37.2856 310.738 37.457 cv310.563 38.1421 310.003 38.7583 309.596 39.457 cv309.409 39.7764 309.268 40.1689 309.072 40.5049 cv308.882 40.8301 308.742 41.2148 308.453 41.4097 cv308.474 41.6504 308.168 42.1904 307.977 42.2192 cv308.018 42.3252 307.976 42.4849 307.881 42.6479 cv307.82 42.7529 307.585 42.9033 307.596 42.8857 cv307.572 42.9233 307.612 43.0737 307.596 43.124 cv307.481 43.4683 306.975 44.1953 306.738 44.6001 cv306.593 44.8496 306.391 45.0806 306.262 45.3145 cv306.131 45.5532 306.104 45.8779 305.833 45.9336 cv305.854 46.3501 305.327 46.7832 305.357 47.2192 cv304.937 47.561 304.755 48.1411 304.548 48.6958 cv304.395 48.7324 304.287 48.8159 304.214 48.9336 cv304.133 49.0967 304.267 49.229 304.167 49.4102 cv304.082 49.4521 304.046 49.543 303.881 49.5054 cv303.618 49.9414 303.183 50.5103 302.548 50.5527 cv301.548 50.6201 300.347 50.7344 299.547 50.2197 cv299.522 50.0698 299.464 49.9541 299.404 49.8389 cv298.846 49.1436 298.127 48.3535 297.976 47.4102 cv297.726 47.1367 297.659 46.6787 297.452 46.3623 cv297.392 46.2173 297.416 46.1772 297.5 46.0767 cv297.225 46.1572 297.258 45.6143 297.023 45.4097 cv297.02 45.3423 297.016 45.2749 297.071 45.2671 cv296.783 44.9468 296.668 44.3013 296.309 43.7432 cv296.351 43.5747 296.187 43.4976 296.356 43.4575 cv296.324 43.3931 296.212 43.499 296.166 43.3618 cv293.889 37.8491 291.589 32.8154 289.404 27.4087 cv288.218 24.8154 287.071 22.2407 286.166 19.7891 cv285.886 19.6206 285.709 18.7056 285.403 18.2651 cv285.499 18.001 285.48 18.1655 285.355 18.1221 cv284.11 14.9258 282.15 10.8472 280.689 7.31201 cv280.557 6.99219 280.537 6.71045 280.355 6.40723 cv279.785 5.45264 278.849 4.74805 278.355 3.78809 cv278.16 3.6626 277.822 3.31934 277.641 3.02588 cv275.563 3.5293 275.978 0.216309 277.498 0.216309 cv277.81 0.216309 277.952 0.430664 278.403 0.406738 cv278.456 0.480469 278.558 0.505859 278.546 0.64502 cv279.838 0.588867 281.186 1.08057 282.737 1.07373 cv284.85 1.06445 287.37 0.979492 289.261 1.02588 cv289.328 0.883789 289.408 1.02539 289.499 0.882813 cv289.694 0.948242 289.888 0.768066 289.976 0.882813 cv290.065 0.87793 290.008 0.725586 290.118 0.740234 cv290.8 0.594238 291.415 0.870117 291.976 0.740234 cv292.087 0.714355 292.149 0.59082 292.261 0.549805 cv292.827 0.341797 293.616 0.446777 294.309 0.549805 cv294.468 1.42969 294.03 2.08936 293.643 2.97852 cv292.91 3.31641 292.184 3.99414 291.785 4.40723 cv291.79 4.40186 291.634 4.6792 291.499 4.59766 cv291.419 4.96143 291.449 5.43652 291.261 5.69287 cv292.344 7.75732 292.854 9.62842 293.785 11.4551 cv293.8 11.5659 293.777 11.6382 293.737 11.6934 cv293.884 11.6743 294.139 12.2446 294.118 12.5029 cv294.195 12.5342 294.836 13.8628 294.737 14.0742 cv294.744 14.1626 294.898 14.1035 294.928 14.1699 cv296.464 18.0088 298.1 21.8896 299.69 25.5991 cv300.224 26.8423 300.72 28.2148 301.31 29.5991 cv301.534 30.127 301.894 30.6108 301.929 31.1709 cv302.633 32.3413 303.288 34.3955 303.977 35.9805 cv304.144 36.3662 304.402 36.7964 304.548 37.2188 cv305.594 35.6328 306.368 33.8311 307.31 32.0757 cv307.583 31.5664 307.898 31.0669 308.167 30.5518 cv308.449 30.0088 308.688 29.4458 309.072 28.98 cv309.019 28.6646 309.416 28.4097 309.453 28.0278 cv309.575 28.0239 309.521 27.8057 309.644 27.9326 cv309.787 27.1997 310.369 26.6333 310.596 25.8848 cv310.413 25.2622 309.939 24.5908 309.738 23.98 cv309.72 23.9233 309.779 23.8208 309.786 23.8369 cv309.611 23.4185 309.336 22.9761 309.215 22.5513 cv309.172 22.4004 309.102 22.4414 309.024 22.313 cv308.681 21.7402 308.496 20.9199 308.215 20.2178 cv308.077 19.874 307.876 19.542 307.738 19.2178 cv307.183 17.9136 306.651 16.5566 306.167 15.4556 cv306.133 15.3774 306.052 15.4316 306.023 15.3604 cv305.964 15.208 305.977 14.9692 305.929 14.8838 cv305.88 14.7964 305.812 14.6216 305.738 14.4556 cv305.609 14.166 305.181 13.3687 304.929 12.7886 cv304.535 11.8828 304.144 10.9834 303.881 10.1221 cv303.19 8.88867 302.351 6.66748 301.643 5.12158 cv301.394 5.021 301.208 4.48926 300.976 4.2168 cv300.03 3.7832 298.974 3.6001 298.214 3.07373 cv297.962 3.06543 297.971 3.04297 297.737 3.07373 cv297.393 2.49609 297.164 1.40088 297.5 0.692383 cv298.318 0.175781 299.047 0.645508 299.928 0.740234 cv300.402 0.791016 300.87 0.811523 301.404 0.882813 cv303.497 1.16309 307.881 1.1416 310.548 1.02588 cv311.102 1.00195 311.587 0.827637 312.119 0.740234 cv313.258 0.552734 314.344 0.88623 315.263 0.501953 cv315.633 0.629395 315.973 0.439453 316.405 0.549805 cv316.526 0.759277 316.536 1.32959 316.882 1.45459 cv316.881 2.19922 316.582 2.64697 316.405 3.2168 cv315.386 3.125 314.609 3.53223 313.501 3.59766 cv313.323 3.67432 313.176 3.78076 312.977 3.83545 cv312.902 4.03076 312.954 4.35352 312.834 4.50244 cv313.17 4.76465 313.363 5.01563 313.596 5.5498 cv313.737 5.87451 313.909 6.17334 313.786 6.35938 cv314.022 6.32275 314.216 6.97119 314.215 7.16895 cv315.229 9.00439 316.104 11.5117 316.977 13.1221 cv316.979 13.4229 317.035 13.3682 317.072 13.5508 cv317.418 13.2842 317.57 12.7651 317.786 12.3599 cv318.418 11.1758 319.1 9.88574 319.787 8.69336 cv320.521 7.11768 321.466 5.51953 322.263 3.93115 cv322.236 3.60938 321.813 3.69824 321.882 3.50244 cv320.971 3.61816 320.287 3.33105 319.596 3.02588 cv319.483 2.8584 319.538 2.80518 319.501 2.59766 cv319.081 2.33643 318.794 1.33691 319.12 0.787598 cv319.432 0.770996 319.496 0.693848 319.691 0.501953 cv320.136 0.501953 320.58 0.501953 321.024 0.501953 cv321.061 0.592285 321.167 0.535156 321.072 0.64502 cv322.396 0.697266 323.438 1.15381 325.12 1.21631 cv325.347 1.22461 325.604 1.36084 325.787 1.35938 cv326.032 1.35693 326.373 1.18018 326.691 1.16895 cv326.783 1.16553 326.938 1.22607 327.025 1.21631 cv327.368 1.17871 327.681 0.955078 328.025 0.882813 cv328.337 0.817871 328.604 0.939941 328.835 0.740234 cv329.518 0.858398 330.198 0.495605 330.597 0.64502 cv330.746 0.659668 330.476 0.507324 330.645 0.501953 cv331.287 0.411621 332.033 0.468262 332.502 0.692383 cv332.563 1.60693 332.573 2.37891 332.454 3.26416 cv331.898 3.50684 331.053 3.31543 330.359 3.5498 cv329.766 3.75049 329.528 4.21826 329.12 4.2168 cv329.011 4.35596 328.99 4.30859 328.978 4.50244 cv328.669 4.47559 328.463 4.76514 328.168 4.59766 cv327.878 5.26123 327.446 6.19238 326.978 6.83594 cv326.896 7.16992 326.717 7.51953 326.549 7.83594 cv326.398 8.12109 326.227 8.47852 326.025 8.59766 cv325.902 9.13818 325.624 9.6333 325.263 10.0742 cv325.043 10.812 324.591 11.4941 324.216 12.2173 cv323.843 12.9351 323.506 13.6924 323.12 14.4077 cv322.888 14.8389 322.573 15.2217 322.358 15.646 cv321.906 16.5366 321.428 17.5957 320.93 18.5508 cv320.789 18.8213 320.646 19.1069 320.453 19.2178 cv320.607 19.5371 320.12 19.7681 320.072 20.0273 cv319.99 20.478 320.84 21.4023 320.787 21.9795 cv321.017 22.0122 321.071 22.5674 321.263 22.7891 cv321.276 22.9282 321.252 22.9531 321.168 22.8843 cv321.672 23.5918 322.192 24.8408 322.501 25.7896 cv323.335 27.3447 324.307 29.6592 325.072 31.5039 cv325.771 32.7329 326.184 34.1968 326.883 35.314 cv327.437 34.7461 327.433 33.7314 327.93 33.0278 cv327.953 32.7695 328.037 32.3579 328.216 32.4092 cv328.176 32.3535 328.153 32.2813 328.168 32.1709 cv328.28 32.1558 328.196 31.9453 328.358 31.9805 cv328.55 30.9482 329.157 29.9219 329.454 28.8374 cv329.544 28.8018 329.487 28.6953 329.597 28.7896 cv329.868 27.6313 330.496 26.1885 330.978 24.9321 cv331.095 24.6265 331.177 24.2129 331.406 24.0752 cv331.35 23.8906 331.444 23.5483 331.597 23.5513 cv331.589 23.0874 331.952 22.416 332.121 22.1226 cv332.132 21.7041 332.394 21.3291 332.55 20.9321 cv332.693 20.564 332.722 20.0239 333.025 19.8843 cv332.964 19.7554 333.004 19.7148 333.025 19.5034 cv333.646 18.1592 334.31 16.2036 334.979 14.4556 cv335.396 13.3618 335.917 12.0981 336.406 10.8359 cv336.4 10.7183 336.465 10.7554 336.454 10.8359 cv336.545 10.1455 337.062 9.34912 337.217 8.59766 cv337.321 8.57129 337.278 8.32227 337.407 8.45508 cv337.478 7.56055 338.136 6.65186 338.217 5.97852 cv338.483 5.71875 338.56 4.77441 338.883 4.59766 cv338.771 4.48584 338.891 4.36377 338.883 4.2168 cv338.574 3.86426 338.093 3.96338 337.74 3.69287 cv337.096 3.98779 336.402 3.44141 335.979 2.97852 cv335.995 2.11279 335.899 1.13574 336.169 0.64502 cv336.348 0.59082 337.046 0.413574 337.073 0.549805 cv337.091 0.637207 337.299 0.543945 337.692 0.501953 cv337.822 0.562988 337.843 0.73291 337.979 0.787598 cv338.509 0.742188 338.89 1.125 339.455 1.21631 cv339.775 1.26855 340.228 1.24463 340.646 1.26416 cv341.614 1.30908 342.587 1.27686 343.313 1.07373 cv343.639 0.934082 344.061 0.631348 344.503 0.597656 cv344.651 0.585938 344.775 0.688965 344.932 0.692383 cv345.35 0.702148 345.85 0.399902 346.169 0.740234 cv346.234 1.60742 346.26 2.10205 346.026 2.97852 cv345.495 3.23975 345.471 3.54883 344.836 3.78809 cv344.294 4.46826 343.754 5.15039 343.265 5.8833 cv343.1 6.49072 342.853 7.08545 342.598 7.74072 cv342.531 7.91064 342.483 8.18848 342.312 8.2168 cv342.021 9.41748 341.381 10.623 340.884 11.9316 cv340.856 12.001 340.904 12.0981 340.884 12.1694 cv340.664 12.9038 340.114 13.5137 340.074 14.2646 cv339.488 15.1602 339.306 16.4014 338.692 17.3604 cv338.767 17.4937 338.666 17.7896 338.502 17.8364 cv338.506 18.2168 338.25 18.6475 338.074 19.0747 cv337.907 19.4771 337.834 20.0137 337.55 20.1699 cv337.536 20.5371 337.394 20.9141 337.121 21.3608 cv337.187 21.4219 337.168 21.5674 337.169 21.6938 cv336.336 23.0449 336.035 24.6362 335.264 26.0273 cv334.996 27.1733 334.322 28.3232 333.979 29.5518 cv333.757 29.5645 333.799 30.3022 333.502 30.4087 cv333.505 30.7534 333.389 31.0762 333.121 31.4092 cv332.926 32.3813 332.338 33.3462 332.025 34.4565 cv331.936 34.4922 331.992 34.5986 331.883 34.5044 cv331.798 35.3755 331.117 36.3052 330.978 37.1235 cv330.649 37.6362 330.537 38.2363 330.312 38.7905 cv329.899 39.7988 329.475 40.8477 329.025 41.981 cv328.829 42.4766 328.481 43.2964 328.358 43.5527 cv328.413 43.5615 328.385 43.6006 328.358 43.6001 cv328.214 43.8936 328.115 44.2998 327.978 44.6479 cv327.847 44.9814 327.721 45.3916 327.502 45.5049 cv327.311 46.978 326.303 47.8452 326.264 49.5527 cv326.045 49.7363 325.772 50.0938 325.597 50.458 cvcpfalse sop/0 [/DeviceRGB] /CSA add_res0 0.643137 0.894118 rgbef45.959 8.02637 mo46.6704 9.6333 47.9956 12.0234 48.6738 13.8838 cv49.0601 14.4165 49.4312 15.2109 49.769 15.9316 cv49.9434 16.3042 50.1201 16.7021 50.293 17.0747 cv50.4575 17.4302 50.7334 17.8027 50.6738 18.1699 cv51.0127 18.3081 51.0625 18.7417 51.1978 19.0273 cv52.8271 22.4658 54.4268 25.6973 56.0552 29.1709 cv56.6333 30.4033 57.2148 31.6602 57.8647 32.8374 cv59.0762 30.3823 60.3325 27.7368 61.5791 25.0273 cv62.7944 22.3867 64.1895 19.7466 65.3413 17.1699 cv66.5669 14.4282 67.8452 11.8633 68.9131 9.59814 cv69.6973 7.93457 70.5171 6.17822 71.1992 4.69287 cv71.6421 3.72705 71.9126 3.2207 72.3418 2.31152 cv72.4702 2.04053 72.6758 1.55713 73.2466 1.45459 cv74.0889 1.30322 75.0664 1.43262 76.0088 1.40723 cv77.5283 1.36572 79.2681 1.3584 81.1519 1.31152 cv81.8042 1.29541 82.4814 1.31348 83.1045 1.31152 cv84.7539 1.30615 87.0044 1.2915 88.6763 1.16895 cv89.0469 1.1416 89.7124 1.62939 90.2002 1.59766 cv90.2002 2.51807 90.2002 3.43896 90.2002 4.35938 cv90.0278 4.65918 89.792 4.89551 89.5811 5.07373 cv88.0229 5.44629 86.3516 5.81055 84.5806 6.26465 cv84.5259 18.9087 84.6963 32.0322 84.4854 44.3623 cv85.0903 45.0029 86.1807 45.2417 87.2002 45.6479 cv87.6709 45.8354 88.1826 46.061 88.6763 46.2671 cv89.6704 46.6816 90.5732 46.9478 90.9624 47.8862 cv91.1353 48.3042 90.9165 48.6279 91.2002 48.9814 cv90.8848 48.9063 91.1631 49.2222 91.0098 49.4575 cv90.5 49.5518 90.3735 49.4512 90.105 49.6006 cv89.584 49.8901 88.0879 49.7432 87.105 49.7432 cv81.3394 49.7432 74.9971 49.6362 69.437 49.6006 cv68.3604 49.666 66.9751 49.7476 66.8652 48.6479 cv66.8433 48.4268 66.9087 48.1992 67.0083 47.8384 cv67.1318 47.3921 67.4194 46.7881 67.9131 46.5527 cv68.6323 46.21 69.8413 46.1665 70.7227 46.0767 cv71.4995 45.9971 72.2563 45.8516 72.9609 45.6006 cv73.0674 36.813 72.9131 29.5513 72.9136 20.5513 cv72.9136 17.7749 72.9268 15.2935 72.8184 12.9316 cv72.5728 12.9868 72.5215 13.3276 72.437 13.5029 cv72.1147 14.1738 71.5942 15.4692 71.1514 16.5029 cv70.9707 16.9248 70.71 17.1284 70.7227 17.5034 cv70.4165 17.9619 70.2261 18.541 70.0083 19.0747 cv69.7686 19.6631 69.4541 20.2129 69.1987 20.7891 cv67.0947 25.5435 64.5098 31.5322 62.3887 36.3613 cv61.1758 39.1235 60.1875 41.4941 58.96 44.2671 cv58.8638 44.4844 58.7573 44.8008 58.5313 44.9336 cv58.3345 45.7305 57.9741 46.5864 57.5791 47.3623 cv57.4478 47.6201 57.4004 47.7495 57.2456 48.124 cv57.1152 48.4404 56.9526 48.7344 56.7695 48.9336 cv56.4658 49.1895 55.9995 49.1416 55.2456 49.2197 cv54.4863 49.2979 53.7461 49.6021 53.1978 49.0293 cv53.0483 48.873 52.8276 48.4175 52.6738 48.0767 cv52.5166 47.7275 52.376 47.3623 52.2456 47.0767 cv51.2979 44.9995 50.4722 43.2495 49.5308 41.124 cv48.2637 38.2622 47.0859 35.7144 45.959 33.2188 cv45.3071 31.854 44.7285 30.4819 44.1494 29.1709 cv43.2749 27.1895 42.4487 25.5566 41.4829 23.4082 cv41.2808 22.959 41.1221 22.5488 40.9111 22.0747 cv40.4897 21.1274 39.8271 19.7744 39.2446 18.5034 cv38.7188 17.356 38.3281 16.3291 37.7207 15.0269 cv37.5093 14.5742 37.313 14.1689 37.1489 13.7886 cv36.9858 13.4087 36.8945 13.1753 36.6729 12.8838 cv36.394 13.1157 36.6118 13.4058 36.6255 13.7412 cv36.6426 14.1821 36.6738 14.6763 36.6729 15.1221 cv36.6553 23.9395 36.4888 34.5444 36.5776 44.0288 cv37.647 44.8301 38.98 45.5 40.3398 46.2671 cv40.9775 46.627 41.4692 47.105 42.2925 47.3145 cv42.9761 47.7388 43.2759 48.375 42.7686 49.4575 cv42.3477 49.3584 42.4023 49.6265 41.8638 49.6484 cv41.6313 49.6577 41.4355 49.5337 41.1968 49.5054 cv40.0674 49.3711 38.6011 49.5093 37.3398 49.5527 cv33.3384 49.6914 29.3105 49.8169 25.5293 49.8862 cv24.5342 49.6943 24.6733 48.2451 24.8149 47.1719 cv25.0737 46.9209 25.4102 46.9932 25.7197 46.9336 cv26.2261 46.8364 26.6924 46.584 27.1484 46.4097 cv27.4048 46.312 27.9302 46.4199 28.3389 46.3623 cv29.4048 46.2119 30.0498 45.3457 30.8154 44.9336 cv30.6934 44.7876 30.9175 44.6831 30.9585 44.5527 cv31.0361 42.3286 30.958 38.5728 31.0537 36.314 cv31.0205 34.2588 31.0869 31.8018 31.0537 29.647 cv30.9775 24.7031 31.2261 20.5537 31.1963 16.0747 cv31.1802 13.6572 31.1914 11.2617 31.2441 9.07422 cv31.2261 8.31055 31.2554 6.60205 31.2441 5.69287 cv31.0771 5.65479 30.3701 5.57715 30.4346 5.31201 cv30.2168 5.51465 29.9663 5.24658 29.7676 5.16895 cv29.1655 4.93457 28.4619 4.71777 27.6724 4.50244 cv26.73 4.08838 26.002 3.80469 25.6245 2.93066 cv25.5762 2.24707 25.7549 1.7915 25.958 1.35938 cv26.4341 1.35791 26.6836 1.0293 27.1484 0.978516 cv28.0918 0.875 29.2266 1.04785 30.3867 1.07373 cv32.3472 1.11719 34.6123 1.20117 36.6255 1.26416 cv37.7446 1.29932 38.8071 1.26709 39.7207 1.35938 cv39.8403 1.37109 40.0454 1.3916 40.0063 1.40723 cv40.2334 1.31982 41.4673 1.41064 41.8638 1.50195 cv43.1533 1.80029 43.377 2.60303 43.8638 3.64502 cv44.6016 5.22412 45.311 6.59814 45.959 8.02637 cvcpef457.796 43.6953 mo459.895 45.0044 462.702 46.0869 464.32 47.3145 cv464.43 47.873 464.598 48.2256 464.511 48.791 cv462.958 49.1948 460.938 49.1152 458.891 49.0767 cv457.471 49.0498 456.021 48.9795 454.605 48.9814 cv451.61 48.9863 448.728 48.9795 445.985 48.9336 cv445.47 48.9253 444.963 48.915 444.557 48.6958 cv444.325 48.2368 444.51 47.3823 444.557 46.8862 cv445.929 46.0259 447.572 45.7275 449.081 44.9336 cv449.1 44.7617 449.145 44.6157 449.224 44.5049 cv449.051 39.5757 449.13 33.3687 449.129 28.0278 cv449.128 26.9292 449.247 25.7163 448.891 25.1704 cv448.854 25.1152 448.678 24.9673 448.604 24.8848 cv448.202 24.4297 447.379 23.8774 446.699 23.6943 cv446.194 23.5576 445.997 23.6675 445.604 23.2656 cv445.214 22.8652 445.226 22.04 445.795 21.5034 cv446.244 21.0801 448.093 20.8135 448.938 20.4561 cv449.245 20.3257 449.462 20.0117 449.748 20.1226 cv449.883 19.8115 450.26 19.7402 450.51 19.5986 cv451.301 19.1494 452.123 18.4341 452.796 17.7412 cv453.27 17.2524 453.725 16.5278 454.081 16.3125 cv454.28 16.1924 454.514 15.9946 454.891 15.7412 cv455.3 15.4663 455.733 15.4199 456.225 15.3125 cv456.766 15.3428 457.256 15.4238 457.7 15.5508 cv457.771 15.8525 457.982 16.0547 458.034 16.4077 cv458.116 16.9707 458.004 17.6025 457.986 18.1699 cv457.935 19.8169 457.77 21.2832 457.891 22.7891 cv458.005 22.8184 458.236 22.7295 458.271 22.8369 cv458.403 21.8223 459.118 20.627 459.796 19.7891 cv460.078 19.4404 460.34 19.0806 460.748 19.0747 cv460.752 18.875 460.637 19.041 460.701 18.8843 cv462.236 17.9551 464.127 16.9575 466.177 17.5034 cv466.253 17.5234 466.519 17.5557 466.605 17.646 cv466.641 17.6821 466.615 17.7935 466.605 17.7891 cv466.761 17.8662 466.889 17.7832 466.987 17.8364 cv467.481 18.1074 468.217 18.8247 468.797 19.2651 cv469.225 20.2607 469.634 21.3164 469.368 22.7891 cv469.336 22.9668 469.227 23.1338 469.178 23.313 cv469.042 23.8057 468.685 24.8398 468.178 25.4561 cv468.088 25.5649 468.061 25.5396 467.939 25.6943 cv467.839 25.8228 467.732 26.0029 467.653 26.0752 cv467.641 26.0874 467.501 26.0454 467.463 26.0752 cv467.419 26.1099 467.479 26.1855 467.416 26.2183 cv466.456 26.7095 464.621 26.6929 463.511 26.2183 cv462.981 25.9917 462.369 25.5225 461.796 25.1704 cv460.848 24.5874 460.183 23.9546 459.082 24.4561 cv458.9 24.7041 458.578 24.9937 458.367 25.3608 cv458.281 25.5107 458.239 25.7456 458.129 25.9321 cv457.996 26.1582 457.826 26.1992 457.796 26.4087 cv457.768 26.604 457.895 26.8989 457.891 27.0278 cv457.766 31.9292 457.787 38.4351 457.796 43.6953 cvcpef188.492 46.3145 mo189.494 46.6475 190.172 46.7847 191.254 46.9814 cv191.61 47.0459 192.02 47.0425 192.302 47.1719 cv193.023 47.5015 193.1 48.5874 193.064 49.7432 cv192.688 50.1514 191.956 50.5806 191.35 50.2197 cv186.442 50.25 181.201 50.1035 176.253 50.0767 cv175.272 50.0713 174.227 50.1377 173.444 49.9341 cv173.18 49.5063 172.839 49.1021 173.11 48.4575 cv173.212 48.2173 173.467 48.1123 173.682 47.8384 cv173.896 47.5664 173.922 47.3223 174.063 47.2192 cv174.353 47.0068 174.84 47.0166 175.253 46.8862 cv176.33 46.5469 177.753 46.0146 178.968 45.6479 cv179.039 45.1265 179.057 44.0229 178.968 43.7905 cv178.968 43.6172 179.209 43.7319 179.016 43.6001 cv179.336 43.4316 178.906 43.3418 179.254 43.3618 cv179.195 38.5728 179.185 33.041 178.873 28.5991 cv178.886 27.6079 178.858 27.0469 178.825 26.2183 cv178.79 25.3286 178.952 24.2402 178.635 23.6465 cv178.033 23.625 177.278 23.3721 176.539 23.1704 cv175.824 22.9746 175.028 22.8057 174.492 22.4561 cv174.28 22.5957 174.075 22.3823 173.825 22.4082 cv173.832 21.8271 173.439 21.7158 173.587 21.0747 cv173.693 20.6123 174.302 20.1333 174.825 19.9795 cv175.703 19.7217 176.923 19.9502 177.825 19.7891 cv178.429 19.6816 179.847 18.8843 180.444 18.5986 cv181.378 18.1514 182.776 17.3135 183.968 16.7412 cv184.601 16.4375 184.879 16.2773 185.683 16.1221 cv186.187 16.0249 186.708 15.7617 187.207 15.8364 cv188.211 15.9873 188.076 16.9282 188.159 17.8843 cv188.164 17.9443 188.216 17.9023 188.207 17.8843 cv188.315 18.0928 188.211 18.4092 188.207 18.646 cv188.131 23.0327 188.2 27.8838 188.35 32.2661 cv188.35 32.2813 188.34 32.709 188.35 33.0278 cv188.491 37.8057 188.316 41.8188 188.492 46.3145 cvcpef232.4 35.5518 mo232.237 35.915 231.776 36.1172 231.495 36.2188 cv231.457 36.3833 231.584 36.4199 231.495 36.5044 cv231.115 36.4253 231.201 36.9292 230.686 36.8379 cv230.342 37.3198 229.885 37.6885 229.352 37.981 cv229.386 38.2212 229.206 38.2471 229.257 38.5044 cv228.205 39.7148 228.506 43.0898 228.971 44.6001 cv229.379 45.0366 230.368 45.2876 231.114 45.4097 cv232.015 45.5571 232.546 44.9648 233.305 44.6001 cv233.758 44.3823 234.143 44.1489 234.638 43.8857 cv234.962 43.7139 235.292 43.5679 235.543 43.4097 cv236.087 43.0669 236.588 42.3662 237.21 42.0762 cv238.026 41.2666 237.829 39.7856 237.829 38.0283 cv237.829 36.4185 237.811 34.9355 237.781 33.6948 cv236.083 34.3643 234.32 34.835 232.4 35.5518 cvcp246.449 44.2192 mo246.636 44.2192 247.031 44.145 247.354 44.2192 cv247.662 44.0518 247.909 43.8228 248.163 43.6001 cv248.301 43.2163 248.458 42.668 248.544 42.6001 cv248.663 42.5054 249.076 42.0879 249.734 42.2192 cv250.119 42.2959 250.569 42.7793 250.592 43.3145 cv250.615 43.8647 250.105 45.0879 249.925 45.6953 cv249.874 45.8696 249.826 46.0684 249.734 46.2671 cv249.671 46.4043 249.53 47.02 249.354 47.3145 cv249.03 47.854 248.294 48.2598 248.21 48.7432 cv247.889 48.7344 247.916 48.7866 247.639 48.791 cv247.325 49.1597 246.663 49.1802 246.258 49.4575 cv245.19 49.3237 244.177 49.5806 243.21 49.4102 cv243.053 49.3823 242.89 49.2051 242.687 49.1719 cv242.259 49.1025 242.083 48.9873 241.734 48.8862 cv241.439 48.8008 241.105 48.8877 240.924 48.7432 cv239.807 47.8521 239.606 46.2744 238.781 44.6479 cv237.747 45.3687 236.353 46.1509 235.543 46.791 cv235.427 46.8828 235.293 47.041 235.257 47.1719 cv234.316 47.5322 233.679 48.1968 232.876 48.6958 cv232.134 48.8652 231.428 49.0747 230.733 49.2671 cv230.049 49.4565 229.39 49.7886 228.733 49.8862 cv228.154 49.9722 227.456 49.8862 226.828 49.8862 cv225.755 49.8862 224.87 49.9316 224.161 49.7432 cv223.943 49.6855 223.758 49.5337 223.542 49.4575 cv223.301 49.373 223.035 49.3916 222.875 49.3149 cv222.395 49.0835 222.107 48.6421 221.685 48.3623 cv221.069 47.9546 220.436 47.8354 220.019 47.3145 cv219.641 46.8438 219.473 46.147 219.256 45.6953 cv219.22 45.6191 219.059 45.5396 219.018 45.3145 cv218.932 44.8403 218.982 43.8301 219.018 43.2666 cv219.038 42.9585 219.159 42.6147 219.256 42.2666 cv219.436 41.6226 219.447 41.1006 219.875 40.6953 cv219.867 39.5132 220.424 38.8984 220.971 38.314 cv221.12 38.1553 221.34 37.8223 221.447 37.7427 cv221.943 37.373 222.622 37.0723 223.209 36.7427 cv223.73 36.4497 224.282 36.1821 224.781 35.8853 cv225.925 35.2031 227.1 34.6245 228.209 33.9331 cv228.748 33.876 229.296 33.4014 229.686 33.5044 cv231.638 32.6201 233.754 31.7148 236.115 31.2183 cv236.216 31.0044 237.376 30.6128 237.448 30.3135 cv237.476 30.1963 237.272 29.9077 237.257 29.7896 cv237.155 28.9922 237.189 28.0186 237.067 26.8369 cv236.938 25.5913 236.828 24.3818 236.686 23.1704 cv236.64 22.7773 236.606 21.7793 236.448 21.5513 cv236.135 21.0991 236.147 21.0674 235.733 20.7412 cv235.66 20.6831 235.578 20.667 235.496 20.5986 cv235.221 20.3696 234.496 19.8682 233.972 19.5508 cv233.729 19.5171 233.505 19.7495 233.305 19.5986 cv231.983 20.0835 230.576 20.2871 229.209 20.8369 cv228.904 21.0493 228.828 21.5215 228.495 21.7417 cv228.203 21.9346 227.947 22.9941 227.733 23.6943 cv227.676 23.8813 227.532 24.0669 227.495 24.2178 cv227.478 24.2896 227.564 24.3804 227.542 24.4561 cv227.463 24.7324 227.342 25.0063 227.257 25.3135 cv227.12 25.8057 226.958 26.415 226.733 26.98 cv226.574 27.3774 226.479 27.7603 226.019 27.98 cv225.91 28.0317 225.725 27.9976 225.638 28.0278 cv225.393 28.1118 225.141 28.2607 224.876 28.3613 cv224.15 28.6348 223.624 28.9194 223.019 29.3135 cv222.715 29.229 222.478 29.5029 222.209 29.3613 cv222.051 29.4419 222.013 29.6416 221.875 29.7422 cv220.768 29.8018 220.275 30.2939 219.066 30.1709 cv219.012 29.8755 218.98 29.5576 218.828 29.3613 cv218.711 28.689 219.047 27.873 219.161 27.0278 cv219.318 25.8628 220.071 24.9004 220.637 23.98 cv221.164 23.123 221.805 22.4224 222.447 22.0273 cv223.049 21.3975 223.654 20.6064 224.542 20.1226 cv224.921 19.916 225.404 19.7588 225.828 19.5508 cv226.24 19.3491 226.659 19.1328 227.066 18.9795 cv227.918 18.6592 228.822 18.4761 229.638 18.2178 cv229.736 18.1865 229.924 18.0278 230.066 17.9795 cv230.231 17.9238 230.428 17.9194 230.543 17.8843 cv231.191 17.6851 232.356 17.522 233.162 17.3125 cv234.646 16.9268 236.929 16.8203 238.924 17.1221 cv239.528 17.5024 240.549 17.7192 240.972 18.1221 cv241 18.1802 241.152 18.0913 241.258 18.1699 cv241.683 18.5176 242.047 18.7661 242.496 19.0747 cv242.685 19.2046 242.827 19.3394 242.924 19.4082 cv243.299 19.6714 243.815 19.9185 243.877 20.5986 cv244.77 21.5913 244.911 23.2129 245.591 24.5986 cv246.026 29.7896 245.814 35.9927 246.067 41.6953 cv246.113 42.7275 246.005 44.0986 246.449 44.2192 cvcpef366.838 33.79 mo366.762 33.6953 366.864 33.8354 366.79 33.8853 cv365.641 34.6533 364.28 35.3604 362.933 36.2188 cv362.254 36.6509 361.655 37.1592 360.979 37.457 cv360.762 37.9893 360.137 38.7676 359.837 39.2188 cv359.486 41.3906 360.134 43.6416 360.742 45.3145 cv360.946 45.3711 361.176 45.5239 361.17 45.6479 cv361.873 45.6362 362.809 45.627 363.742 45.5527 cv364.638 44.8418 365.932 43.8042 366.79 43.0288 cv367.431 42.4497 368.036 41.8618 368.742 41.4097 cv368.586 38.5234 368.619 35.647 368.457 32.8853 cv367.815 33.0854 367.405 33.5161 366.838 33.79 cvcp372.219 47.5527 mo372.066 47.1123 371.878 46.7871 371.504 46.6953 cv371.417 46.3677 371.286 46.0146 370.933 45.8384 cv370.763 45.0718 370.253 44.645 369.79 44.1714 cv368.691 45.1758 367.203 45.9346 365.933 47.124 cv365.623 47.2588 365.301 47.3818 365.171 47.6958 cv364.632 47.9092 364.024 48.3779 363.599 48.6479 cv363.59 48.6538 363.492 48.6992 363.504 48.6958 cv362.686 48.9419 361.818 48.8496 361.075 49.1245 cv360.375 49.2139 359.686 49.1826 359.123 49.2671 cv358.916 49.2856 358.91 49.1772 358.837 49.1719 cv357.717 49.2627 356.612 49.4453 355.551 49.2671 cv354.554 49.0996 353.752 48.377 352.837 48.2197 cv352.172 47.8584 351.64 47.2437 351.218 46.6479 cv350.815 46.082 350.589 45.6577 350.551 44.6953 cv350.515 43.7944 350.393 42.6997 350.551 41.8857 cv350.697 41.1284 351.024 40.4214 351.218 39.8379 cv352.429 38.5039 353.407 37.126 354.599 35.9805 cv356.641 35.1914 358.975 34.0425 361.075 33.3135 cv361.854 32.8809 363.213 32.2959 364.123 32.0278 cv365.114 31.4824 366.545 30.9502 367.742 30.4087 cv367.848 30.3613 368.1 30.2725 368.313 30.3613 cv368.357 27.0806 368.346 23.6997 367.98 20.6938 cv367.451 20.3022 366.87 19.9629 366.456 19.4556 cv365.169 19.1685 362.81 19.6182 361.599 19.8369 cv361.433 19.8667 361.188 19.9844 361.075 20.1699 cv360.965 20.1851 360.893 20.1621 360.837 20.1226 cv360.748 20.4297 360.37 20.4492 360.123 20.5986 cv359.923 21.0498 359.676 21.4541 359.266 21.6938 cv359.185 22.3594 358.653 22.5742 358.408 23.0752 cv358.594 23.2959 358.259 23.8086 358.266 24.313 cv358.288 24.4629 358.137 24.439 358.122 24.5513 cv358.049 25.8149 357.543 26.3867 357.266 27.3608 cv357.06 27.3735 356.866 27.7813 356.599 27.9326 cv356.286 28.1089 355.806 28.188 355.36 28.3613 cv354.604 28.6548 353.8 28.9932 352.979 29.3135 cv352.279 29.5869 351.765 29.8877 351.17 29.5991 cv350.967 29.7993 350.373 29.8418 350.026 29.7422 cv350.044 29.4736 350.004 29.5029 349.836 29.2661 cv349.958 28.7578 349.564 28.1509 349.884 27.5518 cv349.989 27.3545 349.932 27.6919 349.932 27.3608 cv349.932 27.104 350.106 26.749 350.17 26.4561 cv350.294 25.8789 350.397 25.7988 350.789 25.3608 cv351.131 24.979 351.366 24.4912 351.599 23.98 cv351.955 23.6919 351.97 23.4751 352.218 22.98 cv352.582 22.7256 353.075 22.5986 353.218 22.1226 cv353.386 22.0811 353.335 22.1167 353.503 22.0747 cv354.053 21.7153 354.288 21.0332 354.837 20.6465 cv355.083 20.4722 355.448 20.3794 355.741 20.2178 cv356.56 19.7661 357.437 19.1753 358.36 18.8369 cv358.943 18.5293 359.567 18.0273 360.313 17.7891 cv360.906 17.5996 361.892 17.481 362.742 17.3604 cv363.533 17.248 364.389 17.0283 365.171 16.9795 cv365.991 16.9277 366.998 17.1523 367.933 17.1221 cv368.497 17.104 369.015 17.104 369.552 17.1221 cv371.15 17.1772 372.347 17.9502 373.409 18.3604 cv373.396 18.6514 373.739 18.6299 373.886 18.8369 cv373.934 18.9048 374.092 18.895 374.267 19.0273 cv374.496 19.2007 374.866 19.6675 375.124 20.0273 cv375.37 20.3711 375.7 20.7354 375.886 21.0747 cv376.029 21.3389 376.101 21.7588 376.219 22.0273 cv376.452 22.5557 376.704 22.9761 376.743 23.313 cv376.81 23.9004 376.769 24.7705 376.791 25.2183 cv376.907 27.5957 376.838 30.207 376.838 32.5518 cv377.021 32.7002 376.891 33.0093 376.838 33.0757 cv377.119 35.3062 376.953 37.7363 377.028 40.0283 cv377.06 40.9771 377.166 41.9351 377.028 42.7905 cv377.035 42.8989 377.315 42.9751 377.171 43.0762 cv377.296 43.0776 377.763 43.2705 377.647 43.5049 cv377.999 43.4609 378.35 43.9414 378.981 43.6953 cv379.28 43.4175 379.295 43.0366 379.457 42.7432 cv379.504 42.6577 379.651 42.5952 379.695 42.5049 cv379.817 42.2529 379.866 41.8496 380.172 41.6475 cv380.297 41.5649 380.634 41.4619 380.791 41.457 cv381.623 41.4316 382.114 42.2476 382.076 43.3145 cv382.064 43.6587 381.906 43.9287 381.743 44.1714 cv381.651 44.3076 381.42 45.0068 381.267 45.1719 cv381.178 45.2681 380.931 45.9448 380.838 46.4097 cv380.742 46.5039 380.63 46.5825 380.553 46.6953 cv380.586 46.9033 380.472 46.9639 380.505 47.1719 cv379.848 47.7725 379.281 48.4849 378.41 48.7432 cv377.177 49.0146 375.843 49.252 374.647 49.1245 cv374.318 49.0889 374.127 48.9507 373.934 48.8389 cv373.648 48.6743 373.552 48.6416 373.457 48.5527 cv373.404 48.5029 373.345 48.2949 373.313 48.2671 cv373.102 48.0762 372.834 48.0156 372.695 47.6958 cv372.487 47.6973 372.414 47.5645 372.219 47.5527 cvcpef115.011 33.7422 mo114.159 34.3296 112.646 35.3672 111.439 36.1709 cv110.841 36.5703 110.265 36.9878 109.678 37.3618 cv109.009 37.7876 108.548 38.2544 107.773 38.5522 cv107.449 38.8633 107.399 39.4482 107.106 39.7905 cv106.769 40.6982 107.223 41.8169 106.868 42.8857 cv107.079 43.2681 107.007 43.7192 107.201 44.124 cv107.32 44.3706 107.579 44.5166 107.678 44.7432 cv107.766 44.9463 107.712 44.9644 107.725 45.2192 cv108.079 45.4688 108.726 45.4253 109.011 45.7432 cv110.79 46.0635 111.26 45.3271 112.249 44.6001 cv113.025 44.0303 113.584 43.4849 114.487 43.2666 cv114.72 43.0732 115.038 42.6421 115.392 42.5049 cv115.415 42.2412 115.897 42.0259 116.059 41.7432 cv115.972 38.8789 115.957 36.2842 115.917 33.2661 cv115.49 33.3003 115.33 33.6006 115.011 33.7422 cvcp127.679 42.2666 mo127.861 42.3066 128.061 42.3291 128.298 42.3145 cv128.86 42.646 129.605 43.104 129.25 44.0288 cv129.201 44.1587 128.987 44.417 128.87 44.6479 cv128.605 45.166 128.318 45.6875 128.155 46.3623 cv128.115 46.4839 128.062 46.5244 127.965 46.6479 cv127.616 47.0894 127.35 47.5371 126.964 48.124 cv126.502 48.8281 126.346 49.0459 125.727 49.3149 cv125.021 49.6206 124.321 49.5044 123.488 49.3623 cv123.419 49.373 123.472 49.5044 123.393 49.5054 cv122.544 49.4619 122.122 49.4907 121.25 49.4102 cv120.753 48.98 120.08 49.0938 119.678 48.6006 cv119.215 48.0313 119.136 47.1426 118.536 46.791 cv118.212 45.7041 117.468 44.5928 117.107 43.981 cv116.457 44.5645 115.752 44.9126 115.535 45.6479 cv115.013 45.6904 114.881 46.1982 114.583 46.5054 cv114.237 46.8608 113.441 47.2183 113.011 47.6006 cv112.714 47.8647 112.701 48.061 112.297 48.2197 cv112.169 48.1104 111.966 48.3276 111.868 48.2197 cv111.372 48.4487 110.722 49.1436 110.154 49.3149 cv109.954 49.375 109.742 49.3159 109.535 49.3623 cv109.351 49.4038 109.205 49.5366 109.011 49.6006 cv107.278 50.1743 104.683 50.0405 102.63 49.791 cv101.912 49.7041 101.613 49.5195 101.01 49.2671 cv100.651 49.1167 100.172 49.0356 99.915 48.8389 cv99.6807 48.6587 99.4697 48.2822 99.2007 47.9814 cv98.5313 47.2324 98.3726 46.9971 97.915 45.9814 cv97.5723 45.2207 97.2642 44.5576 97.3911 43.6953 cv97.4097 43.5698 97.2905 43.3608 97.2959 43.2666 cv97.3262 42.7441 97.3784 42.3115 97.7246 41.9336 cv97.6055 41.8989 97.6792 41.9321 97.6768 41.6953 cv98.0571 41.168 98.0889 40.5166 98.3911 39.981 cv98.6357 39.5483 99.1499 39.1323 99.5342 38.6953 cv100.52 37.5728 101.416 37.0439 102.868 36.2188 cv103.443 35.8916 104.088 35.5703 104.772 35.2188 cv105.741 34.7217 107.316 34.1294 108.439 33.7422 cv109.792 33.1021 111.737 32.332 113.297 31.6943 cv113.993 31.4102 114.535 31.103 115.297 31.0757 cv115.388 30.8804 115.72 30.9268 115.869 30.7896 cv115.89 28.8628 115.793 27.1938 115.773 25.4561 cv115.762 24.4736 115.682 23.4692 115.726 22.5513 cv115.738 22.2896 115.873 22.1738 115.678 21.8843 cv115.583 21.7441 115.525 21.5273 115.392 21.3608 cv115.367 21.3286 115.239 21.2959 115.154 21.2178 cv114.848 20.9355 113.598 19.9858 113.154 19.9316 cv112.638 19.8696 111.641 20.1758 111.154 20.2651 cv110.533 20.3794 109.765 20.4458 109.202 20.6465 cv108.879 20.7607 108.502 21.0449 108.154 21.2651 cv107.397 21.7437 107.013 21.9966 106.439 22.6943 cv106.403 22.7378 105.877 23.457 105.868 23.4561 cv105.863 23.4556 105.813 23.376 105.82 23.3608 cv105.79 23.4224 105.932 23.7803 105.63 23.8848 cv105.752 24.2939 105.599 24.7441 105.582 25.2183 cv105.571 25.5439 105.766 25.8623 105.63 26.2656 cv105.524 26.5771 104.919 27.4058 104.772 27.4561 cv104.728 27.4897 104.803 27.6797 104.677 27.7422 cv104.073 27.9526 103.607 28.4863 103.153 28.4561 cv103.05 28.6543 102.768 28.6743 102.677 28.8848 cv101.823 29.1221 101.255 29.7236 100.201 29.7896 cv99.4448 30.1743 98.6558 30.4497 97.6768 30.2661 cv97.561 29.8955 97.3413 29.5747 97.2959 29.2661 cv97.5962 28.5083 97.3892 27.0566 97.7725 26.2656 cv97.8193 26.168 97.77 26.1895 97.8672 26.2183 cv98.0293 26.1675 97.7349 26.2031 97.8198 26.0752 cv97.8818 25.915 98.1064 25.9175 98.2007 25.7896 cv98.7285 25.02 99.4009 24.0137 100.153 23.313 cv100.12 23.1367 100.234 23.1089 100.201 22.9321 cv100.335 22.8916 100.396 22.7783 100.582 22.7891 cv101.117 22.2266 101.554 21.4824 102.249 21.0273 cv102.452 20.8936 102.359 21.0195 102.534 20.8843 cv102.822 20.6631 103.322 20.4238 103.677 20.2178 cv104.535 19.7202 105.046 19.374 106.059 19.0273 cv106.999 18.7051 108.115 18.1821 109.202 18.1221 cv109.92 17.8564 111.554 17.6538 112.345 17.5034 cv112.636 17.4478 112.993 17.3237 113.25 17.3125 cv114.225 17.2705 115.45 17.4966 116.44 17.646 cv116.722 17.6885 117.021 17.75 117.345 17.8364 cv117.842 17.9692 118.345 17.8906 118.678 18.2178 cv121.022 18.3657 122.478 20.1851 123.821 21.6465 cv123.803 21.8608 123.825 21.7866 123.964 21.9321 cv123.951 23.1382 124.058 24.5825 124.06 25.7417 cv124.06 25.7871 123.965 25.9668 123.964 25.9321 cv123.987 26.563 124.123 27.4839 124.107 28.0752 cv124.104 28.1909 124.013 28.1401 124.012 28.123 cv124.021 28.4233 124.146 28.5874 124.06 28.8374 cv124.079 28.7808 124.014 28.9526 124.012 28.8848 cv124.099 31.3281 124.22 34.1753 124.25 36.2666 cv124.264 36.4053 124.239 36.4302 124.155 36.3613 cv124.462 38.876 124.053 41.48 124.536 43.7905 cv124.978 44.124 125.259 44.126 125.917 44.1714 cv126.847 43.8799 126.979 42.7896 127.679 42.2666 cvcpef18.7671 110.604 mo18.6323 110.586 18.9448 110.38 18.7671 110.319 cv18.6768 110.375 18.6357 110.724 18.7671 110.604 cvcp247.163 118.796 mo247.674 116.532 250 115.226 251.211 112.986 cv251.82 112.459 252.266 111.802 252.782 111.224 cv253.799 110.085 254.905 108.927 256.068 107.89 cv256.577 107.437 257.046 106.956 257.592 106.509 cv258.42 105.831 259.619 104.603 260.497 103.794 cv261.458 102.91 262.474 102.043 263.402 101.08 cv263.524 101.117 263.621 100.894 263.688 101.032 cv263.682 100.941 263.84 100.83 263.926 100.699 cv265.377 99.7847 266.752 98.5405 268.165 97.7466 cv269.578 96.4053 271.433 95.5356 273.022 94.4131 cv274.199 93.9551 275.173 93.041 276.26 92.6509 cv276.814 92.1064 277.898 91.688 278.546 91.0796 cv279.063 90.9126 279.946 90.4648 280.736 90.127 cv281.553 89.7783 282.386 89.4189 283.07 89.1748 cv284.43 88.3369 286.012 87.8076 287.594 87.1743 cv291.2 85.731 295.292 83.8672 298.356 82.5552 cv299.468 82.0791 300.871 81.897 302.166 81.6025 cv307.345 80.4258 312.39 79.3208 317.739 78.2217 cv319.483 77.8628 321.137 77.4067 322.93 77.2212 cv325.825 76.9224 329.277 76.8052 332.692 76.6499 cv334.21 76.5811 335.778 76.4609 336.883 76.5547 cv338.297 76.6748 339.563 76.7539 341.026 76.8403 cv344.191 77.0283 347.234 77.5391 350.217 77.9834 cv352.451 78.3164 354.791 78.6147 356.837 79.1265 cv357.843 79.3779 359.408 79.6509 360.789 79.9834 cv362.431 80.3789 363.965 80.9639 365.694 81.2695 cv366.08 81.4707 366.497 81.6416 367.075 81.6504 cv367.1 81.7578 367.31 81.7544 367.171 81.8882 cv368.023 81.8608 368.221 82.3906 369.123 82.3647 cv369.572 82.771 370.45 82.7319 370.885 83.0313 cv371.563 83.0195 371.734 83.3701 372.314 83.3647 cv372.359 83.4854 372.967 83.6499 373.267 83.7456 cv375.168 84.3525 377.555 84.9326 379.505 85.7935 cv379.597 85.834 379.842 85.8818 379.838 86.0317 cv380.773 86.2163 381.757 86.6841 382.695 87.0317 cv383.009 87.1475 383.418 87.2402 383.553 87.46 cv385.822 88.0405 387.985 89.311 390.172 89.9844 cv390.145 90.1709 390.368 90.1055 390.41 90.2222 cv391.566 90.7217 392.765 91.1182 393.982 91.6987 cv394.832 92.1035 396.149 92.7568 397.221 93.0322 cv398.695 93.9155 400.665 94.4858 402.315 95.3652 cv403.856 96.186 405.387 96.959 406.936 97.6514 cv407.112 97.8882 407.514 98.042 407.793 98.0322 cv408.065 98.2544 408.343 98.5352 408.983 98.604 cv409.34 98.8823 409.742 99.1143 410.316 99.1753 cv410.506 99.1602 410.445 99.3955 410.603 99.4136 cv411.284 99.6055 411.914 100.051 412.603 100.366 cv412.865 100.485 413.239 100.56 413.459 100.699 cv413.549 100.756 413.557 100.889 413.65 100.937 cv413.93 101.082 414.227 101.127 414.507 101.271 cv415.015 101.531 415.487 101.86 415.983 102.175 cv416.178 102.298 416.366 102.51 416.555 102.604 cv417.139 102.896 417.754 102.867 418.031 103.461 cv418.261 103.447 418.782 103.73 418.983 103.747 cv419.156 103.701 419.032 103.953 419.127 103.985 cv420.096 104.333 420.766 104.981 421.841 105.223 cv422.587 105.831 423.625 106.253 424.65 106.795 cv426.861 107.962 429.467 109.13 431.89 110.604 cv434.316 112.082 436.899 113.422 439.08 114.604 cv439.939 115.071 440.672 115.59 441.557 115.891 cv442.172 116.498 443.184 116.708 443.795 117.319 cv444.016 117.258 444.053 117.455 444.366 117.415 cv444.531 117.456 444.531 117.662 444.652 117.748 cv445.029 117.813 445.348 118.133 445.7 118.319 cv446.034 118.496 446.498 118.575 446.604 118.891 cv448.635 119.718 450.484 121.138 452.604 122.034 cv452.545 122.137 452.706 122.156 452.796 122.225 cv452.986 122.37 453.597 122.694 453.938 122.891 cv454.061 122.961 454.148 123.06 454.271 123.129 cv454.693 123.368 455.261 123.423 455.51 123.843 cv456.239 124.047 456.874 124.518 457.558 124.891 cv459.23 125.805 461.039 126.829 462.511 127.653 cv462.826 127.831 463.211 127.932 463.415 128.225 cv464.286 128.499 465.137 129.038 466.034 129.511 cv467.781 130.431 469.672 131.401 471.416 132.32 cv471.818 132.533 472.234 132.693 472.606 132.892 cv472.977 133.089 473.253 133.395 473.606 133.416 cv475.652 134.631 478.216 135.795 480.416 137.13 cv481.021 137.374 481.646 137.729 482.226 138.035 cv482.367 138.109 482.676 138.18 482.654 138.368 cv482.789 138.24 482.85 138.453 483.035 138.416 cv483.037 138.553 483.305 138.528 483.179 138.654 cv483.877 138.888 484.554 139.245 485.226 139.606 cv487.284 140.713 489.225 141.88 491.417 142.797 cv491.965 143.093 493.273 143.584 494.18 143.988 cv496.843 145.174 499.51 146.411 502.18 147.607 cv504.779 148.772 507.331 149.988 509.847 151.083 cv513.337 152.603 517.078 153.759 520.8 155.083 cv522.687 155.755 524.582 156.482 526.563 156.988 cv528.574 157.503 530.574 158.117 532.658 158.56 cv532.811 158.518 532.757 158.684 532.849 158.703 cv535.426 159.234 538.257 159.611 540.944 160.084 cv541.843 160.242 542.766 160.307 543.611 160.513 cv546.114 161.121 550.103 160.316 552.944 160.655 cv553.917 160.771 555.283 160.833 556.326 160.513 cv558.906 160.666 561.118 159.706 563.184 159.132 cv564.562 158.748 565.824 158.569 566.851 157.893 cv567.001 157.959 567.138 157.775 567.184 157.893 cv567.38 157.563 568.242 157.504 568.422 157.084 cv568.973 156.888 569.41 156.768 569.803 156.274 cv570.227 156.238 570.479 156.029 570.994 156.083 cv570.944 156.448 571.062 156.735 570.994 157.084 cv570.954 157.286 570.74 157.416 570.612 157.655 cv570.533 157.805 570.538 158.028 570.47 158.131 cv570.303 158.384 569.908 158.653 569.66 158.894 cv569.368 159.177 569.087 159.416 568.851 159.655 cv568.858 160.545 567.843 160.8 567.47 161.465 cv567.085 161.621 567.014 162.088 566.564 162.179 cv566.448 162.285 566.461 162.521 566.374 162.655 cv565.604 162.873 565.729 163.631 564.945 163.799 cv564.765 164.376 564.182 164.667 563.755 165.132 cv563.45 164.987 563.754 165.274 563.518 165.132 cv563.314 165.39 563.109 165.646 562.707 165.703 cv562.583 165.785 562.466 165.875 562.469 166.084 cv561.79 166.166 561.854 166.659 561.231 166.608 cv560.993 166.989 560.478 167.093 560.088 167.322 cv559.316 167.869 558.18 168.321 557.088 168.751 cv556.951 168.885 556.76 168.963 556.659 169.132 cv555.388 169.281 554.505 170.252 553.136 170.275 cv553.143 170.401 552.854 170.493 552.754 170.656 cv551.956 170.689 551.25 171.05 550.707 171.037 cv550.681 171.036 550.364 171.096 550.516 170.941 cv550.289 171.23 550.067 171.25 549.563 171.323 cv549.335 171.355 549.077 171.574 548.85 171.608 cv548.311 171.688 547.991 171.699 547.516 171.847 cv547.297 171.818 547.382 172.094 547.23 172.133 cv546.661 172.271 545.925 172.08 545.325 172.228 cv545.023 172.302 544.775 172.486 544.469 172.514 cv543.724 172.579 542.987 172.484 542.229 172.561 cv541.731 172.611 541.212 172.741 540.706 172.799 cv540.098 172.869 539.542 173.081 538.943 173.133 cv537.447 173.262 535.585 172.9 534.42 173.275 cv534.422 173.099 533.971 173.306 533.801 173.323 cv532.752 173.432 531.186 173.15 529.991 173.275 cv529.767 173.24 529.946 173.129 529.801 173.133 cv527.936 172.991 525.658 173.321 523.896 173.133 cv523.594 173.1 523.289 172.984 523.038 172.847 cv522.226 172.87 521.416 172.642 520.562 172.561 cv519.152 172.428 517.635 172.493 516.275 172.371 cv515.882 172.335 515.513 172.29 515.133 172.275 cv514.29 172.243 513.377 172.221 512.847 171.751 cv512.486 171.651 512.003 171.675 511.752 171.466 cv511.068 171.665 510.286 171.29 509.418 171.228 cv508.978 171.195 508.717 171.175 508.418 171.085 cv507.954 170.945 507.438 171.067 507.18 170.799 cv506.554 170.87 506.271 170.598 505.656 170.656 cv505.501 170.669 505.519 170.508 505.418 170.466 cv504.176 170.303 502.829 170.113 501.608 169.847 cv501.389 169.799 501.196 169.65 500.989 169.608 cv500.629 169.535 500.039 169.621 499.941 169.656 cv499.463 169.134 498.76 169.273 498.037 169.132 cv497.906 169.107 497.789 168.984 497.655 168.941 cv497.022 168.74 496.202 168.66 495.561 168.514 cv495.265 168.445 494.924 168.452 494.703 168.37 cv494.637 168.346 494.623 168.245 494.561 168.228 cv494.162 168.113 493.729 168.228 493.465 167.941 cv492.912 168.188 492.514 167.774 492.179 167.656 cv491.809 167.525 491.301 167.683 491.084 167.322 cv490.78 167.308 490.503 167.269 490.227 167.228 cv490.061 167.27 490.145 167.072 490.179 167.037 cv489.624 167.196 489.166 166.886 488.798 166.703 cv487.879 166.52 487.092 166.498 486.417 166.084 cv486.258 166.084 486.1 166.084 485.94 166.084 cv485.883 165.887 485.373 165.988 485.273 165.847 cv485.247 165.809 485.3 165.744 485.321 165.751 cv484.986 165.648 484.589 165.721 484.227 165.608 cv484.056 165.555 483.933 165.381 483.75 165.322 cv483.578 165.268 483.377 165.333 483.179 165.274 cv482.717 165.14 482.128 164.772 481.56 164.608 cv481.446 164.575 481.303 164.633 481.178 164.608 cv480.496 164.473 479.861 164.02 479.416 163.941 cv479.249 163.912 479.058 163.98 478.893 163.941 cv478.743 163.906 478.656 163.77 478.512 163.703 cv478.241 163.58 477.914 163.596 477.606 163.513 cv477.342 163.441 477.125 163.241 476.845 163.132 cv476.637 163.051 476.377 163.059 476.178 162.989 cv475.764 162.843 475.405 162.62 474.987 162.513 cv474.842 162.476 474.627 162.518 474.464 162.465 cv474.067 162.337 473.718 162.063 473.32 161.941 cv473.19 161.901 473.025 161.972 472.892 161.941 cv472.572 161.867 472.256 161.614 471.939 161.513 cv471.47 161.362 470.969 161.354 470.559 161.179 cv470.494 161.152 470.431 161.013 470.368 160.989 cv470.198 160.925 470.013 160.965 469.844 160.894 cv469.726 160.843 469.633 160.697 469.511 160.655 cv469.397 160.617 469.247 160.682 469.13 160.655 cv468.973 160.62 468.52 160.423 468.272 160.322 cv467.992 160.207 467.686 160.107 467.272 159.941 cv466.992 159.828 466.657 159.562 466.272 159.513 cv466.154 159.497 466.02 159.563 465.892 159.56 cv465.374 159.548 465.043 159.185 464.605 158.989 cv464.462 158.924 464.263 158.956 464.13 158.894 cv463.875 158.774 463.427 158.413 462.939 158.465 cv461.815 157.81 460.509 157.339 459.177 156.894 cv458.947 156.948 459.049 156.672 458.891 156.655 cv458.557 156.5 458.203 156.448 457.891 156.322 cv457.537 156.179 457.175 156.088 456.844 155.941 cv456.691 155.874 456.573 155.674 456.415 155.607 cv456.05 155.455 455.693 155.472 455.271 155.417 cv454.967 155.04 454.438 154.886 453.843 154.798 cv453.677 154.806 453.693 154.63 453.605 154.56 cv452.635 154.367 451.752 153.903 450.748 153.56 cv450.437 153.454 450.057 153.259 449.652 153.083 cv449.396 152.972 449.072 152.916 448.795 152.798 cv448.455 152.653 448.146 152.29 447.652 152.369 cv447.63 152.201 447.438 152.202 447.462 151.988 cv446.243 151.81 445.989 151.454 444.843 151.131 cv444.658 150.925 444.013 150.769 443.604 150.607 cv443.584 150.532 443.455 150.566 443.509 150.417 cv443.302 150.41 443.07 150.36 442.89 150.274 cv442.783 150.223 442.757 150.091 442.652 150.036 cv442.511 149.96 442.275 150.002 442.128 149.94 cv442.101 149.929 442.023 149.865 441.985 149.845 cv442.007 149.856 441.609 149.7 441.509 149.512 cv441.414 149.621 440.894 149.41 440.89 149.226 cv440.708 149.441 440.412 149.021 440.128 148.893 cv439.973 148.823 439.713 148.841 439.509 148.75 cv439.321 148.666 439.162 148.549 438.985 148.464 cv437.727 147.857 435.627 146.989 434.271 146.321 cv433.867 146.344 433.616 146.213 433.461 145.988 cv432.646 145.612 431.731 145.336 431.127 144.75 cv430.916 144.787 430.842 144.686 430.651 144.702 cv430.251 144.015 429.277 144.001 428.556 143.654 cv428.265 143.515 427.986 143.203 427.508 143.178 cv427.371 143.221 427.422 142.992 427.365 142.94 cv427.168 142.76 426.646 142.782 426.365 142.607 cv426.256 142.538 426.254 142.363 426.175 142.321 cv426.046 142.253 425.77 142.266 425.556 142.178 cv425.156 142.015 424.933 141.769 424.413 141.702 cv424.2 141.724 424.309 141.425 424.175 141.368 cv423.072 141.31 422.158 140.216 421.412 140.416 cv421.477 140.236 421.246 140.318 421.031 140.13 cv421.093 139.988 420.888 139.925 420.793 139.702 cv420.62 139.687 420.483 139.709 420.365 139.749 cv419.975 139.521 419.672 139.204 419.079 139.178 cv418.782 138.935 418.489 138.688 418.031 138.606 cv417.965 138.545 418.002 138.381 417.936 138.321 cv417.635 138.336 417.487 138.198 417.174 138.226 cv416.974 137.795 416.414 137.789 416.031 137.606 cv415.649 137.424 415.355 137.087 414.936 137.035 cv414.81 136.924 415.063 136.907 414.936 136.797 cv414.66 136.803 414.486 136.707 414.222 136.702 cv413.837 136.435 413.5 136.122 412.888 136.083 cv412.659 135.803 412.351 135.604 411.888 135.559 cv411.895 135.441 411.896 135.329 411.84 135.273 cv411.582 135.277 411.444 135.161 411.174 135.178 cv410.544 134.665 409.627 134.438 408.936 133.987 cv408.725 133.994 408.958 133.853 408.84 133.796 cv408.601 133.75 408.406 133.659 408.126 133.653 cv407.459 133.178 406.635 132.859 405.84 132.511 cv405.797 132.411 405.766 132.299 405.697 132.225 cv405.426 132.227 405.278 132.104 404.982 132.13 cv404.75 131.744 404.254 131.621 403.744 131.511 cv403.544 131.124 402.909 131.171 402.697 130.796 cv402.536 130.815 402.823 130.981 402.602 130.939 cv402.356 130.976 402.355 130.75 402.221 130.653 cv402.145 130.6 402.034 130.66 401.935 130.606 cv401.872 130.571 401.903 130.466 401.84 130.416 cv401.558 130.194 401.093 130.188 400.696 129.987 cv400.37 129.821 400.156 129.434 399.744 129.463 cv399.662 129.434 399.748 129.237 399.649 129.225 cv399.467 129.137 399.213 129.121 398.982 129.082 cv398.241 128.49 397.073 128.324 396.458 127.605 cv396.232 127.641 396.131 127.552 395.935 127.558 cv395.568 127.305 395.234 127.02 394.648 126.987 cv394.4 126.695 394.061 126.496 393.602 126.415 cv393.602 126.336 393.602 126.256 393.602 126.177 cv393.294 126.198 393.198 126.009 392.887 126.034 cv392.725 126.021 392.752 125.82 392.648 125.749 cv390.544 125.266 389.231 123.991 387.22 123.415 cv387.125 123.208 386.91 123.122 386.743 122.986 cv386.035 123.012 385.495 122.375 384.839 122.367 cv385.036 122.322 384.849 122.51 384.839 122.367 cv384.78 122.346 384.74 122.306 384.743 122.225 cv384.608 122.2 384.562 122.089 384.505 121.986 cv384.151 121.927 384.016 121.65 383.743 121.51 cv383.116 121.534 382.736 121.311 382.505 120.938 cv382.069 121.114 381.649 120.552 381.267 120.415 cv381.12 120.362 380.965 120.415 380.838 120.367 cv380.685 120.309 380.616 120.173 380.457 120.081 cv380.051 119.847 379.5 119.818 379.267 119.415 cv378.578 119.373 378.359 118.861 377.647 118.843 cv377.43 118.807 377.449 118.534 377.267 118.462 cv376.037 118.248 375.489 117.351 374.076 117.319 cv373.773 116.796 373.046 116.699 372.314 116.605 cv372.212 116.274 371.571 116.081 371.219 115.843 cv371.101 115.771 370.85 115.831 370.742 115.748 cv370.545 115.771 370.668 115.473 370.504 115.462 cv370.065 115.298 369.417 115.343 369.266 114.891 cv368.822 114.826 368.36 114.78 368.219 114.414 cv367.746 114.445 367.117 114.255 366.933 113.843 cv366.835 113.904 366.846 114.074 366.647 114.033 cv365.435 113.483 364.172 112.984 362.933 112.462 cv362.836 112.399 362.867 112.209 362.742 112.176 cv361.373 112.346 360.729 111.33 359.361 111.224 cv359.148 111.229 359.19 110.981 359.075 110.89 cv357.9 110.819 357.552 110.176 356.456 110.081 cv356.323 109.959 356.158 109.871 356.027 109.748 cv355.582 109.867 355.315 109.544 355.075 109.414 cv354.552 109.131 353.775 109.225 353.408 108.747 cv353.104 108.67 352.829 108.683 352.551 108.604 cv352.318 108.539 352.148 108.347 351.932 108.271 cv351.508 108.123 351.023 108.206 350.741 107.89 cv350.046 108.096 349.144 107.424 348.313 107.176 cv347.896 107.051 347.503 107.035 347.122 106.89 cv346.992 106.829 346.972 106.659 346.836 106.604 cv346.479 106.767 346.249 106.517 345.884 106.414 cv345.524 106.313 345.094 106.351 344.788 106.271 cv344.696 106.247 344.613 106.116 344.503 106.081 cv344.254 106 343.982 106.079 343.884 105.842 cv343.256 106.014 342.721 105.712 342.312 105.509 cv341.896 105.583 341.502 105.459 341.026 105.461 cv340.868 105.444 340.819 105.319 340.74 105.223 cv339.956 105.348 338.867 104.872 338.169 104.794 cv337.849 104.759 337.524 104.809 337.217 104.747 cv336.874 104.679 336.601 104.531 336.169 104.461 cv335.816 104.404 335.404 104.391 335.025 104.318 cv333.799 104.083 332.529 103.809 331.168 103.747 cv331.017 103.615 331.203 103.682 330.835 103.699 cv330.446 103.718 329.927 103.524 329.454 103.557 cv329.38 103.361 329.057 103.45 328.883 103.223 cv327.806 103.298 326.624 103.221 325.501 103.223 cv325.058 103.224 324.555 103.221 324.12 103.128 cv323.422 102.978 322.146 102.855 321.311 102.794 cv319.87 102.69 318.328 102.926 317.12 102.842 cv316.827 102.822 316.581 102.775 316.358 102.651 cv312.156 102.48 308.442 102.974 304.5 102.794 cv303.199 103.353 301.57 102.991 299.976 103.223 cv299.281 103.324 298.642 103.238 298.166 103.604 cv297.722 103.635 297.311 103.563 296.881 103.604 cv296.423 103.648 296.047 103.885 295.689 103.938 cv294.873 104.057 294.07 103.752 293.499 104.128 cv292.544 104.126 291.68 104.396 290.88 104.461 cv290.452 104.496 290.093 104.44 289.737 104.509 cv289.53 104.549 289.338 104.701 289.118 104.747 cv288.986 104.774 289.068 104.652 289.07 104.652 cv288.935 104.65 288.864 104.768 288.737 104.794 cv288.31 104.885 287.752 104.798 287.451 104.842 cv286.974 104.913 286.774 105.225 286.213 105.128 cv285.899 105.277 285.56 105.385 285.165 105.318 cv285.079 105.584 284.718 105.441 284.403 105.509 cv284.049 105.585 283.729 105.778 283.403 105.842 cv282.89 105.944 282.335 105.91 281.642 106.081 cv281.437 106.185 281.537 106.13 281.403 106.271 cv280.82 106.341 280.25 106.305 279.784 106.652 cv279.055 106.586 278.873 106.824 278.308 107.033 cv277.214 106.963 276.496 107.599 275.593 107.509 cv275.409 107.663 274.92 107.86 274.546 107.89 cv274.422 107.9 274.356 107.815 274.45 107.795 cv274.362 107.814 274.231 108.051 274.069 107.938 cv273.907 107.934 273.892 108.078 273.832 108.176 cv273.301 108.141 272.647 108.64 272.069 108.557 cv271.423 108.958 270.44 109.277 269.641 109.366 cv269.543 109.422 269.779 109.491 269.593 109.557 cv268.959 109.669 268.59 110.045 267.878 110.081 cv267.651 110.368 267.306 110.325 266.974 110.414 cv265.818 110.724 264.637 111.333 263.64 111.795 cv263.502 111.738 263.422 111.801 263.307 111.843 cv262.664 112.077 261.885 112.385 261.45 112.748 cv260.677 112.862 259.911 113.252 259.211 113.652 cv257.129 114.842 254.894 116.11 252.925 117.271 cv251.934 118.046 250.771 118.568 249.544 119.462 cv249.475 119.521 249.472 119.644 249.401 119.701 cv248.892 119.922 248.478 120.237 247.973 120.462 cv248.944 121.159 249.934 122.017 250.973 122.701 cv251.09 122.778 251.329 122.792 251.306 122.986 cv251.935 123.126 252.557 123.56 253.211 123.891 cv253.849 124.214 254.519 124.536 255.068 124.939 cv256.337 125.368 257.174 126.23 258.544 126.558 cv258.905 126.975 259.476 127.166 259.973 127.415 cv260.474 127.666 260.972 127.996 261.545 128.129 cv262.106 128.504 262.692 128.855 263.402 129.082 cv263.563 129.334 263.972 129.338 264.164 129.558 cv264.325 129.572 264.438 129.634 264.64 129.606 cv264.644 129.896 264.949 129.794 264.974 130.034 cv265.786 129.984 266.122 130.685 266.878 130.749 cv267.053 130.749 267.061 130.916 267.164 130.987 cv267.307 130.987 267.45 130.987 267.593 130.987 cv267.753 131.081 267.828 131.26 267.974 131.368 cv269.11 131.699 269.946 132.388 271.26 132.654 cv271.486 132.919 271.791 133.107 272.26 133.13 cv273.006 133.657 273.778 133.926 274.688 134.225 cv276.856 135.393 279.223 136.23 281.546 137.273 cv281.582 137.289 281.713 137.245 281.737 137.273 cv281.742 137.279 281.671 137.361 281.689 137.368 cv281.819 137.424 282.471 137.464 282.594 137.654 cv282.598 137.66 282.53 137.743 282.546 137.749 cv282.803 137.853 283.102 137.908 283.403 138.035 cv284.202 138.37 285.232 138.798 286.166 139.13 cv286.212 139.242 286.404 139.209 286.403 139.368 cv286.69 139.277 286.975 139.505 287.213 139.606 cv288.996 140.364 290.902 141.188 292.928 141.845 cv295.003 142.518 297.744 143.372 300.119 144.083 cv301.533 144.506 303.044 144.799 304.5 145.416 cv304.915 145.31 305.283 145.644 305.786 145.607 cv305.944 145.574 305.862 145.706 305.833 145.75 cv306.194 145.591 306.465 145.774 306.977 145.94 cv307.801 146.208 308.667 146.225 309.5 146.417 cv309.638 146.448 309.694 146.559 309.834 146.607 cv310.18 146.727 310.676 146.75 311.119 146.845 cv311.534 146.935 311.978 147.095 312.357 147.131 cv312.654 147.158 312.962 147.097 313.263 147.131 cv313.397 147.146 313.507 147.246 313.644 147.273 cv314.397 147.426 315.324 147.385 316.215 147.464 cv317.627 147.59 319.139 147.827 320.597 147.893 cv322.063 147.959 323.616 147.893 325.12 147.893 cv327.343 147.893 329.479 148 331.359 147.702 cv332.548 147.513 333.892 147.157 335.169 146.845 cv336.399 146.545 337.632 146.254 338.74 145.988 cv340.515 145.562 342.134 144.87 343.884 144.178 cv344.583 143.901 345.835 143.146 345.788 143.94 cv345.831 143.926 346.03 143.845 345.884 143.797 cv346.678 144.38 345.744 145.314 345.074 145.893 cv345.095 146.056 345.056 146.16 345.026 146.273 cv344.53 146.507 344.15 146.857 343.932 147.369 cv343.549 147.559 343.281 147.862 343.074 148.226 cv342.964 148.226 342.786 148.426 342.884 148.226 cv342.73 148.582 342.003 148.976 341.979 149.321 cv341.672 149.249 341.426 149.944 340.979 150.036 cv340.982 150.125 340.885 150.296 340.836 150.464 cv340.775 150.529 340.611 150.529 340.55 150.464 cv340.169 151.36 339.312 151.533 338.931 152.369 cv338.419 152.556 338.064 152.9 337.788 153.322 cv337.611 153.288 337.584 153.403 337.407 153.369 cv336.662 153.99 335.899 154.592 334.979 155.036 cv334.858 155.123 334.781 155.252 334.692 155.369 cv334.025 155.671 333.204 155.817 332.692 156.274 cv332.623 156.248 332.446 156.33 332.454 156.227 cv332.252 156.623 331.373 156.438 331.073 156.894 cv331 156.854 330.558 157.105 330.359 156.941 cv330.232 157.358 328.983 157.296 328.597 157.75 cv326.122 158.26 323.723 158.845 321.263 159.37 cv321.096 159.361 321.106 159.531 320.978 159.56 cv320.181 159.533 319.412 159.72 318.644 159.894 cv318.117 160.012 317.15 160.136 316.405 160.274 cv315.806 160.386 315.211 160.583 314.596 160.655 cv313.354 160.802 312.002 160.599 310.548 160.703 cv310.123 160.733 309.545 160.938 309.024 160.798 cv309.006 160.907 308.834 160.862 308.786 160.941 cv305.961 160.81 302.779 161.05 299.738 160.846 cv299.112 160.804 298.499 160.618 297.881 160.56 cv296.759 160.456 295.641 160.463 294.547 160.322 cv292.535 160.063 290.562 159.521 288.594 159.37 cv288.299 159.347 287.979 159.415 287.689 159.37 cv287.479 159.337 287.275 159.177 287.07 159.132 cv286.081 158.915 284.977 158.855 283.928 158.607 cv283.223 158.441 282.03 158.613 281.642 158.179 cv279.396 157.767 277.25 157.419 274.974 156.894 cv273.602 156.576 272.495 156.208 270.879 156.179 cv270.784 156.131 270.77 156.002 270.688 155.941 cv269.741 155.825 269.021 155.481 268.021 155.417 cv267.834 155.397 267.818 155.208 267.641 155.179 cv266.682 155.082 265.791 154.583 264.831 154.512 cv264.659 154.525 264.702 154.324 264.545 154.322 cv263.667 154.359 263.286 153.898 262.402 153.941 cv262.15 153.636 261.919 153.685 261.402 153.607 cv260.745 153.509 259.947 153.051 259.211 152.845 cv258.579 152.668 257.969 152.594 257.259 152.369 cv256.872 152.247 256.566 151.987 256.211 151.893 cv255.627 151.738 254.344 151.696 253.973 151.131 cv253.904 151.205 253.729 151.173 253.592 151.179 cv253.298 150.996 252.937 150.882 252.497 150.845 cv252.522 150.66 252.116 150.763 252.258 150.607 cv251.318 150.556 250.704 150.045 249.639 149.94 cv248.897 149.684 248.482 149.361 247.544 149.273 cv246.956 148.778 245.802 148.914 245.448 148.417 cv245.312 148.411 245.137 148.442 245.067 148.369 cv244.636 148.071 244.125 147.851 243.448 147.797 cv242.891 147.429 242.091 147.208 241.4 147.036 cv241.301 146.944 241.189 146.866 241.163 146.702 cv240.934 146.848 240.592 146.602 240.4 146.702 cv240.354 146.526 240.097 146.562 240.067 146.369 cv239.867 146.483 239.613 146.299 239.4 146.273 cv239.006 145.885 238.067 145.877 237.686 145.559 cv237.468 145.377 237.743 145.476 237.448 145.369 cv237.195 145.277 236.766 145.22 236.448 145.083 cv236.271 145.085 236.277 144.904 236.162 144.845 cv235.818 144.79 235.764 144.737 235.353 144.75 cv235.257 144.652 235.374 144.656 235.4 144.559 cv235.315 144.602 235.279 144.692 235.115 144.654 cv235.212 144.47 235.087 144.634 235.019 144.607 cv234.603 144.437 234.016 144.132 233.4 143.893 cv232.695 143.618 232.085 143.305 231.448 143.226 cv230.658 142.762 230.046 142.514 229.019 142.273 cv228.141 141.675 227.449 141.664 226.447 141.083 cv225.379 140.945 224.82 140.297 223.78 140.13 cv223.538 139.865 223.049 139.846 222.78 139.606 cv222.379 139.746 222.039 139.477 221.923 139.178 cv221.217 139.171 220.941 138.65 220.304 138.654 cv220.023 138.307 219.657 138.227 219.161 138.178 cv219.008 137.933 218.772 137.985 218.494 137.892 cv217.896 137.692 217.461 137.158 216.589 137.083 cv216.056 136.628 215.482 136.708 214.923 136.178 cv214.281 136.186 213.829 135.631 213.065 135.606 cv213.004 135.461 212.78 135.479 212.78 135.273 cv211.521 135.055 210.839 134.261 209.542 134.082 cv209.517 133.964 209.425 133.913 209.351 133.844 cv206.707 132.902 204.607 131.804 202.398 130.701 cv202.42 130.712 202.099 130.684 202.064 130.606 cv202.062 130.599 202.129 130.519 202.112 130.511 cv201.793 130.357 201.456 130.254 201.112 130.082 cv200.317 129.683 199.425 129.328 198.588 128.892 cv198.487 128.839 198.255 128.767 198.255 128.605 cv197.738 128.572 197.301 128.225 196.826 127.986 cv195.691 127.416 194.435 126.874 193.302 126.272 cv193.099 126.164 192.816 126.115 192.731 125.891 cv191.848 125.635 191.099 125.119 190.254 124.701 cv190.151 124.593 190.092 124.74 189.921 124.701 cv189.63 124.436 189.173 124.138 188.587 124.034 cv188.554 123.937 188.438 123.846 188.54 123.748 cv187.979 123.755 187.643 123.415 187.207 123.177 cv186.6 123.212 186.271 122.601 185.635 122.51 cv185.228 122.092 184.64 122.052 184.159 121.653 cv184.011 121.59 184.023 121.666 183.825 121.653 cv183.493 121.363 183.147 121.315 182.873 121.034 cv182.152 120.627 181.063 120.388 180.444 119.891 cv180.233 119.721 179.441 119.405 179.063 119.224 cv177.702 118.574 176.346 117.85 174.873 117.319 cv174.389 116.869 173.728 116.701 173.158 116.415 cv171.486 115.574 169.638 114.731 167.872 113.938 cv166.668 113.397 165.424 112.985 164.396 112.414 cv163.38 111.851 162.37 111.27 161.252 110.747 cv160.767 110.521 160.171 110.329 159.633 110.081 cv159.351 109.951 159.105 109.781 158.824 109.652 cv158.586 109.543 158.235 109.535 158.109 109.271 cv157.039 108.913 155.962 108.333 155.014 107.89 cv154.707 107.747 154.339 107.674 154.062 107.461 cv153.701 107.184 152.636 106.824 151.918 106.509 cv150.618 105.938 149.117 105.249 147.49 104.557 cv144.079 103.105 140.113 101.475 136.346 99.8896 cv136.105 99.7881 135.589 99.7119 135.822 99.604 cv135.088 99.437 134.171 99.0391 133.298 98.6992 cv130.819 97.7329 128.52 96.9854 125.964 96.0796 cv125.813 96.0259 125.556 96.0425 125.488 95.8418 cv123.646 95.3848 121.649 94.564 119.583 94.1748 cv119.547 94.085 119.441 94.1416 119.536 94.0322 cv118.477 93.835 117.325 93.5557 116.154 93.3179 cv114.994 93.082 113.835 92.8716 112.773 92.5557 cv112.688 92.5425 112.675 92.6006 112.726 92.6035 cv112.716 92.6572 112.678 92.6299 112.678 92.6035 cv109.635 92.0605 106.719 91.5649 103.439 91.2222 cv102.447 91.1187 101.443 91.085 100.392 90.9844 cv96.8667 90.6475 92.6621 90.6504 88.438 90.6509 cv84.1489 90.6514 79.8784 90.5835 75.9614 90.7939 cv75.7891 90.812 75.7339 90.9473 75.6279 91.0317 cv71.9785 91.1543 68.0278 91.7798 64.9604 92.2222 cv62.7163 92.5459 60.5259 92.9502 58.3887 93.3652 cv54.0864 94.2017 50.0781 95.481 45.959 96.6514 cv44.6479 97.0239 43.1914 97.2837 42.0542 97.8896 cv41.604 97.8555 41.166 98.1777 40.7686 98.2705 cv40.5566 98.3198 40.6484 98.1782 40.6255 98.4131 cv40.1167 98.4448 39.8066 98.7637 39.3398 98.6992 cv39.1875 98.7373 39.2036 98.9438 39.1016 99.0322 cv38.2251 99.1489 37.5166 99.5215 36.7681 99.8896 cv34.918 100.799 33.2251 101.682 31.5298 102.509 cv30.6128 103.175 29.3452 103.616 28.2915 104.318 cv27.7524 104.678 27.2197 105.058 26.6724 105.414 cv26.146 105.756 25.5625 106.084 25.1958 106.604 cv25.0444 106.612 24.9863 106.712 24.8149 106.699 cv24.6069 107.073 23.9468 107.215 23.958 107.652 cv23.8311 107.652 23.7041 107.652 23.5767 107.652 cv22.4551 108.317 21.3584 109.581 20.1479 110.604 cv19.8799 110.832 19.606 111.02 18.9575 111.081 cv18.8442 110.769 18.5835 110.65 18.624 110.366 cv18.564 110.512 18.7046 109.873 18.7192 109.842 cv19.0444 109.176 20.0181 108.413 20.3384 107.7 cv20.7788 107.571 21.4365 106.262 22.0054 105.842 cv22.7817 104.592 24.0889 103.43 24.7671 102.175 cv24.8521 102.133 24.8887 102.042 25.0532 102.08 cv25.1035 101.577 25.7383 101.379 25.8149 100.651 cv26.4448 100.477 26.4482 99.8491 27.0532 99.4136 cv26.9868 99.2666 27.0908 99.2363 27.0532 99.1753 cv29.2739 97.4399 30.75 94.8594 33.0537 93.27 cv33.0938 93.2319 33.0503 93.0742 33.1489 92.9844 cv33.2051 92.9297 33.3174 92.9307 33.4346 92.9365 cv33.5972 92.8296 33.5376 92.5 33.8633 92.5557 cv33.9111 92.5181 33.8452 92.3892 33.9585 92.3174 cv35.2734 91.3794 36.29 90.3735 37.5303 89.2695 cv37.7095 89.1104 37.9419 88.9287 38.1494 88.7461 cv38.293 88.6191 38.4814 88.3159 38.6255 88.4126 cv38.6445 88.2729 38.75 88.2197 38.8159 88.127 cv40.2773 87.1841 42.0781 86.188 43.5308 85.0791 cv43.7627 85.0254 43.8057 84.7827 44.1494 84.8408 cv45.0581 83.7427 46.002 83.855 46.8643 82.8887 cv47.4097 82.9224 47.5322 82.3013 48.1978 82.3169 cv48.3267 82.2559 48.3164 82.0547 48.4355 81.9834 cv48.4917 81.9287 48.604 81.9297 48.7212 81.936 cv48.9043 81.647 49.3301 81.6235 49.626 81.3647 cv49.6318 81.3599 49.856 81.2603 50.1025 81.1265 cv50.2471 81.0479 50.3271 80.8936 50.4834 80.793 cv50.9863 80.4697 51.6479 80.2251 52.1504 79.936 cv52.6372 79.6553 53.0884 79.3262 53.5786 79.0786 cv55.4639 78.1279 57.6304 77.1636 59.1504 76.4121 cv61.1919 75.3096 63.665 74.2842 66.1035 73.5068 cv66.2534 73.5298 66.1392 73.2886 66.2461 73.2686 cv67.4546 72.895 68.4443 72.585 69.5322 72.126 cv69.6157 72.1694 69.77 72.1421 69.8179 72.2212 cv70.1274 71.9629 70.6191 72.0586 70.7705 71.6973 cv71.1841 71.6826 71.5 71.5693 71.7227 71.3638 cv72.8242 71.2451 73.8989 70.6934 74.8184 70.4116 cv76.0991 70.0186 77.2905 69.7451 78.3901 69.2686 cv79.1069 69.271 79.5127 68.9629 80.1519 68.8877 cv80.3032 68.8481 80.3809 68.7354 80.4854 68.6494 cv81.3916 68.5928 81.9312 68.3228 82.7236 68.1255 cv84.0469 67.7964 85.3413 67.4741 86.7236 67.1729 cv88.3833 66.8115 90.0005 66.5371 91.772 66.3633 cv92.8936 66.2539 94.0781 66.2056 95.2007 65.9824 cv96.2144 65.7813 97.6245 65.6436 98.8198 65.5063 cv102.031 65.1382 105.435 65.0405 108.916 64.8872 cv110.501 64.8174 112.101 64.8491 113.726 64.8398 cv113.816 64.8599 113.931 64.8569 113.916 64.9824 cv115.536 64.7358 117.308 65.1748 119.154 65.2681 cv120.246 65.3232 120.952 65.5425 122.107 65.6016 cv123.797 65.6885 125.168 66.0107 126.869 65.9824 cv126.973 66.0376 127.042 66.127 127.155 66.1729 cv131.809 66.4653 135.042 67.8579 139.204 68.6973 cv142.429 69.7666 145.8 70.6191 148.966 71.7925 cv149.213 71.8843 149.763 71.981 150.014 72.1733 cv150.041 72.1943 150.021 72.2715 150.014 72.2686 cv151.023 72.6289 152.161 72.9019 153.205 73.2212 cv153.836 73.5781 154.694 73.8384 155.395 73.9829 cv156.13 74.4121 157.006 74.6157 157.871 74.9355 cv158.343 75.1104 158.612 75.3545 159.205 75.3643 cv159.43 75.7529 160.626 75.8804 161.157 76.269 cv161.434 76.2002 161.475 76.3955 161.633 76.3164 cv161.688 76.3872 161.688 76.4365 161.633 76.5073 cv162.502 76.5605 163.217 77.1768 164.11 77.3643 cv165.007 77.7754 165.989 78.2119 166.919 78.6025 cv167.442 78.8218 167.994 78.9131 168.301 79.2217 cv169.043 79.2891 169.305 79.8364 170.11 79.8408 cv170.131 79.9312 170.213 79.9604 170.206 80.0786 cv170.989 80.2563 171.741 80.6885 172.539 81.0313 cv173.36 81.3838 174.267 81.6304 175.015 82.0313 cv175.235 82.1489 175.378 82.3491 175.587 82.46 cv176.104 82.7344 176.679 82.9106 177.253 83.1743 cv180.85 84.8228 184.93 86.9648 188.683 88.8887 cv189.012 88.9609 189.368 89.1187 189.588 89.2222 cv189.862 89.3511 190.224 89.5049 190.35 89.7461 cv191.038 89.8857 191.693 90.3101 192.35 90.6509 cv193.008 90.9922 193.723 91.2881 194.255 91.7461 cv194.86 91.9419 195.389 92.2705 195.921 92.5557 cv196.825 93.0396 197.697 93.4849 198.588 93.9844 cv198.635 94.0107 198.732 94.1006 198.684 94.0796 cv198.716 94.0938 198.766 94.0469 198.827 94.0796 cv199.408 94.3955 199.831 94.8164 200.588 94.937 cv200.646 95.0859 200.781 95.1567 200.874 95.27 cv202.363 95.9878 203.823 96.7344 205.16 97.6035 cv205.264 97.5234 205.52 97.5967 205.636 97.6514 cv205.827 97.9683 206.415 98.186 206.922 98.4609 cv207.538 98.7949 207.881 99.0845 208.494 99.1753 cv209.025 99.6763 209.712 100.021 210.494 100.271 cv210.506 100.398 210.694 100.452 210.589 100.556 cv211.511 100.852 212.519 101.484 213.446 101.985 cv213.737 102.142 214.115 102.234 214.256 102.509 cv214.766 102.65 215.22 102.927 215.685 103.175 cv218.973 104.935 221.573 106.548 225.019 108.271 cv225.007 108.428 225.341 108.484 225.257 108.557 cv226.075 108.821 226.838 109.545 227.781 109.842 cv228.149 110.24 228.805 110.466 229.4 110.795 cv230.289 111.286 231.17 111.866 232.066 112.366 cv232.505 112.611 233.045 112.718 233.305 113.128 cv234.281 113.365 234.889 114.129 236.02 114.414 cv236.313 114.953 237.102 114.934 237.496 115.462 cv237.652 115.334 237.609 115.575 237.781 115.462 cv238.876 116.165 240.251 116.88 241.496 117.51 cv242.375 117.954 243.288 118.563 244.115 118.843 cv244.827 119.084 246.452 118.949 247.163 118.796 cvcpef18.7671 110.319 mo18.9448 110.38 18.6323 110.586 18.7671 110.604 cv18.6357 110.724 18.6768 110.375 18.7671 110.319 cvcpef112.487 114.652 mo112.687 114.525 112.966 114.664 113.202 114.652 cv113.101 114.817 113.542 114.717 113.678 114.795 cv113.73 114.826 113.687 114.94 113.678 114.938 cv113.816 114.979 114.17 115.01 114.345 114.891 cv116.242 115.284 117.822 115.859 119.821 116.224 cv119.835 116.35 120.103 116.325 119.964 116.462 cv120.651 116.38 121.12 116.753 121.583 116.891 cv121.834 116.965 122.105 116.928 122.345 116.986 cv122.872 117.113 123.378 117.402 124.107 117.415 cv124.145 117.645 124.708 117.711 125.25 117.795 cv125.308 117.858 125.269 117.871 125.25 117.938 cv125.702 117.815 125.902 118.242 126.488 118.224 cv126.657 118.229 126.483 118.312 126.631 118.367 cv127.427 118.415 128.281 118.99 128.917 118.938 cv129.043 118.987 129.188 119.017 129.203 119.177 cv129.981 119.188 130.631 119.451 131.203 119.795 cv132.06 119.779 132.59 120.46 133.632 120.415 cv133.677 120.512 133.729 120.603 133.774 120.7 cv134.397 120.687 134.875 121.129 135.584 121.177 cv135.866 121.53 136.665 121.366 136.822 121.843 cv138.767 122.078 140.035 123.195 142.013 123.558 cv142.013 123.621 142.013 123.685 142.013 123.748 cv142.626 123.785 143.223 124.101 143.823 124.225 cv143.865 124.309 143.974 124.363 143.871 124.463 cv143.955 124.42 143.991 124.33 144.156 124.367 cv144.691 124.91 145.594 124.783 146.061 125.272 cv147.151 125.45 147.64 125.898 148.585 126.177 cv148.889 126.606 149.69 126.412 149.918 126.891 cv150.592 126.869 151.325 127.481 152.014 127.653 cv152.157 127.605 152.098 127.759 152.109 127.844 cv152.401 127.823 152.696 127.994 153.014 128.082 cv152.994 128.408 153.514 128.36 153.918 128.511 cv154.254 128.635 154.549 128.986 154.871 128.892 cv155.475 129.352 156.47 129.419 156.966 129.987 cv157.243 129.978 157.558 130.14 157.538 130.272 cv158.011 130.264 158.388 130.752 159.014 130.749 cv159.135 131.025 159.54 131.017 159.824 131.129 cv160.053 131.52 160.505 131.687 161.015 131.796 cv161.067 131.87 161.169 131.896 161.157 132.035 cv161.959 132.053 161.932 132.623 162.872 132.654 cv163.354 133.411 164.877 133.377 165.205 134.13 cv165.546 133.964 165.727 134.27 165.919 134.178 cv166.475 134.907 167.725 134.944 168.348 135.606 cv168.629 135.611 168.853 135.673 169.063 135.749 cv169.064 136.169 169.776 136.231 170.11 136.416 cv170.654 137.038 171.654 136.984 172.206 137.654 cv173.279 137.771 173.68 138.561 174.729 138.702 cv174.774 138.99 175.199 138.898 175.253 139.178 cv175.863 139.219 176.263 139.47 176.492 139.892 cv176.575 139.919 176.771 139.835 176.777 139.94 cv176.909 140.131 177.528 140.147 177.682 140.463 cv178.701 140.625 179.276 141.628 180.444 141.797 cv180.465 141.888 180.547 141.917 180.54 142.035 cv180.733 142.047 180.775 142.213 181.016 142.178 cv181.651 142.602 182.386 143.069 183.397 143.321 cv183.417 143.412 183.533 143.407 183.492 143.559 cv183.656 143.538 183.759 143.578 183.873 143.606 cv184.362 144.112 184.57 144.172 185.397 144.417 cv185.464 144.54 185.558 144.636 185.635 144.75 cv185.79 144.722 185.856 144.782 185.968 144.797 cv186.054 145.201 187.137 145.203 187.397 145.654 cv187.678 145.656 187.986 145.842 187.969 145.988 cv188.068 145.884 188.104 146.012 188.254 145.988 cv188.463 146.387 189.074 146.359 189.159 146.75 cv190.12 146.838 190.593 147.823 191.778 147.845 cv191.801 147.954 191.873 148.088 191.778 148.178 cv192.003 148.16 192.176 148.194 192.35 148.226 cv192.387 148.269 192.401 148.333 192.397 148.417 cv193.596 148.948 194.725 149.549 195.731 150.274 cv195.811 150.358 195.891 150.231 196.064 150.274 cv196.35 150.567 196.768 150.825 197.302 150.988 cv197.585 151.341 198.084 151.476 198.541 151.655 cv199.136 152.282 200.294 152.346 200.827 153.036 cv201.308 153.348 201.986 153.464 202.351 153.893 cv202.549 153.853 202.575 153.986 202.731 153.988 cv202.78 154.051 202.778 154.164 202.827 154.227 cv203.146 154.24 203.259 154.46 203.636 154.417 cv203.914 154.663 204.214 154.887 204.589 155.036 cv204.891 155.419 205.582 155.381 205.779 155.75 cv206.107 155.807 206.392 156.095 206.684 156.036 cv206.756 156.171 206.894 156.239 206.922 156.417 cv207.402 156.461 207.729 156.658 207.922 156.988 cv208.061 156.907 208.419 156.985 208.637 157.084 cv208.691 157.14 208.69 157.252 208.684 157.37 cv208.915 157.302 209.446 157.704 209.875 157.75 cv209.855 157.865 209.962 157.854 209.922 157.989 cv210.664 157.899 210.63 158.745 211.351 158.512 cv211.381 158.786 211.912 158.787 212.065 159.179 cv212.55 159.14 212.79 159.574 213.113 159.75 cv213.373 159.892 213.746 159.892 214.018 160.037 cv214.147 160.105 214.228 160.261 214.351 160.322 cv214.613 160.451 215 160.459 215.256 160.655 cv215.458 160.81 215.574 161.066 215.97 161.132 cv215.991 161.223 216.106 161.218 216.066 161.37 cv216.123 161.295 216.442 161.392 216.304 161.513 cv216.689 161.377 217.211 161.736 217.256 161.941 cv217.679 161.838 217.908 162.302 218.352 162.513 cv218.617 162.639 218.883 162.575 219.018 162.798 cv219.036 162.828 219.032 162.951 219.018 162.941 cv219.189 163.052 219.512 163.042 219.732 163.18 cv219.781 163.21 219.798 163.344 219.828 163.37 cv219.983 163.51 220.164 163.42 220.352 163.513 cv220.445 163.559 220.5 163.692 220.59 163.751 cv220.892 163.947 221.368 164.003 221.542 164.37 cv221.949 164.393 222.225 164.544 222.304 164.894 cv223.361 165.099 223.856 165.92 225.019 166.132 cv225.061 166.232 225.164 166.272 225.162 166.418 cv226.213 166.704 226.948 167.546 227.971 167.703 cv228.117 167.782 228.338 167.979 228.305 168.085 cv228.797 168.016 228.999 168.38 229.209 168.561 cv229.687 168.58 230.132 168.87 230.209 169.132 cv230.84 169.074 230.713 169.6 231.448 169.561 cv232.092 169.948 232.787 170.285 233.496 170.608 cv234.031 171.137 235.006 171.477 235.353 172.037 cv235.635 171.972 235.939 172.268 236.305 172.275 cv236.305 172.354 236.305 172.434 236.305 172.514 cv237.307 172.798 238.323 173.067 238.972 173.704 cv239.117 173.669 239.146 173.753 239.258 173.752 cv239.3 173.836 239.391 173.872 239.353 174.037 cv239.674 174.065 239.824 174.265 240.21 174.228 cv240.23 174.318 240.346 174.314 240.305 174.466 cv241.127 174.809 242.186 175.016 242.829 175.656 cv242.94 175.656 243.052 175.656 243.163 175.656 cv243.901 176.227 244.987 176.386 245.687 177.085 cv245.887 177.083 245.939 177.202 246.258 177.181 cv246.665 177.714 247.441 177.585 247.877 177.99 cv247.904 178.015 247.961 178.203 247.925 178.181 cv248.167 178.331 248.803 178.29 248.83 178.704 cv249.006 178.617 249.008 178.717 249.258 178.704 cv250.363 179.453 251.37 179.462 252.401 180.229 cv253.559 180.452 254.194 181.197 255.401 181.371 cv255.647 181.666 256.087 181.765 256.449 181.942 cv256.489 181.998 256.512 182.07 256.497 182.181 cv256.663 182.237 256.915 182.207 256.878 182.466 cv257.81 182.291 257.772 183.106 258.544 182.895 cv258.571 182.992 258.688 182.988 258.592 183.086 cv259.414 183.343 259.486 183.609 260.45 183.705 cv260.47 183.815 260.66 183.832 260.545 183.942 cv260.636 183.923 260.631 183.807 260.783 183.848 cv260.919 184.105 261.501 184.077 261.783 184.419 cv261.91 184.419 262.037 184.419 262.164 184.419 cv262.589 184.835 263.447 184.818 263.735 185.371 cv264.095 185.393 264.337 185.531 264.688 185.562 cv264.757 185.636 264.788 185.748 264.831 185.848 cv265.447 185.843 266.021 185.971 266.212 186.371 cv266.364 186.318 266.302 186.382 266.354 186.276 cv266.908 186.278 267.038 186.704 267.593 186.705 cv267.964 187.061 268.688 187.015 268.831 187.419 cv269.061 187.36 269.477 187.494 269.784 187.515 cv269.838 187.585 269.838 187.635 269.784 187.705 cv270.259 187.834 270.638 187.907 270.926 188.133 cv271.156 188.029 271.627 188.218 271.593 188.371 cv271.971 188.442 272.708 188.556 272.974 188.896 cv273.203 188.89 273.539 189.027 273.688 188.943 cv273.669 189.122 274.099 189.097 274.212 189.229 cv274.22 189.237 274.144 189.313 274.165 189.324 cv274.378 189.438 275.471 189.372 275.975 189.801 cv276.808 189.96 277.749 190.168 278.498 190.515 cv278.943 190.482 279.232 190.606 279.308 190.943 cv280.077 190.856 280.771 191.014 281.26 191.42 cv282.453 191.292 283.115 192.104 284.403 192.038 cv284.739 192.513 285.721 192.34 286.166 192.705 cv286.541 192.744 286.969 192.681 287.165 192.991 cv287.732 192.92 288.264 193.287 288.928 193.276 cv289.225 193.664 290.121 193.401 290.499 193.801 cv291.149 193.753 291.424 193.971 292.023 193.896 cv292.031 194.03 292.249 193.955 292.213 194.134 cv292.365 194.044 292.413 194.146 292.595 194.086 cv292.813 194.3 294.102 194.262 294.309 194.61 cv295.252 194.478 295.665 194.978 296.689 194.991 cv296.721 195.039 296.8 195.04 296.785 195.134 cv302.23 195.055 308.008 195.055 313.453 195.134 cv313.453 195.056 313.542 195.03 313.644 194.943 cv314.769 195.027 315.115 194.569 316.453 194.705 cv316.595 194.705 316.615 194.582 316.739 194.563 cv317.281 194.606 317.72 194.255 318.453 194.229 cv318.59 193.989 319.355 193.962 319.882 193.848 cv320.94 193.302 322.016 192.997 323.12 192.563 cv323.285 192.524 323.321 192.615 323.406 192.657 cv323.373 192.619 323.332 192.527 323.406 192.515 cv323.701 192.396 323.968 192.251 324.168 192.038 cv324.267 192.066 324.48 191.979 324.501 192.086 cv324.865 191.813 325.598 191.811 326.12 191.467 cv326.369 191.304 326.562 190.954 326.93 190.991 cv327.315 191.029 327.494 191.479 327.454 191.896 cv327.366 192.793 326.312 192.905 326.264 193.943 cv325.751 194.381 325.438 195.053 324.93 195.134 cv324.875 195.921 323.756 196.146 323.691 196.943 cv323.365 197.226 322.818 197.599 322.597 198.134 cv321.794 198.489 321.416 199.306 320.549 199.705 cv320.404 200.054 320.132 200.272 319.739 200.372 cv319.629 200.483 319.604 200.681 319.501 200.801 cv319.249 200.799 319.188 200.912 319.072 201.135 cv318.129 201.325 317.332 201.914 316.453 202.087 cv316.33 202.099 316.519 202.169 316.453 202.277 cv316.342 202.266 316.047 202.456 316.072 202.277 cv315.134 202.854 314.182 203.56 313.215 203.849 cv312.505 204.374 311.665 204.722 310.644 204.896 cv310.536 205.027 310.397 205.127 310.31 205.277 cv309.913 205.372 309.474 205.351 309.072 205.468 cv308.967 205.499 308.914 205.605 308.786 205.658 cv308.433 205.806 307.941 205.762 307.596 205.896 cv307.503 205.933 307.406 206.058 307.31 206.087 cv307.182 206.127 307.014 206.061 306.881 206.087 cv306.734 206.116 306.657 206.257 306.548 206.277 cv306.348 206.315 306.098 206.242 305.929 206.277 cv305.819 206.301 305.232 206.607 305.023 206.658 cv304.83 206.706 304.603 206.669 304.404 206.706 cv304.124 206.759 303.83 206.923 303.596 206.944 cv303.525 206.95 303.452 206.849 303.452 206.849 cv303.439 206.852 303.113 207.132 302.929 206.992 cv302.845 207.035 302.841 207.158 302.786 207.23 cv302.24 207.179 301.794 207.37 301.071 207.23 cv300.334 207.656 299.455 207.698 298.404 207.658 cv298.256 207.915 298.098 207.975 297.737 207.944 cv297.674 207.938 297.768 208.026 297.69 208.039 cv297.216 208.122 296.175 207.97 295.262 207.992 cv293.916 208.025 293.021 207.769 292.118 208.277 cv289.103 208.277 286.086 208.277 283.07 208.277 cv282.892 208.313 282.966 208.096 282.832 208.087 cv281.271 207.756 279.228 208.333 277.308 207.896 cv277.137 207.857 276.921 207.737 276.736 207.706 cv276.341 207.64 275.938 207.712 275.546 207.658 cv275.282 207.622 275.022 207.453 274.736 207.42 cv274.33 207.375 273.957 207.52 273.736 207.23 cv272.954 207.431 272.23 207.105 271.498 207.039 cv270.92 206.987 270.276 207.177 269.736 206.896 cv269.577 206.93 269.659 206.798 269.688 206.754 cv269.157 206.781 268.712 206.599 267.974 206.658 cv267.861 206.629 267.752 206.595 267.736 206.468 cv266.926 206.611 266.242 206.214 265.498 206.135 cv265.218 206.105 264.923 206.155 264.64 206.135 cv264.223 206.104 263.811 205.924 263.402 205.896 cv262.819 205.857 262.368 205.903 261.926 205.754 cv261.752 205.721 261.693 205.573 261.545 205.516 cv261.002 205.483 260.209 205.505 260.068 205.135 cv259.603 205.311 258.685 204.977 258.116 204.992 cv257.222 204.466 255.26 204.647 254.211 203.944 cv253.487 203.828 252.941 203.883 252.354 203.516 cv251.856 203.516 251.253 203.267 250.687 203.182 cv250.632 202.905 250.325 203.094 249.925 202.991 cv249.899 202.894 249.7 202.98 249.83 202.849 cv249.052 202.841 248.381 202.614 247.83 202.229 cv247.692 202.251 247.681 202.398 247.496 202.372 cv247.117 202.291 246.712 201.982 246.258 202.135 cv246.077 201.956 245.844 202.028 245.591 201.943 cv245.336 201.858 245.083 201.619 244.83 201.563 cv244.699 201.534 244.53 201.635 244.401 201.61 cv244.004 201.537 243.667 201.324 243.306 201.182 cv242.373 201.039 241.413 200.616 240.496 200.42 cv240.611 200.255 240.38 200.464 240.448 200.182 cv240.229 200.186 240.143 200.32 239.924 200.324 cv239.484 200.168 238.881 199.952 238.4 199.991 cv238.136 199.803 237.895 199.647 237.496 199.705 cv237.358 199.685 237.278 199.605 237.257 199.468 cv235.889 199.324 235.053 198.725 233.543 198.468 cv233.486 198.334 233.296 198.333 233.209 198.229 cv232.768 198.252 232.629 198.08 232.305 198.086 cv232.098 197.865 231.714 197.82 231.353 197.753 cv231.323 197.608 231.096 197.66 231.066 197.515 cv230.946 197.519 230.795 197.586 230.924 197.468 cv230.262 197.357 228.794 197.013 228.019 196.563 cv227.683 196.662 227.541 196.474 227.304 196.372 cv226.753 196.136 225.692 196.076 225.495 195.705 cv225.424 195.572 225.458 195.658 225.399 195.801 cv225.317 195.743 225.076 195.742 225.209 195.61 cv225.058 195.7 225.01 195.598 224.828 195.658 cv224.445 195.335 224.229 195.588 223.971 195.134 cv223.723 195.165 223.188 195.104 223.019 194.801 cv222.75 194.831 222.646 194.697 222.495 194.61 cv222.168 194.571 221.804 194.57 221.685 194.324 cv221.452 194.333 221.141 194.227 221.209 194.086 cv221.154 194.126 221.081 194.149 220.971 194.134 cv220.935 194.044 220.829 194.101 220.923 193.991 cv220.586 194.08 220.153 193.879 219.971 193.658 cv219.739 193.699 219.726 193.521 219.495 193.563 cv219.13 193.021 218.242 193.293 217.828 192.801 cv217.696 192.862 217.252 192.722 217.208 192.515 cv216.557 192.568 216.171 191.947 215.446 192.038 cv215.439 191.862 215.107 191.841 215.208 191.705 cv213.692 191.294 212.65 190.461 211.018 190.086 cv210.774 189.662 210.334 189.688 209.875 189.563 cv209.456 189.448 209.078 189.114 208.684 188.99 cv208.481 188.927 208.284 189.017 208.113 188.943 cv208.025 188.905 207.926 188.717 207.827 188.657 cv207.667 188.562 207.29 188.541 206.922 188.467 cv206.784 188.197 206.587 188.283 206.255 188.181 cv205.956 188.089 205.566 187.819 205.16 187.657 cv204.825 187.523 204.426 187.476 204.112 187.371 cv204.037 187.256 203.942 187.161 203.827 187.086 cv203.7 187.086 203.573 187.086 203.446 187.086 cv203.244 186.812 202.681 186.897 202.541 186.562 cv201.987 186.513 201.669 186.228 201.255 186.038 cv200.853 186.165 200.694 185.816 200.446 185.705 cv200.3 185.639 199.753 185.605 199.684 185.467 cv199.681 185.461 199.748 185.378 199.731 185.371 cv199.53 185.286 199.18 185.31 198.874 185.181 cv198.535 185.039 198.402 184.701 197.874 184.752 cv197.751 184.668 197.668 184.545 197.541 184.467 cv197.151 184.559 196.905 184.21 196.588 184.086 cv196.474 184.041 196.383 184.118 196.255 184.086 cv196.122 184.051 196.046 183.897 195.921 183.848 cv195.83 183.811 195.689 183.884 195.588 183.848 cv195.121 183.678 195.181 183.308 194.778 183.467 cv194.227 182.955 193.061 183.058 192.636 182.419 cv191.943 182.322 191.511 182.056 191.302 181.704 cv191.291 181.801 191.235 181.815 191.064 181.752 cv190.72 181.489 190.294 181.346 189.826 181.323 cv189.246 180.534 188.166 180.684 187.397 179.895 cv187.15 179.856 186.873 179.848 186.635 179.8 cv186.462 179.449 186.069 179.317 185.587 179.275 cv185.556 179.148 185.451 179.095 185.397 178.99 cv184.734 178.949 184.237 178.387 183.444 178.323 cv183.39 178.267 183.391 178.155 183.397 178.038 cv182.631 178.047 182.454 177.499 181.92 177.514 cv181.507 177.021 180.271 177.102 180.159 176.466 cv179.809 176.532 179.899 176.334 179.444 176.371 cv179.337 176.033 178.791 176.135 178.635 175.847 cv177.305 175.571 176.687 174.876 175.444 174.514 cv175.37 174.365 175.224 174.289 175.158 174.133 cv175.102 174.188 174.99 174.187 174.873 174.181 cv174.58 173.981 174.272 173.796 173.873 173.704 cv173.67 173.347 172.938 173.312 172.586 172.989 cv172.539 172.946 172.562 172.904 172.349 172.895 cv172.357 172.606 171.491 172.626 171.396 172.275 cv170.156 172.021 168.928 170.876 167.729 170.656 cv167.68 170.531 167.54 170.496 167.491 170.37 cv166.681 170.209 166.184 169.585 165.3 169.37 cv165.243 169.308 165.282 169.296 165.3 169.228 cv165.122 169.347 164.991 169.081 164.729 169.132 cv164.659 168.905 164.172 168.879 164.205 168.703 cv163.298 168.519 162.594 167.768 161.681 167.608 cv161.643 167.439 161.443 167.434 161.396 167.274 cv160.927 167.357 160.618 166.881 160.157 166.799 cv160.209 166.529 159.216 166.514 159.205 166.18 cv159.016 166.27 158.789 166.039 158.538 166.037 cv158.585 165.858 158.304 165.933 158.443 165.799 cv157.372 165.607 156.767 164.809 155.681 164.608 cv155.244 164.139 154.191 164.036 153.966 163.513 cv153.495 163.563 153.185 163.144 152.538 163.037 cv152.196 162.616 151.418 162.632 151.109 162.179 cv150.377 162.271 150.184 161.622 149.395 161.56 cv149.312 161.389 149.124 161.323 149.014 161.179 cv148.871 161.179 148.728 161.179 148.585 161.179 cv148.226 160.869 147.85 160.75 147.395 160.513 cv147.18 160.4 147.031 160.239 146.823 160.131 cv146.676 160.055 146.46 160.074 146.299 159.989 cv146.158 159.914 146.056 159.713 145.918 159.655 cv145.785 159.599 145.58 159.654 145.442 159.608 cv144.604 159.328 143.929 158.523 142.966 158.512 cv142.776 158.02 141.989 158.124 141.775 157.655 cv141.412 157.813 141.341 157.468 141.204 157.37 cv141.138 157.322 140.948 157.378 140.823 157.322 cv140.536 157.192 140.388 156.911 139.823 156.988 cv139.751 156.87 139.675 156.755 139.632 156.607 cv138.918 156.567 138.819 156.028 137.917 155.941 cv137.746 155.383 136.677 155.721 136.537 155.131 cv135.719 155.107 135.32 154.665 134.679 154.464 cv134.536 154.513 134.595 154.358 134.584 154.274 cv134.17 154.3 133.719 154.132 133.679 153.941 cv132.063 153.604 130.739 152.563 129.203 151.988 cv129.239 151.826 129.009 151.928 129.06 151.75 cv128.885 151.797 128.502 151.685 128.488 151.417 cv128.33 151.417 128.171 151.417 128.012 151.417 cv127.799 151.274 127.544 151.236 127.346 150.988 cv126.775 151.049 126.375 150.538 125.679 150.464 cv125.489 149.953 124.455 150.04 124.25 149.702 cv123.72 149.652 123.046 149.414 122.869 149.083 cv121.948 148.986 121.309 148.71 120.631 148.226 cv120.256 148.323 119.938 147.972 119.536 147.94 cv119.527 147.894 119.546 147.844 119.583 147.845 cv119.375 147.838 118.929 147.856 118.773 147.56 cv117.771 147.165 116.777 146.923 115.917 146.321 cv115.826 146.405 115.602 146.356 115.44 146.369 cv115.214 146.277 115.13 146.043 114.821 146.036 cv114.829 145.867 114.619 145.938 114.345 145.893 cv113.811 145.805 113.254 145.304 112.678 145.321 cv111.888 144.752 110.688 144.864 110.154 144.226 cv110.001 144.307 109.597 144.149 109.439 144.226 cv109.419 144.151 109.29 144.185 109.344 144.035 cv108.188 143.886 107.671 143.337 106.392 143.273 cv106.524 143.13 106.178 143.251 106.154 143.035 cv105.486 142.885 104.736 142.845 104.249 142.416 cv103.463 142.222 101.939 141.855 101.058 141.368 cv100.027 141.394 99.292 140.956 98.3911 140.654 cv97.6479 140.685 97.0649 140.406 96.439 140.321 cv96.3789 140.309 96.3906 140.226 96.439 140.226 cv95.2124 140.229 93.8818 139.721 92.6289 139.654 cv92.6099 139.563 92.4443 139.616 92.4863 139.463 cv91.8374 139.535 91.2769 139.458 90.8672 139.273 cv90.3711 139.233 89.8989 139.328 89.5337 139.273 cv89.4268 139.257 89.4717 139.176 89.3428 139.13 cv89.2031 139.081 88.7778 139.231 88.8667 138.987 cv88.1602 138.927 87.375 138.968 86.6284 138.844 cv86.5708 138.835 86.4575 138.709 86.3906 138.702 cv85.5737 138.61 84.6831 138.819 83.9141 138.606 cv83.7705 138.233 82.6963 138.465 82.0093 138.463 cv81.8423 138.472 81.8525 138.303 81.7236 138.273 cv78.5918 138.217 75.5537 138.067 72.5322 138.083 cv72.0229 138.085 71.5127 137.909 71.0562 137.939 cv70.1694 138 69.083 137.939 68.0557 137.939 cv67.0288 137.939 65.9204 138.085 65.1035 137.939 cv65.0093 137.923 65.0239 137.845 65.0557 137.845 cv64.7842 137.847 64.501 138.087 64.1982 138.13 cv62.9009 138.313 61.2212 137.915 59.6743 138.083 cv59.123 138.143 58.2935 138.411 57.5313 138.273 cv57.5166 138.337 57.4497 138.384 57.3887 138.511 cv55.8809 138.429 54.7964 138.607 53.293 138.75 cv52.6396 138.811 51.8975 139.092 51.4834 138.797 cv51.5166 138.835 51.5576 138.927 51.4834 138.94 cv50.1719 139.001 49.894 139.385 48.3882 139.273 cv48.0444 139.47 47.2827 139.5 46.8164 139.416 cv46.7173 139.43 46.8872 139.545 46.7212 139.559 cv46.1025 139.479 45.459 139.798 45.1973 139.845 cv44.7163 139.93 44.2593 139.792 43.8638 139.845 cv43.6104 139.878 43.4761 140.103 43.2446 140.178 cv42.8057 140.321 42.3696 140.229 41.9111 140.178 cv40.3804 140.868 38.0044 141.122 36.292 141.464 cv36.187 141.565 36.0757 141.66 35.9585 141.75 cv34.4624 141.696 34.4355 142.025 33.2441 142.13 cv33.1064 142.167 33.0688 142.304 32.9585 142.369 cv32.4644 142.373 31.9912 142.522 31.625 142.511 cv31.1313 142.795 30.5835 143.012 30.0059 142.892 cv29.3911 143.441 27.9307 143.423 27.1963 143.94 cv27.0991 143.889 27.0015 143.937 26.8628 143.845 cv25.7676 144.654 24.4443 144.648 23.1958 145.273 cv22.9375 145.237 22.8267 145.349 22.5767 145.321 cv22.5122 145.336 22.5371 145.44 22.5293 145.512 cv22.1016 145.727 21.5596 145.766 21.1006 145.988 cv20.8057 146.13 20.4824 146.576 20.0527 146.273 cv20.0781 146.312 20.1025 146.351 20.1006 146.417 cv18.9302 146.85 18.144 147.306 16.9575 147.56 cv16.876 147.649 16.7598 147.765 16.8145 147.75 cv16.4243 147.963 15.75 147.892 15.5762 148.321 cv15.3228 148.306 15.2549 148.476 15.0049 148.464 cv14.647 148.917 14.3755 148.901 13.8145 149.083 cv13.707 149.104 13.813 149.336 13.7192 149.369 cv12.8896 149.765 12.2666 150.369 11.4331 150.607 cv10.9395 151.291 9.91602 151.288 9.52832 151.988 cv9.24414 151.99 9.15674 152.188 8.90918 152.226 cv8.4248 152.92 7.43408 153.093 7.09961 153.512 cv6.86865 153.542 6.60986 153.726 6.43262 153.941 cv5.43066 154.062 5.28174 154.816 4.38525 155.131 cv4.38184 155.455 4.06152 155.684 3.81348 155.607 cv3.5874 156.27 2.80518 156.376 2.52783 156.988 cv2.24854 157.027 2.09277 157.188 1.81348 157.227 cv1.75195 157.838 1.10059 157.918 0.956055 158.56 cv0.786133 158.58 0.702148 158.687 0.47998 158.655 cv0.326172 158.698 0.413086 158.5 0.337402 158.465 cv0.188477 158.45 0.458008 158.603 0.289551 158.607 cv0.0737305 158.633 -0.0214844 158.538 0.00390625 158.322 cv0.131348 158.194 0.185059 158.383 0.289551 158.417 cv0.275391 158.32 0.160645 158.324 0.146973 158.227 cv0.395996 157.548 0.862305 157.137 1.00391 156.465 cv1.90918 155.858 1.90771 154.363 2.76611 153.846 cv2.65527 153.736 2.854 153.692 2.81348 153.512 cv3.11475 153.273 3.45557 153.075 3.48047 152.56 cv4.06641 152.097 4.40479 151.842 4.62305 150.988 cv4.74414 150.903 4.88867 150.841 5.05176 150.798 cv5.01221 150.123 5.72754 150.204 5.62305 149.464 cv6.7334 148.653 7.57178 147.571 8.6709 146.75 cv8.6709 146.639 8.6709 146.527 8.6709 146.417 cv9.33643 145.939 9.92041 145.38 10.4331 144.75 cv10.7476 144.892 10.9761 144.231 11.2905 143.94 cv11.3906 143.847 11.6284 143.823 11.6714 143.75 cv11.7612 143.597 11.6758 143.407 11.7666 143.321 cv11.8276 143.378 11.98 143.175 12.1953 143.13 cv12.4341 142.655 12.7407 142.248 13.1953 141.987 cv13.1582 141.945 13.144 141.88 13.1475 141.797 cv13.5264 141.648 13.7637 140.8 14.3857 140.606 cv14.8159 140.194 14.9302 139.896 15.5762 139.606 cv15.8862 139.329 16.2163 139.072 16.4336 138.702 cv16.8696 138.652 17.2158 138.296 17.4336 137.892 cv17.5508 137.898 17.6631 137.899 17.7192 137.845 cv17.9731 137.495 18.3257 137.245 18.7192 137.035 cv19.2109 136.426 19.8818 136.29 20.3384 135.654 cv21.3159 135.352 21.2729 134.794 22.1479 134.463 cv22.2271 134.415 22.1997 134.261 22.2437 134.178 cv22.9756 133.703 23.7119 133.233 24.3389 132.654 cv24.6348 132.584 24.8945 132.479 25.0054 132.225 cv25.6235 132.1 26.0425 131.446 26.6245 131.368 cv27.0576 130.781 28.0659 130.367 28.7202 129.844 cv28.8384 129.837 28.918 129.869 28.958 129.939 cv29.0542 129.417 29.5972 129.535 29.9106 129.416 cv29.9888 129.288 30.0601 129.152 30.1489 129.034 cv30.77 128.814 31.2798 128.229 31.9106 128.177 cv32.0254 127.957 32.438 127.67 32.8633 127.605 cv33.2109 127.112 34.0996 127.16 34.3394 126.558 cv35.1187 126.559 35.4946 125.904 36.1016 125.891 cv36.2397 125.615 36.9219 125.481 37.1968 125.415 cv37.2065 125.234 37.334 125.171 37.3872 125.034 cv37.6377 125.092 37.835 124.85 38.0063 124.986 cv38.7344 124.236 39.9883 124.214 40.7686 123.462 cv41.21 123.311 41.7021 123.189 42.1494 122.986 cv42.3774 122.883 42.73 122.786 43.0068 122.653 cv43.1177 122.6 43.1895 122.465 43.2925 122.415 cv43.6807 122.224 44.1978 122.352 44.3877 121.891 cv44.5698 121.851 44.77 121.829 45.0068 121.843 cv45.335 121.601 46.0151 121.216 46.4355 121.51 cv46.4976 121.397 46.5151 121.24 46.5786 121.129 cv47.0977 120.855 47.8823 120.846 48.2451 120.415 cv49.0435 120.403 49.5054 120.056 50.0547 119.795 cv50.1729 119.789 50.2856 119.787 50.293 119.891 cv50.3926 119.877 50.2236 119.764 50.3403 119.701 cv50.981 119.341 52.0898 119.449 52.5313 118.891 cv53.2305 118.935 53.6885 118.314 54.6265 118.367 cv55.4429 117.755 56.7202 117.604 57.7217 117.176 cv57.918 117.334 58.3926 116.936 58.9126 116.986 cv58.9683 116.979 58.9526 116.899 58.96 116.843 cv59.3223 116.824 59.625 116.746 59.8647 116.605 cv60.4302 116.77 60.5962 116.355 60.9126 116.271 cv61.2866 116.173 61.6235 116.275 62.1509 116.129 cv62.4595 116.043 62.8018 115.672 63.3413 115.843 cv63.5254 115.836 63.5293 115.65 63.6748 115.605 cv65.4502 115.268 67.7715 114.729 69.5322 114.604 cv69.6235 114.474 69.7983 114.426 69.9131 114.319 cv71.0449 114.448 71.6558 113.885 72.5801 113.938 cv72.7202 113.738 73.3462 113.7 73.7705 113.795 cv74.2158 113.4 74.8691 113.46 75.6753 113.367 cv75.9038 113.34 76.1245 113.202 76.3896 113.176 cv77.5605 113.064 79.0498 113.301 80.0093 112.843 cv81.4526 112.77 83.8066 113.022 84.9619 112.652 cv85.4639 112.577 86.5205 112.698 86.8667 112.462 cv86.9209 112.471 86.8931 112.51 86.8667 112.509 cv89.0679 112.435 92.6982 112.321 95.7246 112.462 cv96.8081 112.512 97.6987 112.337 98.7725 112.414 cv99.1934 112.444 99.5542 112.641 100.01 112.652 cv101.195 112.682 102.188 112.73 103.344 112.843 cv104.419 112.947 105.412 113.345 106.439 113.462 cv106.664 113.487 106.894 113.438 107.106 113.462 cv107.558 113.512 107.971 113.716 108.439 113.795 cv108.652 113.831 108.82 113.759 109.011 113.795 cv109.131 113.818 109.239 113.944 109.392 113.986 cv110.221 114.213 111.156 114.297 112.154 114.319 cv112.294 114.401 112.355 114.562 112.487 114.652 cvcpef187.064 1.5498 mo187.169 1.479 187.388 1.61279 187.54 1.64502 cv187.58 2.3501 188 2.10938 188.111 2.69287 cv188.551 2.83203 188.479 3.62939 188.73 3.97852 cv188.858 4.83643 188.512 5.2207 188.54 5.97852 cv188.151 6.62012 187.831 6.78223 187.54 7.45508 cv187.355 7.49219 187.144 7.65625 187.016 7.979 cv186.538 8.26172 186.168 8.6543 185.635 8.88379 cv185.536 8.896 185.622 9.09277 185.54 9.12158 cv184.393 9.26221 182.994 9.43066 181.968 9.07422 cv181.938 8.78955 181.457 8.57275 180.968 8.55029 cv180.675 8.19434 180.134 7.50098 180.063 6.93115 cv179.298 6.25146 178.612 4.54492 179.301 3.64502 cv179.301 3.51807 179.301 3.39111 179.301 3.26416 cv179.328 3.05225 179.547 3.03418 179.492 2.74023 cv180.016 2.41943 180.188 1.84424 180.54 1.45459 cv180.84 1.5166 180.845 1.2832 180.968 1.16895 cv181.451 1.06396 181.773 0.799316 182.063 0.501953 cv182.82 0.381348 183.472 0.518555 183.968 0.0258789 cv184.268 -0.0859375 184.387 0.199219 184.587 0.26416 cv185.107 0.432129 185.763 0.268555 186.159 0.64502 cv186.188 0.6875 186.216 0.72998 186.159 0.740234 cv186.243 0.909668 186.764 1 186.826 1.12109 cv186.834 1.13818 186.753 1.23535 186.73 1.21631 cv186.786 1.26221 187.223 1.26318 187.064 1.5498 cvcpef214.018 49.9814 mo211.094 49.9272 207.288 50.0396 204.827 50.0293 cv201.497 50.0146 198.1 50.127 194.874 49.9814 cv194.804 49.7861 195.028 49.7603 195.017 49.6484 cv194.98 49.3052 194.624 49.0781 194.731 48.6006 cv194.852 48.0615 195.374 47.8354 195.874 47.6006 cv196.041 47.522 196.272 47.3574 196.493 47.2671 cv196.808 47.1382 196.798 47.2163 196.969 47.0767 cv197.017 47.0376 197.119 47.0029 197.16 46.9814 cv198.241 46.3989 199.396 46.0098 200.303 45.5049 cv200.127 40.8428 200.354 34.8726 200.303 31.4092 cv200.225 26.2266 200.262 18.4771 200.35 12.1221 cv200.368 10.8403 200.301 9.31445 200.35 7.83594 cv199.496 7.24268 198.318 6.92627 197.207 6.50244 cv196.831 6.35889 196.374 6.25195 196.112 6.07373 cv195.472 5.63965 195.11 4.42139 195.779 3.83545 cv196.098 3.55615 196.904 3.36035 197.684 3.12109 cv198.905 2.74707 200.193 2.3418 201.398 1.97852 cv201.848 1.84277 202.207 1.72363 202.779 1.59766 cv202.857 1.58008 203.027 1.34473 203.065 1.59766 cv203.995 1.14502 205.312 0.817383 206.494 0.45459 cv207.361 0.188477 208.105 0.102539 209.018 0.45459 cv209.003 0.712402 208.922 0.963867 208.922 1.21631 cv208.926 9.1001 208.937 18.3037 209.065 25.3608 cv209.096 27.0298 209.065 29.3076 209.065 31.3613 cv209.065 35.0859 209.113 38.9473 209.113 44.124 cv209.113 44.6479 209.025 45.4609 209.161 45.6479 cv209.327 45.8784 210.032 45.9736 210.398 46.0767 cv211.621 46.4199 213.076 46.7979 214.018 47.3145 cv213.999 47.4526 214.159 47.5005 214.208 47.6006 cv214.577 48.3433 214.464 49.374 214.018 49.9814 cvcpef389.648 22.6943 mo388.3 22.5264 386.546 22.8184 385.505 22.4561 cv385.416 22.2935 385.415 21.8853 385.505 21.5513 cv384.901 20.9707 385.717 19.9663 386.314 19.5986 cv386.875 19.2544 387.546 19.1372 388.125 18.7412 cv389.368 17.8901 390.689 16.8486 391.935 15.8838 cv392.125 15.7368 392.252 15.5762 392.458 15.4077 cv392.614 15.2803 392.617 15.2842 392.791 15.0269 cv392.865 14.918 392.949 14.8359 393.029 14.7412 cv393.132 14.6201 393.219 14.4883 393.315 14.3604 cv393.582 14.0054 393.875 13.7495 394.029 13.3599 cv394.379 13.0469 394.637 12.6025 394.982 12.1694 cv395.235 11.8525 395.5 11.3325 395.887 11.1694 cv396.506 10.9087 397.083 11.2002 397.554 11.5029 cv397.87 13.707 397.572 17.228 397.744 19.313 cv399.698 19.3657 402.502 19.2764 404.888 19.313 cv405.077 19.457 405.28 19.5874 405.459 19.7412 cv405.453 20.4434 405.827 20.8848 405.649 21.4082 cv405.493 21.8691 404.941 21.9858 404.745 22.5034 cv402.417 22.6055 400.02 22.6489 397.792 22.6465 cv397.777 28.3579 397.753 33.7832 397.84 39.7905 cv397.842 39.9551 397.788 40.1519 397.792 40.314 cv397.813 41.3442 398.021 42.2588 397.744 43.2192 cv397.861 43.5151 398.049 43.7397 398.125 44.0762 cv398.563 44.1909 398.799 44.5674 399.221 44.6001 cv399.605 44.6304 400.111 44.4585 400.602 44.4097 cv401.537 44.3169 402.348 44.1284 403.173 43.8857 cv403.541 43.7778 403.925 43.5532 404.269 43.5527 cv404.651 43.5518 405.419 43.9204 405.602 44.4575 cv405.723 44.811 405.586 45.1846 405.649 45.6479 cv405.307 46.0166 405.01 46.209 404.792 46.5054 cv404.246 46.6802 403.59 47.21 403.03 47.6479 cv402.825 47.6826 402.618 47.9932 402.221 48.124 cv402.139 48.1699 401.618 48.4287 401.411 48.6479 cv400.877 48.9048 400.267 48.9819 399.363 49.1719 cv398.848 49.2803 398.41 49.4463 397.887 49.4575 cv397.528 49.4653 396.741 49.645 396.173 49.5527 cv395.699 49.4761 395.104 49.1343 394.601 48.9336 cv393.621 48.5435 393.009 48.3638 392.172 47.6958 cv391.471 47.1353 391.282 46.9458 390.887 46.0767 cv390.565 45.3706 390.248 44.5 389.935 43.7905 cv389.851 43.6025 389.728 43.5249 389.696 43.3618 cv389.625 42.9961 389.701 42.4775 389.696 42.0288 cv389.63 35.8101 389.522 29.0684 389.648 22.6943 cvcpef145.156 21.8843 mo145.478 21.814 145.645 21.5386 145.918 21.3608 cv146.408 21.042 146.949 20.814 147.347 20.4561 cv147.902 19.9561 148.581 19.5171 149.299 19.1226 cv149.72 18.8916 150.235 18.6992 150.681 18.5034 cv151.698 18.0547 152.692 17.6338 154.109 17.4556 cv155.313 17.3042 156.595 17.3467 157.824 17.2651 cv157.813 17.2656 157.93 17.3081 157.967 17.3125 cv158.673 17.4058 159.383 17.6973 160.062 17.8843 cv161.03 18.1509 161.952 18.5571 162.776 18.9316 cv163.111 19.2686 164.003 19.8105 164.396 20.0747 cv164.876 20.6357 165.441 21.4019 166.063 22.0747 cv166.593 23.2354 167.292 24.2949 167.586 25.7896 cv167.911 27.4341 167.668 29.9854 167.682 31.8853 cv167.688 32.8013 167.735 33.7505 167.729 34.647 cv167.722 35.7266 167.561 36.7212 167.824 37.6475 cv167.684 40.3481 167.87 43.3755 167.729 46.0767 cv168.76 46.5239 169.901 46.8105 170.729 47.3145 cv170.904 47.3145 171.079 47.3145 171.253 47.3145 cv171.358 47.7988 171.76 48.4722 171.729 49.1245 cv171.646 50.936 168.186 50.3027 166.396 50.2671 cv163.82 50.2163 161.37 50.1479 159.205 50.1245 cv157.628 50.1074 156.012 50.1187 154.776 49.9814 cv154.657 49.6348 154.136 49.353 154.014 48.9336 cv153.807 48.2246 154.222 47.8789 154.49 47.3145 cv156.894 47.4282 157.737 46.8506 159.348 46.5054 cv159.167 42.5195 159.609 38.1172 159.3 34.0757 cv159.101 31.4629 159.726 27.9453 158.872 26.3608 cv159 25.8257 158.442 25.1367 158.348 24.5039 cv158.117 24.4487 157.983 24.2964 157.967 24.0273 cv157.172 23.3398 156.874 22.959 156.014 22.1699 cv155.715 22.1196 155.52 21.9658 155.3 21.8369 cv154.322 22.0449 153.313 21.6641 152.538 21.8843 cv151.846 22.0811 150.964 22.7822 150.299 23.0273 cv150.46 22.9683 149.842 23.3208 149.918 23.2178 cv149.912 23.2275 149.986 23.3018 149.966 23.313 cv148.392 24.1938 146.942 24.9341 145.204 25.8369 cv145.09 26.9873 145.29 27.9492 145.108 29.1709 cv145.31 30.5459 145.112 32.2427 145.108 33.8374 cv145.108 34.3179 145.216 34.7715 145.204 35.2188 cv145.164 36.6597 145.19 38.4033 145.204 39.981 cv145.218 41.6333 145.294 43.3135 145.156 44.9336 cv145.115 45.4194 146.618 46.3867 146.966 46.6479 cv147.664 47.1719 148.277 47.645 148.871 47.9814 cv149.412 48.6001 149.272 49.6016 148.871 50.0293 cv143.1 50.1172 137.761 49.769 131.965 50.0293 cv131.687 49.7695 131.294 48.8491 131.536 48.1719 cv131.657 47.8345 132.247 47.4868 132.631 47.2671 cv132.795 47.1738 132.959 47.1021 133.155 46.9814 cv134.205 46.3374 135.374 45.7788 136.156 45.1719 cv136.027 38.9546 136.018 32.4771 135.87 26.8369 cv135.86 26.4565 135.962 25.8945 135.87 25.5991 cv135.75 25.2134 134.817 24.7373 134.298 24.3608 cv133.697 23.9248 133.012 23.519 132.584 23.1704 cv132.457 23.0669 132.189 22.8071 132.155 22.7417 cv131.961 22.3643 132.031 21.9336 132.06 21.5513 cv132.336 20.9736 132.854 20.9199 133.489 20.7412 cv135.342 20.2207 137.212 19.7578 138.727 19.313 cv138.92 18.9922 139.455 18.8027 139.632 18.646 cv139.984 18.3354 140.523 17.8159 141.061 17.3125 cv141.744 16.6733 142.273 16.1172 142.871 15.6938 cv143.468 15.27 144.491 15.1421 144.823 16.0269 cv145.02 16.5508 144.929 17.6172 144.966 18.4556 cv145.019 19.6558 145.071 20.8403 145.156 21.8843 cvcpef429.461 21.313 mo429.343 20.9756 429.137 20.9258 428.889 20.7412 cv428.887 20.7397 428.68 20.4297 428.651 20.4082 cv428.163 20.043 427.574 20.0117 426.984 19.7891 cv426.799 19.7192 426.739 19.5801 426.556 19.5508 cv426.396 19.5259 426.198 19.5928 425.984 19.5986 cv425.443 19.6138 424.813 19.4482 424.365 19.5034 cv423.729 19.5811 423.011 19.9639 422.604 20.2651 cv422.375 20.4336 422.228 20.6763 421.983 20.7891 cv421.822 21.0752 421.183 21.3643 421.031 21.8843 cv420.94 22.0376 420.691 21.9272 420.698 22.0747 cv420.441 22.3799 420.38 22.8262 420.079 22.8843 cv420.186 23.2407 419.723 23.4482 419.65 23.8369 cv419.619 24.0049 419.712 24.2295 419.698 24.4087 cv419.61 25.5137 419.118 26.7427 419.031 27.7422 cv422.269 27.8994 426.06 27.7319 428.984 27.9326 cv429.587 27.7422 430.827 28.0142 431.556 27.8848 cv431.697 27.8599 431.939 27.8457 431.937 27.6465 cv431.749 26.6836 431.512 24.959 431.317 23.7417 cv430.952 23.0054 430.355 22.1313 429.746 21.313 cv429.614 21.3901 429.757 21.2285 429.461 21.313 cvcp439.938 30.0757 mo438.187 30.4644 436.044 30.188 434.365 30.1709 cv429.729 30.1226 424.5 30.2378 420.127 30.0757 cv419.79 30.063 419.424 29.9785 419.079 30.1709 cv419.241 32.1846 419.416 33.8828 419.555 35.79 cv419.849 36.1479 419.934 36.8516 420.174 37.4092 cv420.333 37.7778 420.681 38.0645 420.65 38.4092 cv420.839 38.5259 420.597 38.3384 420.793 38.3618 cv420.982 38.9346 421.526 39.4067 421.65 39.8857 cv422.188 40.3906 422.733 40.7412 423.27 41.3145 cv423.447 41.5039 423.533 41.6592 423.841 41.9336 cv423.957 42.0366 424.142 42.0869 424.223 42.2666 cv424.311 42.4644 425.883 43.1279 426.46 43.3145 cv427.429 43.6279 428.979 43.4482 430.271 43.5049 cv431.363 43.5532 432.049 43.4419 432.794 43.124 cv433.116 42.9863 433.469 42.7632 433.842 42.6001 cv434.204 42.4419 434.635 42.3271 434.984 42.1714 cv435.793 41.811 436.557 41.2354 437.366 41.124 cv437.908 41.0488 438.362 41.1152 438.651 41.3145 cv439.019 41.5674 439.489 42.5044 439.414 43.0762 cv439.357 43.5029 438.66 44.0698 438.271 44.4097 cv437.656 44.9468 437.131 45.3311 436.794 45.9336 cv436.483 46.0273 436.232 46.4126 436.128 46.3145 cv435.549 47.1597 433.971 47.7588 432.89 48.2197 cv432.763 48.4829 432.33 48.4121 432.223 48.6958 cv431.161 49.1021 429.872 49.2656 428.461 49.5527 cv427.831 49.6812 427.434 49.7539 426.508 49.791 cv425.393 49.8354 424.203 50.0308 423.222 49.9341 cv422.65 49.8774 422.067 49.6748 421.508 49.5527 cv420.078 49.2407 418.911 48.6841 417.698 48.1719 cv417.694 48.0498 417.477 48.104 417.603 47.9814 cv417.313 48.0322 416.693 47.562 416.126 47.2671 cv415.371 46.874 415.043 46.7363 414.507 46.124 cv414.458 46.0679 414.016 45.5869 413.793 45.3145 cv413.145 44.5239 412.469 43.9536 411.983 42.981 cv411.744 42.5015 411.531 42.1509 411.507 41.6953 cv411.344 41.6401 410.854 40.6846 410.745 40.314 cv410.606 39.8438 410.652 39.333 410.555 38.8379 cv410.295 37.5317 409.896 36.1895 409.888 34.8853 cv409.826 34.6973 410.063 34.77 409.936 34.647 cv409.769 32.4019 409.905 29.8794 410.316 28.0752 cv410.789 26.8867 411.148 26.335 411.555 25.2183 cv412.141 24.4922 412.78 23.7549 413.412 23.0273 cv413.65 22.7529 414.194 22.0449 414.65 21.5513 cv415.011 21.1602 415.378 20.6353 415.745 20.3604 cv415.936 20.2188 416.243 20.1328 416.508 19.9795 cv416.731 19.8491 416.948 19.6279 417.174 19.5034 cv417.801 19.1582 418.528 18.894 419.127 18.5508 cv419.859 18.1309 420.765 17.6318 421.793 17.3604 cv422.23 17.2451 422.769 17.231 423.27 17.1699 cv423.795 17.1055 424.354 16.9717 424.889 16.9316 cv426.2 16.8345 427.893 17.2197 429.317 17.2651 cv429.326 17.3057 429.299 17.3101 429.27 17.3125 cv429.748 17.5283 430.972 17.6802 431.794 18.0269 cv432.111 18.1606 432.448 18.4824 432.746 18.646 cv433.443 19.0283 434.113 19.3354 434.842 19.7412 cv434.967 19.811 435.246 19.9043 435.271 20.0747 cv435.285 20.2432 435.366 19.873 435.413 20.0747 cv436.111 20.4111 436.488 21.1255 436.938 21.6465 cv437.454 22.2456 437.849 22.5786 438.318 23.313 cv438.729 24.4238 439.128 25.0635 439.651 26.1704 cv439.486 26.2998 439.672 26.5171 439.557 26.6465 cv440.035 27.4043 439.891 29.0083 439.938 30.0757 cvcpef%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5[[/CSA [/0 ]]] del_resAdobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 12.0%%AI8_CreatorVersion: 12.0.1%%For: (Michael Tatham) (The Tatham Group)%%Title: (logo.eps)%%CreationDate: 6/24/09 4:05 PM%AI9_DataStream%Gb"-6kuuiadO>%LJFC<>*+kts/<Z*F_*A'Q0Ej3s$ogKPS(M??^%RM.mAG\V9pT<mG.tBAo=S5P13T_!L[+/n\k68-XL4[)f6=?d%[J%A%b<hS-h:B`WCR7ac.oe''G6cB1]M;HcD1NG&Y0\_uD,k^_3+^S4WgY;?J6Qr!4[1i/^&:_'WnHdjg(3RGGI^uU]?r+s2K%GE%UJtCP[P$ih&']F4o@W8lh5Z3@6GHWL^3dBhq##Biln"JT?*gcj\=cl_])W<miHHp2DI#Cf?T7^$)HY2Lm72EV`<XZlI6VQAH8'O+%>emiZ2V2]ih-Tu@i0VV*rAX?@TQtV1m<'>\]6<N;/@TuUI!g6RoU7UR_m?CEg!Jq=pb$@!,T&Of<Tol"$\SI?/g+(+>V!T]o<5dg%^Qnm4=*LcQ]6h^WgV:@0S?-m[LNicL8NNGL[Y<#'#L<q*c>i0Q#?)d6Gmq.9^2?-]lm-EGTn1\SWJTPs.i^E-2pEDFCAZs-B=hDl%2>IM3^=2khg$-Z1]SjJ$B'ZCD6DIg#VINX9@<jOie#41Nj-@$PD;.fg2a+&i/01^A3]((HrjQJ%Jd*>fLi$UZW[e=?AKM\&YB+o/%f34IBFY5R6GLs[j3I9B?&"6/A%K5aps*;sFs'Dn^P*5ldWpL#XBNfQQO?5G5"U]$&mLXZT>;k:m;XPH"6>O9^CI"M\WKjr]s":MR%h*[XZi1FH9VetIlkM^'UVFh:"ru))*2%4kI)#UaI7qdX_D6*nSZge]Eff%Eem<W'Gl$6COo<=5[rt*oUYa4H\/c:?q=K>K?>.#88%enXuU<l6uk3^0[tD&]27FaRN!1CT>3a33N%*r.6OWoo+6Wo,8U_E$R&f"sGHRIW/(&Un10S.U50]G2b1(?^@Cp^:_fT@ae:M-It;%i?unis'dG&$2\7LErT5LkCoO1Vd@D![6?Qj`\CtcZ%S_XaYW,-o@S>)gcLO$Xc]X"s0*9a%mR<F?9t/?5N<Kr^K:m,VcK1i_QZ!a%r5;r%4'mF7jH3pYIUXn!++Ec116jP"\UWsCd/]23d>qHe*Znl4CGFZ[??kTpH5nr+Mu2V%eTu3EoagBHlkF$jlk#Uubti>.pkcDG%^2\U\'8FJ%XFmi0<>9#F]u-5t*gjMR%4bUZe:o2\8mtn"qa.D6j./]\=Qb,ND`DdF,&2!XG-%NdkLLNBTCY8g3U]Y=AmTPu%C]03%In[VnDJ,>77IAZ6B.5qH[*R7(kWYY(KFVZdmIXeO'paJp^_&"h,'8>E2-)S@eM"DTO@!XQ&-"Cd'_7m!o98)cs"dCK*W5#KV2Ai(%8ar)H3=c'!rpi;*jkm5AqKCu8eQ%&2r8iEDC]$9hbPt2"olVknrpmg`%K7CGjaWa!O81f=*IdRjno+2Zs2+\UZY!D6Fj6r<=$=HP%Kb`/gr5Q-sDu<7qprfmC!QMMUgMifTSZ'C;-:56Ys"teJ<37jUiA-A#J^4>A`8B8Qn4nLVX]5nc8")bHMuO-cLOGQrLSY8b37dA0%SUZtU=9>V..L96tg\_FL-u>Cec?$BG9/M)-I1sSud2NS@$tfTXXC6MsQ!WJ_i.'J#.U`a8,;b]WX?kZBQhuO+0\]SDlH8!<5:R!)%K5c%>Fj6,VZ<bDO7Mp^d`3g277ddC);61A2ah@K,4hroQ''n2N=q?Mqc"hmF@E#1Z[;)fmI'7k+ZMY[A,)EXaQrskP-`I8b@S;Ai%O7<J4i?.*b0'S#S]9]keRYl!%`OHG5^cnDZNY0<i2.7eM(6!P6DQVm/YBmk<5bX-^hYT!1*$Nnk=YhA`N3G1T*KCNsMj0+'%#Jil%HILboc)&h/27A47<2Knl\&K^NB#;6hL:#.3GQj3b/>bn+Bb9#7`&hrYX0fXk/9sH7AoX->gjci_n<q-DbhHJpS/neiJlEsoGb[.$%\N\J&j+3fmMYPha5g$dd'Ypi^(=G4G1_'Y&;U&7iXM5,g"nE>[Wibt3XrG[jT-@S4Y*S_I1;7aFH2R:RTN-?On'um('u8CG*bm!&%4_ia3*G2GE%[A9BLFJY3']<<VHF4gPT!9VdHReFum=oVA=@?i*Xo8NP$21[$g;]N`R!1.$*H7A?=SEZ]9WQ!enOT(Z\P:'L;2^uq%GNoKI_iW)fq)?ORjj>TmVY146GuO5u7G0X-`&hsV3?$MT2<571P<"<n%H[XA',Y'^_7YIV'2T_@(>K-mMHFUXY=](rA*.5-lhE^=%7XT'<Gn84=>4\T8W^"Yq=EkkU)+l)j:Hagr+C=?mc?3272eK]I#H)T<o(+p6lW*dW6/_bq8iZ[-HS9n[l<5JOMRrjXMEHrV9g3&9%lq;rA0+mJa?(gYtU3^XNN`siAU%(Z]Ke;Y`s'eQJh9cgpkTB2p%=aH7s!%^[F*<Q)Qbp+mPj5HHF&`9<5f:%*G,[0`L6DSBoFFQ]%D_oqFWY*B$.)1SiOtO!h3E,s6o)&[e\dfs_IE-D%YK\jY9Z=:3s(&2?rh&p&@SL;[2_<3YP8lS<5/rLa@G$9cG=_:P'V,mYOM_>M%rU\r"$r*d&pGJbf$>R(d>f(?tHLkM!dgRDiOcru.Io/Dn]`092'kT_Eg!i>n@PuLSi\dGi+7rXoL%[)r)fd8k]U(ICN--HRT_'((%L*Pk=QMa3m%pSYqS+/^1ds+E5B72$N78r>7g'CNTAd/+'E2jA%jk:!BYO`f&h,D]&[LFJPI/VZ-fbIjig1-;G<pNBCiCXF"hmo`9%^sH1f-efk]:GBHnmQHkAEP<3ZRA,)k+T3n4Tui<K\F/:gN[q!*JT0ZYL*ZYT<`R91Ceg^?/0+tT]`51bA_\R+n1Khb:s+j#<b^pd%b*j7p1U=Lmm:%H[eIs**O+Du,i_4sb9brN.cQ.h]>il0h1l4$1T%=0>.'uX3PoH%HMI.d4*l%I@Me"h;:i9C-:Y$+s`RHlRAXV=,%#&Dp@Gt@7`gdLC==dW,e(\%$<$C1LClkddO6i`X0F%I/dgL@lL@emX^V[ViP7Or06.XOA+>EYp<$;ERYj_GY]:k;S7SC9ILU/[@8%+"]fH;>Hce%pc'-Ci)t.#%ap9FSosXKBl>0q&7^k80104(:>B]H8kgci/2ps/mC_:72HR643?e_UDBq"/)H5,P(oBRC*@k;86i!o%)fpIYFpIUaU`c2@*jIqml(#;:i<:,`Ef;^H+<J;[qcbiL0Xg%uA-j.AS+U/Z%+=JWFl:AXFO)73.!#U$S&'-LPrBi"hU,3,er(FX%;A/j9CbM/E*np\l[F\R]aOX;#/m:u.D-LKl)"rr!^o(u=CnS)]]#Kpor`3f!ib<./S_<CSg(3QiIcc-X-\ot'o+N30ddN*TD5_m7%_BZnF7sa0$lp!VMUWlR2q.[J6ZX'#&]l%18bPR:UD0bNBft-UsQ=Us6/2IEnmbIckjK`O\mV+Sc]qZ&YqVIJ2/q5a^H2oK(Jo?Fj%GJ3.sL(:EVPd=:plTBB0b=CsnK0R*6,Cc)dQqFX_In(UX"OPk<0rFhpOqlt>X`f$jFhL'-oH)rLIrjq``l#^M9rIN'HZtb)6,I]X%-[msABD%$LV]!;!:\?XO=oSAEfm^Hs4pKLR.bS`^H?WF$c,7<.^#nA5f%-<TgRZ@rg8K+goiLaYr=g0G?d`UnQTmDi:K^EP1B"k$%?,I/Gr>_K8rV2')2!)X0``&(UgUjRdc,1N3r6T+73b9f8RmcrPoF(RJb*'9YDq)>u`Y`<9Mi67NdGlSkNRI_$U"M"LI;$%geY4/I%AJe=G%:(Q6CcjW!$`0]MWucA_Sh@"!f'aZA:I+m4/W?UO'tA@Oi^9#BQ%^KV_d;BgITW6_4fpTQG?<a@3plfV-AYFS+8.b$/i9k_%GD.1sNR$GCAO&YqGL4!;GHRFeplMOJI/&g`>5@gZP#d#B?[b;g^WL/6\,>p2<ka=:dt8:`\;$lM5Kg7QV=I<YR9=4s<LJ.b^FGM8%OO=g)6D>lTp6c"1puo6\J`@4E*.XrG2e2'ZG3^'T9?OKVJE'aR>g<rNK\um"p.AN=d61D.Y,]@fL#pAZf;c8nJ3f7D9(6)qjjQ[J%5<XfN4nu]7G"$[j%2`u.k.'1$poE*%]>"8oO%B7?c_@eRnaGTT7G?,kJkb7#A_6]aB)99doRE:ns"`('AYu4Ve#uU%G^ek)&$aU$%]>pfST:HUCq=2l-+48F9&tS9$896\D=UFr!=Y9jqCVmE+10`!tF$e:p/*OgJ8\kUj4A`3dlKJ,)LF--&2"pmkr1f7,\'q][s&81j%Hf)RfmB??G:u)Rj,j[d;i?d]W-<2I'N<kLcZ)NN'r-u!h)N#9,1bQhKipbWdFKqWj"(gDo&;fH9e(pRUmH\BD_cPrfIm6-(i:19O%fB_3t551LOUgC"2g?CHns(PpNm>#F^h;1;"GFC+d"*/],0]PC:O5Abi9n#.pZIQY`X3p1GK"VAo'cgM@WdclISlK&In#"TM_*6sq%E[9J^YQ(<K!NiMm"#1>RX8D%%*mCRO$ifS+0(12/8E?-W&BA4cpQ6dWG^eW*@p8jD0d/;,O_ar?NQ[)h*l9#/WrJ8@qXS"([lRRg%LFF.>GP-o?@K.l+qf?khghi\kKJF(H=C-%Gj8/ntnm=5<rtfimpZK<jMl#r.]FDF_G?=gnH*Nuc]6)D94J^<rml[ZJpHQoKANK@S%ao"4:WW(A1d5AD5]0[SrS(m)]c#"NAkL]We(J/mAdO'(hmXa`[C&[I=(2oeDou$^6PI)<,eV#fA'`W<"h7Lof6!<`m5l)/K4)@-*%Y*tTus,W(f&5rQ#&0@=S`\hEsUQ352E?%p/df#8_UdC=kqf6g`M"6"mfkkp3C6jpLs6c.2Y4$[rbI`PAT&fF1*%9A1I3'(A;r25q%DOqe+c16>\#u?lINGIXJS5eD4Pb1o6mD#*\-ZlS7ZN73Mm[hR&D,`b"?1'Of?pf/:+XKI^T6h)mX_,+:meWH=HSB4q&1o`jE7I^Y%gM:sJs(Ym5g7@eGj.Xl3P/rWh)T1_?:Q=]+fE`N;h>>ip]2.g#XB+B?:(H)WSEKb5Y0'21/@fL[FSt6+h(GlppY+^2)X#q+'TILr%D-l*_5F-r22LH$49@AFCrAbNkoZD_^X[S%8&QJS?e\8U">aB:f\0.R3*K6`?CR-X$@nX("KF1@N-sPO$b.GpdXZmD<0SY>.&;CsO%fR*$L63#UlTcn^CVoBCoY^?->r6P_Lkl0Rgj^+k4l97(5[pK"B1V:8RgAbkV3=+2OFF';@7ct]RoV!iQ`6qB99s%@F@K(!X&$1*+%Be"ilY\ltAG\kPYXRqr*1k:-W6N\0-f,m8MdMn<KLWtUV7LocCVg[*?5Q^9"o-Cm/f7dP#SaH)hc1'a<[)B1Mok5dr_@RY_qu@qX%J\6$(*H7tJ?&L[=]1]Cgq)4LELAdLEOi%$VlIM'EeKgnO#W''+WdBnC*N!hd8?F,/[5l(?E>@=^9..s3f"rsiZ6?dPAuBWsLKbU*%R!=Bum7@N9_'*36)$5q:M$&UeT_;iX+V+\0fK[T<Cp'9=gK\qF\tdf=n]c2s,FkeFMfFIi$KZ<p0q8d,.KT70!f_<d=8T<""F:&e%c'oQ:N*#?%h`Y8^jR8kt7D)g%$01;/Z/\T&:#J2`<C4QaF;irJn(X0G"]l0N_gpECSl^&?L":3=:J[PH*PN>ig'K;\4##@IF[Jd6%Q;m#S.tt+4oNIrc*,"d9fKPJk^!m)Fm(<5fB=Bn*g24@RbRP]o_5](-\*gCa'htD>KPH3`MnZTqL.MkfYQ&aOH[!pGamo!l@0H8W%:\cJ(J;ouQ2f5'XBc7G^f`$0jO>11Y?DDjmf6_<rAQRtSS_3q5a[S>n%RBnYVtp\Gfeoqd/_H[Ye6XqCN\u5f$Ch#eDL1,1XPLFi%[QDS&)A0Y7Z/SR;ij\=#J#$tH;Mt[%\?,o1V-\)?R@@4-q(#u',hM=57ak=R%BT;*p)L\G:CgNVVmB=)F4KPf:asu[JMj@4mA)d=%2im]50Gm*0\fO\KX5YZ7;ArQuZ]Te)o=t?_p?m8+7]GZRi\&3Mf?Kp9GGDf/H/LBcJWm_2ZnqCq<C%dP#9m_E[8&,6@Siu$4C:!-%h$j,fAcR3:b*E63mY.MpW,?6u7#9D(b8ECLqI?:Ahi3XW7qI2"3U2@\n_i-[;((b1T<2GmqB;=/Eh0,RcZUgsqdHo#o;1037M5lH%!AAp[+4A132(n>o?-+4aDRJ$-Bjfk3AgK9E5[8E;BbK`_W+onQocUKHL72:$UP!mKgBK'FbmZ.3V.L6d/M.g/O,1a*U:$L:Y5dsg%C;`>HBM"a]X\N,AOqsWgo-Rd"V4Np.+b*C%4a'_7f*!7`fk('F.YAI5Kl4ms;MFH"9OfT*>m#>[0%%5tF9`0hWqGtoFd96,>Xt6.%M?!iO'7sr*>0=[ICq<FpQ;\,$Tg6DPk0`U1OtdQR2Z'B'm6.,8_A5]R;YJ=bd3G$[+!<QSbgSFiYD60H5s8N:DOg7X6R;)4:nPYh%9WKCb+/F%q:3gM8%G&g8]t`!nI.\?)CM/[.LXktYk%2*S#356br,(TcoA9JUg%&MHJ7X4`AI3)AH?*)sE-JE8`=1L0O8.8ch\k!a%W+*A_gC/FWI7&3Y<A-ji?ubcrL`VPq11Elrj+ol$orPNRjl$h/R9'o7gY8m=hF%KTX7IjmqRu]Jn&L</rUTFurESm$?Mk-O(i-;5%g0a3e0<Z1AeD&8]6b<hZD-\u6S^'j&[J=e4lZ2C5m\eUcKpMN5lE*$cf;GdD2bKA.g=Eb%@W'_1=VJ3r:M/4'nS/!ialS\o1r$)\%Y<OVR1>X)Ff%,=sS+g,c#B(OH5IIg4s/A3^k.n^%R!q*m4gAu'CMRDYW`kfm\@DN!Z(T\Z-YBfu0Gc9"Wu=(V`;IcIVi'j&[V)[(%c+\XY+hrMk6Z*mFa_sE#^SSJ?Qb(adpicG^<s@a<FmH.SIE"?q;5sVf"ANAZ(g6$+pVqoYh<4U!c&%d!=7>RWB&-2Ao;ej_n8n1%%@*dES`-8e`cE$B"cM(E;HeOX.3(%2P:8&KlG#NcE:N(Fm&j-&@ZaQ.QWNH2(RRlc:Z?*`:ru$->Ft5ZQ\2HEkr:I4We7j-lgg3Y>%FDL!%dlN>.MS2iqk3V@1X/iqiUeX"t5F,sE.^(4K,^$-;[C<><3jkkl\?C@-7*,aV2:'!NoqSojM)1^(5:ot1mWK*R45HEAn&.8P%qh;VPI_TC\VBP`EoBf/"O.FSiTm(SKZVduRdf=!gqpolb"g#H)G(4g![]8JPZhZkW_JZs?Lj&X.oDRb@+JmQK$g[TaAgurN<!d\o%^3K9)[8U`&kM^N'VlqI[45K#oDK;ZPc8kM@l*kT6h<C1\Oj^4O4$1.,ge@.cSGbYOqUK(hVU.t\<?'N=Du4f=WDfquiR:t&VtO*/%Eilf"SXs*e-.gmA7u;;XgjJYSj\GF@33grW:[UdmHFI35:/l/BduA;?FeGunJgY3Ce*e%X_/k$qDI#A.^ZV1FkgXm8GIk-Zn[n/[%CiLd[do+/iWmrag[un4M=jqO85<6iVDGNI.4(hW4@]+P`c)mX;=I3^1+0*)J(/d3l3j0Rlr-hE/oRh.t;m3s,8Epo?j_4O/4*@]]%]CsX5Zqf5\'CFRJmW<)]lKJ(RmM0kJWl4(HErMr*g?H^QoAV4$dp;A4inLl::.l>cG%:OC41A-]7.?OsU[uu1In_!OXJL%8c.9Tf%I`t`g87Sp8IQY?V?`nc]8F6!Hr:D2@drt?MbY;!5V$_CXX8U]'=\hM+rE)abp-*=@FkZ)->b$tJ?5g/T9f)7_D&Cc:W?N7E^!.s,%>4+Kl2%;WQkj*?Zc-5YJNRN*ul'kGLe+r,!fn/S_hO=m6"eL\/<doLgA5TM5SVc_^K/h495(;>+:)Ee=lGpj[/`YAFFB\"LdCZ[R%X%JrB]$+tA`)u!jot9?X`f&s4LF=ZhcG+?`I`5'KqE))8PAeaT[\2+D'1&PC$`R)$g>4F-p$M=JC(.qng2An;\^S%.4$-=3_SZ;`%D3IWs'l(K!I]E,`-hQNOV:7-oT0L)\0WlLiP+S2LY\@.>B%k]D&B!pAn2/9>c*Mh8j7V755O[&)^:_j:hAJ@;m:YoqhJ,+WDp>)U%7*/e:[@QUoFrGHsgR\-+VENb^p9(h7d[jcYLUI#N`*!'2Y7'(Caj``4e#IT`DKdGpWMLV2r2p6"A+F1tlT@s&np*Htg<r`V-f4@A%pbjqC^=Q+t(>gH%-&d9.d6>>7<n!^+C7jmQ>2%GRmE:ac4mhJemJH.73JF`PkMI9HqlcV"BhpnZr:lP>p@Oo!@:+8qdhn'MF@:9>%K9ZMoQkA0cI5g9PjcikoH!X:cf]Ah%n7hHA$M7>&I(\)";P%4@MR-Y3?7%nEc<EfB?MD10@8-.X:JB*Ks%#rYl'7[=kgS(=lINQ^%IN%BsHLG;%[JBf'n.[QW>F[b\>@98=8+UN`mRLl9CnI+'#KW1]JF8kA8Z&CB0&MQ/];=A+Xa]on3EuM]5<E'KZLPM0_G[LB>H;)\%C26Hak/6oIO3.Qba5Hq`4\lsEA-rs96TaIH_"j:>h:AsAo]Gc`GK*]lN^$kUX1pa(FSFp<(3\*d7b@UG]H:RlSOn8+c2JoF&[ZUG%>X$rBFc1E<44Yj`$[$6VSPlqRSPIb>QVomk4"$k':i4%oBnZ/an6F5E*uUVe/pa3dY@##6$9BL#hs]'f:<?+k#Y+4]Q0NJ_+bJXo%R;f(diJX@-YQmTS[8YNQ6i*/^Rk&7Rhi^&Ycb?9"$KuofA"Ao8@0D5VT@t`/s4:tU2Uaa15CPYQk[W#NP"q.fWOmjF`C3t.T42S>%W[ut#/MG0Gco4P\bC-F`>jk[QHE?f,jD*)4h<0+./bC&Fl4o1mh"ig/g='DE^5&M(YXUYn1Dbc"@)p"q$cc_ms7dKjecFN]e>MeR%qD$mE"qLPcHpUH^J(_j#eH5bQi$$P*>EoPDi.?Cf/&AND4b#<SB`$>Z9$I$/WiUH7a88^&Z6DLOV]h%&qTRI/L!!cS`Q%Z?An\dT%O?n6IW5t$Rh)=:_fj]gZ#;Z>uX@3[;`r+Q=D0*CB+$bp+[I*<(;&,BM.>(gV=Ps^H:Qa]Jr.HJJc:3)Y&n#%kOR28Nq<^rdSf`A#%`7?SNn^.\qT"LQ"K&QC7Gb.idB:C5^IVjRk%HW?_]RhU(HSqFJ5"cJuAMghL$F-YB0Y)+n4cP6&[%Cgu/AO@8rSj4=q\ub\8i`!0%NI\+.W9<G9[2ia@d.>+QU][7WL1EHGo><CC6VW6(r?9`Jqi^.u)0]^$^$O-;q*H/9GN:_X^tm#>PDM-)S\-K+YY!K4:b"ZqN&\5a%WS#_uFbubpC[P82nnCDlQ=7B%O+V*<P%PNR,tdUg)d9Rps*<,%H3to#mn+gmdPjD'N9TViAQiH`6%O\)gb7oJ\O`(8>-iFc,Upd3%A@>9s.=(Nj4$mFSOY<=&G29"oS*cQ)pK\f18DC*o8Z+\se"H$o0)/[c-A;gclMC8<[1E7Y;jJ(]jNuQhrQ1E'OVpX!@&1&][2D!#%n@7UZa//a9<PQ]JQi:^eI7hr)ZBiH,h7"[(DMMgmVf0\i2D=BI=e0`b`"HjEV+RW1(p*1<S?'ZK;V(,fD)%u<]dXjQVROR<4l(Gu%!VJoWGXKPuF#c%<jK:H7[4gD6j<=>o_2i!=U^q2i<E9;sQb@iGk6Ht&^W9A*VK/kIJjLh>Q=C).aO6N:MrVIg&3bG8DX:HrU`a6&%^"0KoW'Df_(cV,/qY07,0G`4)7`<s*jd@c3_\hsO_Mq.%QL_rc<dk:./!4eMU9C,ZVm<")[,[XX<)^##kqaWK"nWS%Y\`DXCuUn8%g6HHOpQK+?Q!8J;nfa4:q@)K=<9tGT?@CJJALIXuU`ZIP4Sd796p1lrF&<srP=%B"g0=h:KucNBm<osHI]Fc;+?gSIm$@c5dIRhn%ZnD;Eakl`2bAd9$Z@M5BFE(BZb.ApgS;nnj5t22jObOR[ZXG]*[XefC2DRE@Yms[%)Z'2GCOf?Y'Or5!)s#WE+LNG087="T#1]1]%$No%A0n;*-57[kk[@NWbPQlAqo^BKhl!ZPpifH^F!$r'#(#i1CFnn#I^7AEqM7L$$p"90jk%].8]$7o3jk^NLo(WQpCju7E19q0c%0UErlGQtHO2gBqUlpk)uMc]ebpu?_Tii,CNWP='"mum3MH#dpR?UB:T5ZU(_c`m"q0e2#eFqY;XO:6<S_UQMGhPm>lrl=cQgQSDg%62#8`Hc(*erRPG$AVPg^9m_0s]puHN9W1o^>-/A'`,t>(rB>/=qe(kC$$5`jLp70[qVj]#'T^N99RfbL.gUD=8sQnArH<J$(K72j%\&XaRcGXg)3nQ)]+/6o"&_t&_(6t]C5VL"^_@LW\311u-@PDr>4FN"m_I?Gj1J:[<cbtUs9#3dP_Cpno99foX?iDkoQ$gOt<&&Ii%qD&r(LH]G(O-WZr`5Dda,%@j"=XEeS4&JkAJt6/Xlnn>s2'![U1*tPFF=)dTHa!g'HC/e8O_!unqRec]+,?2+^'?iqZ"!^`Uo$bL%OZ+A")Nfq*B@894g?d$3'HaFUm+eO$LK^*AC.4]^&(/\>n=ti4,uHa^_tj:1j;p0Yc)"_,4/nU<mFO9mO+J#LV2rT`7W*\q1cAIk%P]GJ`33nK1TB%dlJ+ij,ErAn^FV5Ee5I3<f(bXAj;t@u%(FWS7Tuc?RBZC-D93[`F*:9PmQ_P#`^gglLE\u[VKZ;$IdCT(l)"p-7%`#%?"I5KLsrD80B@4NK2&igaI[[h0idA3DJ;EIONB)U.pHiB#!U1@OPm'XhZS'O,0$6:->-#+kacqA6k[!:a0I,e=tB-@I$^t.G[%Fs7S,C#ah'ZdY-)KA9EQRrl@TN=E#?ViM3q+&^Eko<OdjV]<-eC!_%C<=?[4$8MdqqBN'7ge+"i(\RJ1DPrjf*V#5!4*a2SZF:u9%j_r#+nRJ!8YVE[K+.%\@adnMf'Cf6:.h+`+NBYLjps@#!O#MtF)&aH\IfJeZOt9;r_.F@LQlP%*aX>%GPIk=d@aIaF`2[K4@u)8%%G-nNu9#U)p_U8u3CbaD24M3LUSlpk@6S(l3"2]&^3M[f,jD-DMkYr+J!OGQc8]6af)l+'F"rf>boF4ItN3j[bY8S?Qh:kfPT4`@T%FE2*,&UI$hQouMN&m"R6EJQ$N'ZPNhl+1Jan=r$c%4W_ooPH5F[u:V?II6ZC0d`:a+t&*V9<jkbe$CUAPUCKg0/B]bM0/3"qY!N.%Q!-&m2C]>VMiHg2/I?&Kd7e!%fXQ`^m;2?)*e/4ifg+Fe%Lg&\T8BI^p<.>Sn84O:;MPt]/SS&GNoAcuWe!:]QKf9-ad.Wc"+D-2%hX0IC8`PEZ^/F]3]K<;=XmBsOjj7ROd)EE,U,d>S4J;Z^]&;rbUZKj6B@,%?ob_`5Z8:]BZ3?$/TpsBPT_#Jn8'IZ"ku;9A"l+.*%*4kJF\fb3rZlH[L:,.AR2-Y%@*4kJF]'/Dqc_8P-T_%dM7a.RLcCeYXalka,fbnn*F6&a?L?-tZUgTN?Rn`#G-,dUf^\jWCm#l]d%^2kFA&dN8$=*e9(`KV-Y)Uahu4S`@9U\aFe4JdCNpSTCYK;YZ+.4J"@0:lX)^-Bmo@W8;*[j7m17Da1fdo0.C-ss9:1\^f&o&b<?%-8NKg5n2$e801ZYk%"<CB->W$LG[Y)Q%>h]YK<%bf,(?LO'p9mL'e)UafaIp[[1`J%i#GW5u-G[T&(H)j7A7HMmekj?NjC*2Ds+q%9D>Jc,U=_KjU281OR/:q0@'%N`FQI5#;._I;^h*W,=aH/^]Og,90t$t?s2PG7)FpPZPbN8)V4^/NQ(H+0(jB]M240MPNY+V:VP>N%Ze$=DMJ6Sk@^;48M3T=-1qNMJfa3U^/iJB"O'YA*GfNqi@o:8ilFI@#2p!BjAg<'lOlOCFH8@po7In4uAq@M+1$8"s5A*Wb@Ij0t%l!AF>Vc@7uOVmlX2pKhtQlN,J,W./(#(H"`+[n1M2el.tr%NDDl0e/UlPJXPSLffVR,:k#el77Vcehk$M0Z0O5AMC:YlXYY_dQ5t%%qG-Cs,f!IN/"U9j-O*b)$tGsfc$Ze8(:#\q^DmGf&3?0[FkdsbGAc7j_/*7_kFaqEb%AjClN8tq3k4MmD.P[FQ\l>WjaXf)^l/5%@\k$',03mN1lS(q*gAlNE.qaK,>%IF=)(W3g]hZJJ]NYfo+s[4i7-Di;P(r3S<,ai2^#7l7dS:,1[CU!*iXYXhXlOV1K,_?K]c0L%MZW-_iEVt9\XK*%Q-[.-6Qc354e<[T=F)u0+3TG;,kk&m85#4QGT+l@PNo\NbDf0h1h7#ocQa+/pi=h0%qulA9Ql0H:`c$`+Uu_D%c+m9-,P.cKpW-`7d\&#PHle]rpGk>kK;-kS(X"Tf7eXp-DuBRd!r3npO!0)\VIn*^ms'YZM*J]rh'7Pf*qRI+:.Bt16Q9tM*qRGu%k3p&,LIVQTo99g2N9D=QC6$rgOdqUYOe^(i;STO8oH?:,2;$=)UR7o0Ii/-t@;hJs<<bmlj>AcQ\&V6il=d.PN)Sn,_=r[Q-lF?j%4-&s<^<hSDI*%^V2sbn/qTm,/YAOb/OHiYX8^Zb<%lmQZVUGC.Z/iK<-g8A%lhfG4%i0HOFSmC!ap&DE5!aC=30s=3%EsSX%22ZA%3$0d3lkLEXG<T9j#h>X>iA)TVa-[ArH:DY@I(7tbJg9BpL%nau,Au<4E1rZ"UOoH`$/7/*%i;[;L/-:?SI\dob_V1\bGb5U4sg(d%!14?WF?\K1;r;Q.fZ6qo`EV>l_tdcP@j7VO!U6sG"OaoTPM^&)NMW92%$C(&R-V[?4'1Z+G9l8-G&k:I,5[%[g529E7;%me`"/3V%F^4EAUktC+/c-R(3RS4CRuk;6.s(5t\FH\eNPKqX(U+=T#t%R\"Z*1`UgckZJ$./Zl/0$p:>0Jpi]1&Wfo(]&RLn+*]Jbd!KB%1q%0XW^j2H6g"9fU;-4/e]T[WM5TDQ'-(WdUmVcQ))CmhIX2hDUW6h#R&)q64DD=C.1Pe"F]#Uk?VXL#MgZkAb+0INDiclK@\JUji2(%QAect\N#n6<+onQ)6)923&4C:ST/29@fBQFf0C]rY=06YYcj6c70c=6`OFepV_>OjbPY)%p/^d4gG!Oq>Z?TWB'YDC$5`Aq@fG)R%8;567&,b'XiGtJ7NgpFm[O_4W8]I#&([>S1f@1=t$<PCA`faf1E$<2^XOgG%n?SNlT+1<[Ga?E`nJ;OnQ</8PIhQ;Kl!)H3.W"Hq%p@1r"IB7hV.1Tm)XI$h0bGE+H`EtB*n8NqWf_Q+t'&KLNolaYPk"?R901@jr^.et>'mnR,E-ZS(3.uA0fBD$3$2oQr%%fP)iS]^S%LD-=6m7](BM\d%J+'se\L%U)E'+62NLNmP.dDXhfWf>p0Z!M9Vn\^'7<mp6G,K8'"p3h2,lDu;#lo(&im'a[)KlO3"cK&9$h<>aC%n-,c<A@IuM(C0[`H"XJ@ZEB*I?]</+=L-\M]pI0H4V^PHMC6$,B4fe5:0:)/Q$4BiG0^"\j1/802n-Jlp`@\bMPYiOH?Tqc1m[M%%lJ_MJ8uL8-gq1mR:MC\ik1Nm<ZJ1A)g8S-Q^6P9u=1M[!\P1>RCLhOuW@b#kg?IJ,T8Ib0cENf52J!u.+a>/GVV<b6CPpkhOh.H/%CA$DDce$i-A\GdVAtF=4HZ(7*OcV"L43n`;i@K#>F.XYV2D2ctbf%G6p:JfYLYTm+f_q.tnM'd;5F&pW"nQE!;Vb)&Y=Xb$XPRO'%W]ACepnk^LGZ)LYhie_l>`J%r\KpWAl:lO+DN`2RFOQGk`E[!0M`1(EO]YlGLmQ2:nJ#[eCffc/6n\63U+\o0GRo0Q0L'&rnaQ%t%+gH5JCJY+c.<>oS\E0C\j7;5Ea8D5[,l_JujD`]PflTe1$tZ5p.@Vpn@q3f]9@?;Yn)>me9p[]E^:.j9S5#?79:'s2=ZDmgW6E<!%flWp!o"E;CGcd19l&q!d&1*AdRr2UJoN8E`dNnC.Zg%%*X[g^79?O*+\VrD8/gIf;N7i=OjE&#&R3u;hRk@9]q!V3">;fb"CJ?o+%*@[I11*i8\(\3TH.@Vq=Q]AC4`gKPf[!kkJml7W;P&fg8DZ))W9iq+CGGo>h*;Pk0aJMVQV&LFb"7FGP%V*&Ul&mbZmVKJ1@he)'%j34AnC7nNDG;`aTh@@2nj3"5lb,*:+'1H(<"1%0S)MiF$EFdNEjjM-:HlP;=/h*,>ZM2D&9p_)nPO]KX<-/O]!63l7(nFLnCqA8\%PQ<aK7V^EQ>jh;3n'%j\WYj->]:=_"C"H=]jqoCZ(YaT1Wf3W9rO+M->@!tH1"(Jm8JdWQ]f0BhI<A[QCS>gSm6S3^k/Pke>^R',%UJC[8#2_ce)H'&;AWEhVnd^MO40gN5c&8Llc(+QpZOAr*]R;\X8GsM4#%\TYRF/L%(b`Q!V8+-M\Sj3\W'C80NuKYCR_,8fTaG.J%Q]V6qJ'm(KnVE=,a_U<6nQk4jk)QbP#$c7/Jhr.b\JmOm3S--4V-FmmUL&"s[k\E*kUu&ACt#SuMc4Z!.)_g_\JsPAE$,so$5,]s%^3gc%T#K06=CtE6Y%WiKp>o([aQ<5Z.i)Vkdc1Hn*A,h\f/uhsF(oS;h8gc7:ETFEAMM+3c:Z9(&I)^b.Ca`X#91i7RcubqnSYqt%JhEcH2&d?g=.KeifO`'N_hFkZ8EV'r1_aO$NuFpVR?&S24q,*M:1Et*nJpp)Ro>f@r<2MHI((W8d_Gg>glj_q7?\V`,`X7W<a$:&%CRF?ZXSpZhE0c_QmH[hPbElQr=Mr%rk#.UMl:hqkOaDkc>c8(#On6ut?K3ci-iHQH=>k7F6Yc>D]2@IdJ-fB=]><u]S2V9+(OSM6%D"""'8%tpjY$F[mA/P$#+`(fd7#(\&+K1iNjE&Vehk",\SW'VW,-e/E_:oMZ8;@(Ki.MngYPrAEAY\B$adZC2n$j;lYq&86&&jXk%h1c)N\4aNE>2F6XU?Ih#gl7p$R-049>W:c(S55quar>UFB&7Jcj@sn'Dn&HMAL;H<h,')b69tM9$+f)us1[*i"BnW`9!A`Cq%tN(%"&dPL2.t9_8$T=(\ZhK:Nq2d/A*1k0$XgT7R!UQ0k2W\&[D&gthTk>A[@^s+Fo"7XKA4NJP,`VAq)S&[E5NtViL;4T_)8"L[jQj[%e0sbE3*UppgkHW9bl#U,d[4Q7fW[q@KX'$cYfh._h,%]F@I,mB\6t>)/0*8iY$IIU'!B^BPF,88b)9#tpX!J!0eL^N8^=3TrS_d%%@7ZeX9VM3?kKIqZloT3`Z:r6APX!32mI^68NCjE18!eJhgLtSMd7K(%X[gWUKuPlT9bl&a#3E@$G)*j#0caamh37dfGu9Q4%2?m'%4j+ObZ)m+nK??atahg>hi.M!?@dUT:qibg"e*V8Lh@#aIpYJ!LgqG$2GW.@,<IKpBI5T17Wu=(VMi`qr1,_8j/WuRRl&&(\]K`1c%YYFE+?HP-LP:oRoe24h`o8i0GQo:\jgqD9WdVkY6h5pqJ'$1d`P*Pq=9;Ha2eUN$19^T2dGq%TW>c$Q]?"`!2[WWMQ1n'laS[rZm%o&4Oh7M*6'qo,<pf2t5lCjH^8T_D1WNH;?#F\bZRrNiD.*'ENLBh<R,Zh!(dAjfFTjo0*Lr&@:8FLjKmgnlCV<Dtt2<M8*;l.!7e%]#Q<7WLZesqn@:h=js7G\u0Ie)+p1Ig6_-G*&VBTT-%8>le,4OcSnVn@eJer6DUK$/*Tfd8^,rb[Mi(*Pt,HKYtoJmT0"cN'L%!Q%6sZgb33')-S-FCI:C<RBG)P&QF?RU^Pis9Y9@`jQXq)=PPs-HiGGFV(/=LEUc[Hg/rgR'AF+dSj\oV?shq.P[6E=#S'NK0Db"A-r%26M\Y8fMa,5sILY2+>5CCi"neXj$SehX?UK4d_Mo2H5nV$n4&lo@:WqoXmPk<POQ,^V!/LD"TUNqP.PqltWu$?(GmBj^V'#1M(&)%YG46bLu8/14<&"pgI\h*>q+kmJ2bJgb&b!n1o)I]m$@"i)Tk:!=b)3dXJ8WOQj#ILB,Pajj"KccM]L&tQm#hiR-oa_8<)*@koY80%BRO)L7/trcV>bh')`J:_C"119,@;@Qfg@7N54qC;@*t<H-+jU(OHo>kr#@?$Qqui#I6nDW]iHKJ?n<;_]c$$NM/PBnmTR&MH5k\]%Q7itl^j?QGb-AMtjuit62oSM2L,>\a*Z7l*h3jN6-m`n'.U\Lu(JEj8:$HtFi2nrK;`Qp2Bf[ul@Yi#.ATrit,)Mi;fYC^5EfCIY%"WJCSo6D^O,F9d-@tRN/LVh]ZqfIS/=@PV\?b13VG*nj'(ceiNA.dqF!VG8:;CDo,D[t\*D1"Sa@"=X2*5H"\ai/2Jo-q4H(1:Y]%)**6G\!X#NA<\&+r*7W9=b%Y]OI64'QXuA<N_s]D,L0XU$SZ!UM.o?A2KGB?^]_pC3,)ElO2V_BrkP@X_2W8\nl!1Q0AQ=Tj\,9`%NV-2`;Jr?d+I=c\4m>1&r"GFf7INnG;j[(:GaI,$0'+#`"$`YUq<7h#p"ft@njS>`9\d>*PMbnT#,MN:h!:;DjlUeH<3CTH#%qt9%j'Fsqj;QpfTp"m;)`$-Ui4XTm\,$hc2cRZ-Ib>B,p;%5gY@$9ENTJtmiHtO/_b:8(%d1LV00<2a`%=Kjf.U'2s"KK1`UI3K5sD-X%#(H9ZIbF6bO]^qWiqN:<V\[%gXao:anQrtHqFnJkTuaor8Qg7ILes)el^,;)ZgoWeEqtK_P;p#CUXWNH#2`dUmp<cq?'dc+D3X>e%@Wr7q^=P#P>_07$+e,6HOm?JZ*;B!bc3;M-eSe.UnI8%gb^CSjJ:%7#>ELoj,N%f'*E#!]0:?#SJ$5KZEtWEaMnanCke2Gukpbs@%)uX*XOR,S)V-93_n+Fl<ePB`bNI%d8O=HNk\eiF[)_gG#4X+%<*<'9Zls'G.YkRBg^HAFEUYkC(h+DW.hro=rl*pKuIii$[bIQZd%*<#X.(!h44hTVMfNpblt*jT_W9=J8_]@UunXL(+aqIQ`!I`B`jp\I>!'t4qdB]FsDq@0Wf(V/-NV3R8<aOY/%?GGi-Enn]:A/iNl%+W;<X!R$s+P('H=Tf;6^h!6nkH)k<Pa[g$L7I%R86YE6Tlh]VfXaXuPou#YPQ`W%QHtu[+Hi8!@a-S"]2pXX5C#5q"n)Gq\_<edp%Drc+G-/@d`7kMI7p\H2+.cko!qQT_jAc&m"#Cb0LrK;2m&u=09p\MiU))L"\hK)]\?GC<_]elU5rN]3T6Ppd,?GFQRp>,##AQP`_%Y/G\cMFJ*dGHYA^@`VTukkFpb.>F0pN9MA']m_K"\,)4u0nt&RZ;5:-)]uu2I[LFQQsDe>Hi6u#DtT$[,o+2H0?qt6p?%ZMp\L]s%$,c=4Du1RSdar*g3?sg.ifp0)B#uab-)TDBj5m,ICDY.QRlMC^8Bn"8hT+%[,P:UBo3oJpm+2;c0Y/l$k$)7>:mup,!nEZSeKd=Y%@hS.&=mL01%dr1*oj5C?(%16PI<oIFSZ6'U($>',m5I'>Q#H7I-dWSb0n$cY4&LFtCN]X,b&;4torE_Oq4kS![^NI2CJ!:U[CE<g%5C?YdlKu2(D=`t#W9nDN][1gCJ)4jc&'\>GE7aTdU[>Z,mC7N?;`iBQ\1:A#h`P\H(JeYM0+5h,g@re44mi1FoVZkP@.^fJ`p'l(%@s@'6Vpj=$l?'eK?Zhr/l_O-"iQcPCSX68d*:tqkF*dBEH>@HbU\FB9anIGI'6>fWVu&.&<tCts<V?q^hnQh;Y=q];9-7fD*j.!I%VY>-"o%3.&lT(4;3:XZNA:FGB9>YC]X7`6_MY<ci%;#G(6k1EmAI#^kN2#(GK[QEJ`O.KXF9SJQ7rW`*"^0"qT]>jWp>biACo?lE%EB\NBfS_b:3rdp$I](`J5-/JkT3(Khc+T1!h5PJm&p%,%A:H,E2s0#-+2;P`ons.#8c5B$S2_=,c(DGOf3F.!VI9;"][nj2brc40%f$MnJl/Q7T=6&D\m-B_p`8]5;$"htq:V9eRQR3J[hn?q5pCm.j-9meGR!AK?+2+4I>W&Z3(3WK_-K]bQ_-@qo>tNLmIAT2hI.N&Z%X,0oc]>g#L=^A[e[564(`Mme>].SImHkHfG2_4CbjL=dQCJ4Dc<J!,8G`P!^S#J$f:Lo>=o%UA1*5HC8Edp<OJ'[0$H22N,AeBMF%b+CbmC]Lt1Dr^-^[thY!gY1q&H`+LPiUc7$^]f%U*9`89)a"DP@-,X\kX"5tm>ZEg>7;S:CL<+ZdKAiIAU>kN"M340We/n;re#8o%Yf_U,[/";d-k#d^=^).p#kbj@>pWXa0F+?=gH;i!2625qrd';h#D.CCDiZ:(kPi)dm0cf(TrbtY<TZQeDQXR15t:&>0AUW!*UU\[%mdDa$B6f&=jmO!^E(nO%n_u+eIl3O8&+9sX4p(@P]q3*=o?]er;-Q*9#nZ\qp$r2#hYsgj^=7E+EquRiI9_98@K$UL8s6#gSph"c%Y0)&jdW``1/2O'?V"RFF/LnJ,/^D(S5C)[/rS;SeBRTb]?;:g53YdO$O7`8@L!"IbAnu`tT7+5:,4^=8%C9%(Vqq]CfB(j5U1aSS%lEoL4nIcEtHoolsjj*QNI/>Bqk?YY]f2oV%*S0M]@F2K^goEk"+Fo?dgYUhQ6YuYOq!C4n]]HiAnG?o1p3u#0O5HD<oFe&[,HV5Z%b]4VKbrOL/+CYlEB_Ih2qg`T:`u@/nN>a3FN45E<)YK$AY9._i=)eo"nF`6pmQCb4Dp?Be/LHhVou4-+Y`IZmW7A[(%nZnfeZ,R4%S?`;-+1"j([d$M"Ys#l5'T&Jq6b,-`Vj]E?\lZ<*R@.WoH^AFb1LfBlq6_]!8%T*#LkFTlpZp?@>PR'g]O-#QCt6MA;b^JGs15?*%Erdu)H0Kho#g`X71Objl<=<SSUm\GW0j*.p2bu`$-]t_MpWUU#K[MYIM3rd6\8eWV='Fp\cC:l$;2^K7OOkT,Cng3@mHDt,e1N5g%97;"a'0d\@%lWp)\c3U:T)6`52S]0a^Q4nC;<c#gZU^i=FH7ZM4[?#)ch>7N=RCE*]Mk6'rAA9HO;j92if8^2/.douI.`D3IJ.[*%5mj.pS*)^Kde'UlC]'cfAbVD[\:3$,`l[H\Y17Xtmn!=8kN<q[AR^ODWT%8Dg]4cA?fs@8T]DjQZSQO75(lm9\tYMJ&[C1UoO!<&%G;"<,_7diJbfSc`#pHLhN*7$El@j:5q_@Wh@X7Jg,)0GQ+a";lDI2deohrB"N[OJE#jrC]#ut;-["EAi9:l"#*P87r_'b]+\Z[%6%;JC*n,"c?m/I;lIRS^$3lW9,P8h6>n`<T<JG<P7/QIQGa*?$eXMTZ"rf^fVN9jJ%bm86XuIN`0uY`b16I33nOhnr/nmHpc05po3U%a&&e32hCG5)eBGo_STOb2F62[S>]s]3SjmG8($54pLq5X55H<kL,5(eS;>pEMo#>Uk&gV\+^\aPP"*N6q4<dZAce.E[aksBrN9>O%HF##'VWEo"eine*/cY7F\/Hj:92^AS3AX0+alV:>s0,+%W^s8VO/h9;ML+nB<H;=\:s/gB8ksR;>75p_,nJ+a5H'`8[IHJXP2j-(%;Z=^9nhib1N)S`L.[ArdNtN#r>2FgianN05k>`8$I=Y_)W2QF5s45/e9>7_%%=U@Bn<TH(ncf$*H%H*QZr#iXLSij&b;6o`DL/c_%D\U(Ep&u/jP7Gp=\aN(,!LrOn@d)^qo69(k'LD5>O2Sp-/VYd*Qjp8N(;(]+p(-cRZCQ9rnK3"rMhQ5MWHcYmBYZX]Wr9G7]r%9%%mN5Oc?@9#+X"&OfosNX6Z+2YnQ0SA2]6R?mG*OE0rBDeYa767:CO0lDl/;B2g"G]Hh;#E\$`-q$V:BE+Na(-&HDfFYCAtiShS+;b%CpnZOjmpjb@;UAG[FUgKmH\A0+`]ALaL`>[`YiQpiS%Z*a"OV4J(35uB1'<!pXM-)Rh$m]0%YR=ITg#_BSl2]hMMtjIHpZSUJtC"%D12:V[$KWe,u+=Q8qj\GTAJ`/f$qO*`qiKuCaGmtPFal7FS$ON='OmTWD"jJ>^r;Hd-HH#1L".P$Po8;(<)S*e>J.^5&c%l%fAkc%?a2,hkOgM$jsc;%p3lPjeG`R^Sg68U];=rgX&>e^:#58VI"#^u^\Y7b>(KhKITtX6-SC7W"1+6;YJpFQK<N$N4'/JqgBop5:[^N`%jEmgt1Qh,f>-Z?uoe,oL:k-+@a^&IXVq!^\6]/8+`M(P]rBt6Ar</_f[6k_(!imsdl_%RmZnMe^htlmu:@AYl6&b$2r!//=#E&GY%(YA_]7o-N3+%Co)Cp*_+M>D3E>]r5Nl0j^fn:M\Og4)r<?GO8Z$hBk.4D/H7NWS17i9e&Ip&KSk$FbG/1QRq%[(o\E?9$,+JH21.%pYjZ^)`2Lt/Wim?I-Bk_2Y,X!ZIu9Sa4.1&&j';6SI->9Z\p09KVQL?K7<^cPu$oTCCesb\^gYZT0)?\[O2Qmd/B/E,N5n%oSb.5%mBWV8DUi*,\!YZO.BCE`4)]^VC%_1,1cN1!EGnkgT3pAjI(A+cE)n0U?iBlnq)^$0cHZl+179h_@-[&r*M6Ft1RlnG5Lkk-IU81R%fD5nm?[g$\g!<!AMpLJ2C#_.)^I:<'I!u\JXh9U/H[f*,Z0dmmn$Qdd5-O@f?^lK-liR?o[n;pn%BXs+^[6H`,.INXe2pafC!qI[%2"o[E#G0eYC.a8TXD?Zem_:#i#3H!@Aljhr.bb\9=gH7S&r7ZWhr2oCH0$j8=pUoO5b-a>D,og?(itk?jPL!u^5D_O>>(r>RfblO%,k<])e,qdT#1JK[MZp6U_r&.K;V'AJr[.RdGLOF6W:JfKLA1\lRjI/&g<hbCo#'2b/mneOh<ZjH=?1.1B:S'Bk(OR7LI[HI\M)75%Db#0`$(2SKkEbR1q%VI,jJaFY@WsQnO1B9q`;MD(]pZ%\`.#HgB5Y%jDQQ)P[o%K)an)mL)tH,9G\9Lao41Wk<7YBW-TSA@")CQ'%#"8E3;ZnIdj?Z;lps%J#aeYcFQ/`=Jd&"@.jV=M(<Hdq;Q(<&`me0iU`f&HPIur")G^K#O6\P0N^'rmLOOK\M$p<:6OlX[k8!sO(%EMaI4S'Q:HY<V"QS^TYsIJ6G%[AN]d;rY;s^7uDB^pb/?m4O.+8'o28d&TFnd@YPCF8=hR)[Lb2PB#$;cmm'V*]8'Ib7OFidbIH:%6f5*U&^E9!hTmC*79kM`3=*HkT$&jC;C/(E0f_JP(m\eMVucI`'l0OE?-J4!ksOiRJkl%RRXd+TKkMQMZt,+aaUm?*=f]d0C@PEq%i*gP/0?klZ=;L3ce[/G*8cIWVMEsU#aK@G1eq1%9:VT9i5WHuf+oN%)Vq.H>Qljq0aE(feN:jS7Yt\"a<lod%n;jU1?s0EqSNj'9%QRX/JoT-!4Zn<H$Ion"p>EiJYraD'Sr!q4@Vio*.nNWe3e%-NeInh:[q-p<b)olteRX.5VT%^FiOes1]EaI.\N_!(Z8<G9\GXVCX%<_BPf(%hH0Cp^@_I\0N7![WWHhX_C]YV+Lq2g;Bp`o#$98X0$8%K=7@a"%PR/aJ]+5:eAA\Lc!%h6ND"n$G]PMl"s!DuK+(GLp^i%3e*K_Z06:RkBM?e]NjU1(Jsj+Gm6a5>sN7O1lKYV$Q.hk8Lq!]s/5lH4i<o*P#c^IcP1\.WsVW=Q:$:Us/NMA#QoNV?$J!WnnFl;%UP-5?e%ak^Hhd.>MZ-U6bIcl>hmN#49^22BA/\e)2.7i/E3$EU\E-4/F/tbmg/R3:2EWgtWb$M]Q0<tlW'iEM*D3uEBc:UZ$K0..%WHh=;_b_n_D&?:)&HW=3Wp+76PmGE^(3OktRngLpU,&3Q)-,"eWKQD2fT'+bFO-cr?.U)LYmgluBdOQ$Hpgf6OALNjj"Y!XbLHnm%Y<'+/;jf-mW"(,>m9i:^eSoO':gs]s90CsKBl4"!mm<e\;`+so*^Y_G#ahFuR'R?XL/p0Kc(cr=T0mQoVR\aQl)lDDQ;Fsmf/@H7%WrSA5_$iuGW!k.1(f2/Q[gh[?9*ctKip&G=l!Dn]E-aK))]O;?QWk(&LSKJ7gCbjX;[@&niIlqV!1X'!feb4sG&UE2-l6Lr1O"-*%G1Fst$_S0U9WS]ahuW@F,teN!8o2[Z0N]DD)8A6]dqk5iaMkR8mA_NB6/?gH-+Lm4/?T'X6?%+uE=EtR_bdf%3V;(5OER;8dTi,2%e/CT?i*&V#no1F5@9nL?_!$@O#mP260bf_%V:cJU[R6<*,$iH*ZLV8LPc-GW+b2-RpC8a3B6m7W\ga!!0J"Q!_BUZ9Jmi9r?jjFP%PSq=nWKr7M)Ag9>FcT-?=h6jG[O:#N\PT0XLj.KdT'I<->RhS&T#V3>A0P]OYR:RC%bAro>/2..9SmpeQH24%6UO+F%&_haQcX)t%[02iKRdEt/OC5j@G]l+Z,;(p>!KY&hJ3u\CGJ^2),nsDHWijJ*L,,>Te?W(+99oPaMD/;>=`rN$6m"[I]"r?sY468:So#(#il-N_%dhBCT^peQ5\7RdC1>B#Zit6l9/Dr=k*00%r'$_V!_jVIQpfLpM2O3LCn>J`r4D&Vk(L``p0bPK?OU01\Een3+)%mfQM64l;W)\@'%JbpJ2/>u%G1ur4-.1<&1SD08+)BM6HRkci]3"%_`PZZ-OJWi(7>G/pq)JY4-@Q9/Vkecq1?Qp190U0)U'HJOf>o]pr<,[NZataq;%M%5RML1Rq)VV2&k2@0_((8Mh5#n+:*PQ5RlN%Es&_Nn,qiHms@_@"FZLG3GbXc<LgOL#5qlVIU)P-tB,fb2IH/iOR8Qj#(?^hlZ\%n6kS"-=e7D'9%%Z7)gW_YoJDCjqtW$KYJs(J.Ma_7[A<8+VMM&[-)Rc5H+"\]_io=/I?&/EZ]pQYdg"$ZW-T#Xr!<^+A7O#1gp[s%B0)Jl#_oElBa-@+drDlDh=d3^.Fpaq(6bn2HE*9=nqP82<+6-RN(@q:"'KKFYbbcC3'*AGNi-lRAXUb5JaY<sTZiVDeImO_OGeiG%H*W3?!0l-)0"8/q)@Fd;$nh.-5QK)M,oEaH$<k:[:^7#85]OkaO^Z0,"s=?YJOLbWGE>1+C;inP3eL8'_>;f?37Cj7'EUtdN>D(>%9m(%L"4qW]$'`93\l8l5WL"(?PA>*Q*e_d*-+8Z"&P?G,,93#c6=VU_W<`<i8p"UQ:s/qNb]'#4-+:j58Er/s$^Ld-_mZ>b%qpOY%RTKP&bJ9E\TGY^:Ar1(O%bS.2Ak,t?;AMk5<u=oR]g7MBR^RmuM##[-mVn[(mL3?-gP#5WE88$VK,)uH*[P2-FZ:p.Fb3!NJ3jZ:%*![5tFuAJ'W'&_Jk%tM#*UmVh=`%,-W>6sK..hB3dMB_\-ISD6\YB'[$cR6b$RCsl/0%8ue3%H8-?;*tEG5M`RA9$%Q7W@MYQHbH%>I%KN("Mia!:]:e(n_$9'\7gE!Hhe=L>Ypl#f1)'?1,fI=3r@H"*p3MANFiFTJ9ZlE<DRoZj@'GO'?(IarEDg*ERk!(g/7eOsJ<5%6raqcB50P$@3Q%9+;n/YZ,G!d`'XheYn.bRX$@_b73pHgP%F,^=Gb!X[d5),NA`f`1<m29(?e.Em5r0I[7%]AG0h8G!F+/P?'%c@%\D=@h2NYk[TE62](8(\Z*0@N3@g&3iL,)3\<bu;?^]g)78Jl%J%aE%;,]AALhWdq3BtDFR\B&?6-@m/(Tn"2"8Ql=Yas.%`G,Rh#%*1iNeqE!sM\TbOl))db**]"uF^H`)Z&k8!g2H3LH+VAF`nm^WoiVHu6LGHeK$D_8_N.AM'\\)g1,o>qsf_1&.1/_6IYWUu`-;Bk_%BfW9c0Nr_WTF>WBO)*u^*D0GmL6ar'Q9]qsij65:E$2t7kD"nbf)g\@im,OVU([n>-cbIDD%t/EU(c/p-kIt,]liaMp4c%f@nS5r%dr]&G*iTtV,tsgUQB3k\,n?(seIeAe+c^*=;J6/I@)5MAkT+A&O?ErqQln(GSQ&#(.njK_VQ$=oDipmt$70_<N>6>-7P"od!o)E6%K>hq0>_-bZfn]o1@g"N!-o":j67[bC'4=dW3.\(gng0AnN^Y];<l-QD!jXsnRcM%:J<bP:8rr;Cm/d]][4ga09chY4b`I^<p'f,7%eE@<TDpu:mqC?NI^]r8)NO9Q_3@D&RTE1U"<$E!a*I%V3PsEo]YN$J0l(h1lUhb4f!2QQTrJr_]%N.BZ=WsTW#mrOQKJJYI3pSE*%APJ/L(b-\ea$_0)P[O"%O@9X06#=A&M=+!taX*`KM#\8WRWIg^J25a*=du[MV%Wl[@("X_+:A=n"DnPOZRm'rp?Suq6+G"H5_gK-%L!C165>6t_a4?b+,tloQkf^3?QL7<,L4Q?S(0IFh!aS]DU!.\A@A4osgVuW^A[1O?XpHM]J4E-a*]@,<SmZE\0TgslKTmUt[Y&)q%-'%"8@h)HLQhC_?C,TF49X*t++]k/F6^b!@)rulOaq4&f<uQroA[4!XMc=3+M<BKtWW0jo"XrV?nrTbO3c"tX9:3.=e3n-/2p$%%%=K'Z3SHml#kAZ8pCXVPmobZp2_N]"#[fh)rjZ9c\:oD`aBcPMaKbBW[$q)Wc95&7;AOlY+8jEbsX,!SW-#/CKh(24).G\Hs_Bdn<%HZO:C;T[eBl!ijsG<;s<e]9.jm1,#F+RMPL<gKen6aEMDS(TJAc!ZRL\i4;F5Ze5q/h,h2&ol\a@U3fcJ^DdaZ8P"DYtQU[821pH%'&Fu#=9PLCAQ&KJa?j*5MFOn]OlbS'[\YR::c`AH=JR/u('n-1Yh:G##RH'VOX+ME7;<O*56;FX'&D$LOHG4MK]ec/4,\1^..`*3%ULu!/c62Q#Jg7(W5T0/k/CPk6K[SCmiq%s`957S=7TZqsNbS!E4JHQO._u0Ze"s#heLAr9U`YJ;-'jZ--gqc\&oaYQ>K+&Ca<8kB%VobgW9P1brkK4s1M<@I6QRs<0a:lW=#>nm(ie)\L+_s@sm!3+P@\?"Q&ZP1T"@IJf@DDAT*?2bDTODIJY)2*kS<,/'Oh\3ZbU(;\%NW(0O%JOH`iZc\dnh(lP5"H_K3SmDB*E^7"&`(M`M;23_6DT\b)p:c,5mJ7l"%9#<*LOLuD.Km;CIWLo00!Vc[]H8:Fd^\=LD%k^%GY\;hc*27'bop]U0Q.D[4k`MOfV]&q:?o$o;Q+Ee0+L(2"mL1g)Z1ir>U]iL"E[r;%B70T)pPY@---R.)p(d[AI7c.ci_CfaJ^p9%,R.WaRd9HhZf;_,5+3.RbKL)@T:JdrmTp9D;O@%^S_4W106T[g!/D2F<rcO&2Y%>+E]&V&\\_sTcThjT<>;#FPW3pAE(,5&$0UeQ%2%6IeJHedH6I^fn<nj(HM5$Wp`a3W(%`3iFis<L/>#%K1b%5CaeC@*fKJM$,H,]ReP\<Hd818jZ@4QB,r$=irM:iWZ3E41d:,Xp@%8;/g`s#2WLZ&BYd=Jd#A45q:4A.ogP':uHSB\OnJ`.BVb^p[f6NQi6Z,.Fm%%5VHoEjL?#F<jL6Lu2+b\u\=udP.Ko4iA:I/qtlC%r.5C`FB]9B=Ai]9_k@@?D/'#qm*fU0NO:=,:Crmo!a?Qt%/eA9UEY+!IFr*$!uW4c#$k)$cVYHBQE^Z#bP2JJ-*>0pNkr<$U_SYD%&:g24"i\/KAV`EH*PPp"F=I><&h=I\+G<[b0.O;2aV:mlb5m]!+]*Tn,/ZeZ'.MP_3fQa&eI'QAE]^%]i@'VR`<[/\Y2oQlH)5VU%-]bMX/0o)Z3]0uBf?+:V;;X7,3DU=nROJ*[/HKGK<5OEATf%?Ud&!S"_]X(2p6;l4/_=O(f(Cj]ZK@g<9"INZMT3f;mRZ<Z??t$M%9fF8Yd@mF_N&k@WXKf?g^nA-_\\qqE$Tpgi,7l_<Z8cMR>-&fmE`Y>uLmY-C-kX;.eg.F_1OI"bqZ+>+VC=A?K8i)e@D6W3ME[Sh%')T/6l>P<kjKn:`9@u6>#Qth:2k0:&g+h!qj@KY$f:.h06:S_Hm$m*fCM7OVfH-<nas5c!]XTbg:C1f)?@k+s@$?q5f@HAg1[BZ+%a"t8Zi-63nN(FJ$5_i&cLI<?S#D:t\=_bc,2(9e&FE0u8c?2s4TTapB`D?mHPUQ,Db4o?Y]p'#3&<Q"./_pot6SXfR6h^UB_6<Wu%g3'r"=>lYENlB9F+t"r"V6e896H1L>Z(h\lF`cjmQXKq_V4YbcHq-!G0JLnRHpt\=ORe$9LP=P$A8SkfR_\o4ftsZAQ:CH5Wl4)]%1al)h7:_f3_+ZTj4DDrb\o79rVfaSc5#45?OS@1.d(rBc3\4_2fL%IHP"5"8LF,&6%9K.*U+L:-l]f%`g9_>O(8]flF`r4INi2ZW%FE(Nra_/#oGc'l?\?S`ZGq09W?oYIRY^f\n@eE:?\GnGC5^6NbfZn'k400e#&`$poZ_YLPLBfUm=uV@aROR;boH[PMoWuo$!=AqG%#ZZ%18X>gL=^8jFoq^b9*Z>\YE2VnPb<->oY1u0^VG:5O,n%1&3?c;;,6D.'2sLUUg>RXL&pr)AMntG7,AU7j,eoWMs#0VfE3+dl%/XPEA&L2Ra%BapXPUHbK$3RStYRJp?Pt[`G+AA9@R$b,]rBh"UGSEiEr4hITdL>ih#hri4_H[j8]4IF'LbK$U=bA",*ATCRA-%9.%EoCD'"c56)TZMF7Q+m=o+a&[dReR\"[eTdV7$`eC$-F^Oi`[[S!E%^8NIhWNg6AJRX"4DbR=Nqg-J2=-;lBsc1(>!/Eh!oW6Q"+6%6:oX"-@FcD08`KiN.b"'"FL55=I4W[E#d_AL9%s7A2'K`pi$P7)]^2=HFR?NI6bf`j2sh3=70_S,dUYGRE2L_Ab)51+K=L":]gW>%S1'3TZ4[RWCg5k$&T&6KPIu.UbW**7HXLt[n5#FC<50tF5XTMCj+97nk915=1l6_Ch,<ZK)%iHo?@0VhKoT1JF'(b]`Y,#J.%DO$%J4HIqYZ6<,":NPnFS5a'/AM=l"(`Id"(ddYqZKQJ@6oafrZ0Y&(0SkMn(Y:(1f@-eZK#.jg+DY7KA>(ilHes*rg']DFb<J<&VZZ"%:VDQo>)))c+X(_@Oq!Q"`9'[fih=ABU_niLH3Q:0CM^0=](C8f!!V(+3_<OtLWC\GjmP^`RF425)WTRQ"t[A4:`S`Jq;P0ZatUU>%bLfaJ,2JF9Y%@48V('qlV')M6o;%.p4Ia^0/e>p;o%;o?KN.lFie9fHiisYbkRNop1o7t(Utu9Tpea]$_P9G?]V^l>Th@7nFBt57%9hm:EG];1affDW8&H49GHm':-H3&k0KQM</`KFXI\M)("-S5lnafq!pV`G<5?dQBlPo]!"mFp!&"-nNgPoInHkCW'@ZLEfEC;du0%fRXj+:=LJP32S`0@jM57fHj-_5R03=)E60oFOmsTDtBZ15r_ZG8m=:ed0ZI<Cer-S-6#j[";Xik+7&-2mnphj3NgE&U<`b2&:NM$%(/f([FB/ejAM2H*V'XH7K(EHASAk=a)\!R090>Bd_Jh;j*L:*S=qZZCZ#)OMAtK)/1u]*+SNYFVPT`i@n,OQ8@<4[EQGIl<rr__4%9aWBM@*7'u9aYVE*@/GQJJ#0e_j8SL5T>&krUV^oY%OUC6,$89S0i%AhXoL%%u1diX]4p-P@N(9a=/;t<_(NY6330M6>Q`Q'>4Ll%J&%pmk2ap01jlPZ_)mIlUSZ-CLV+5tiJMPFhJ7Dd3Z9`aOSkO%1ch+G()[^]^Y`/ZFX>pS'c@kp)4ejjG`\ks3P5Ed4V=;UaWjJL%mV\$G*Ck>5fT[pe-[AhVao_q#QBC46%!ErMj(MS=ZO;<"=DpUXQujB#@9qEG15&7NQL:?>"I2#Qd7g%_,Wi_:;m@lSm4HRm]9$"`%)G*kf.75VX]QcD>>FobQ*0TPYeqJhkbAJ,WT04g#\,\''7VUd8JC65I[[U7;$5QdG,D3X:28M1],u%JM,m-9#5Rhks!=l-',WS]u%G?O_H]??L@]O3h@2Cq35hl`'d/im%Q>,9/I@&@SXUF90K9oa7*36a:Ui[nutj1p$spu%=J?G:/f!8:h,;PeIa$inEq_Nif6mUJn\%ZdDN:GG`C#U8BC$RI7>L+#R.1$`"%G[Q&MXkjoO:]Ru,5e;Q,BlKlh-0QcNsa4IUOr!;-GXC^uP+I-ZBeB8\63Wd^(E-*KPN<,&h%P56PB'jDOGG^p/=-Q'HD@k:?5hP&S&e@/ulPOsk3R_3#pU#SFCGmW.'L1_*/0UeGhcbl,Adq5Ko;_po.WO\]/^unW#iu>J4$l\k&%p<5rMbA3rHV;m_?Ss_1&IP+VQP%)bBZrlr\65GGC8&-;\kRqe.(j#m3(57d1`T#5VZ;;f-!u?_^#KVMEkR:T>*ZZC37AM_IOdL6D%//"5nE5T_m,@$APFG).YRuW$<U=1!c5^YTo(5l"%a9"*]$s4cI*?g?[WAA(I89KS:(9>`B"esNbYXlDf5Sf5Z8%9`tlO6i?C0a.9%*Oh&J`?NnGZ;BmK!Z$SuB<VI-lNgTDJt4'C`3;%.OXPC-//$"KO9Hi]&[5@g]7_.^RN92$`NpdsZ&!RV//H]@\L8BHNfZ]hg(CJi%A33-oM/>c(@aXQC=YRR\q^`B=cB&3=ga.Q,O)ek_-kb^'PZK-YS`'po\g(UfBQo+\(@R9F"X;e8D"sBAAfjI9hRUBFEUQ$+,*D>Q%e,loDgguW3G=GDkpijiJ$UhcdjR=nn$s+\]SqYM;EUX67-k]i94N#4V,@IciGcB4&*tQ\TCOq:dBbCgp'@0.hn58^lBGH>]B>>^R%nSCr9LlH&_!n$O#ecPC3Eg"=1a>74T(jTH.!`ALs=<LA1.BZ4;]J9bJO-OA!Tqg]eX?aG2gl;O^k*Z;[+#D5d?'2(2Aoe.8k*`Ia%+$#C$Kjs51GrC'B4Eif5r&dc[5Qj5'7tDM'kqa8BMOrXU7H3OaLKPa_SfOt&@d2Q-4FAtK&%+qj]gU39&bXT.3daVLaMBr;<'A,6%M5s.f6BUr"efqBl]T<;klPZotHp+)n'Ss!VA!\Aop'=eParV^a`S'jN9p%tnL)`D.T&GPpgG<H"`7m(sMF?7kRM:RgkL7'F;>1&m%0^]u*MacJYA:`B["=t78O+>4/mh)j-"?o-fMSVfu@Sun/3IDf1:U35253'%A/3Y`KnBq">=!/QVM69B;5&ZQ-1&25\,V#G\F-4!1%b!j.fHitu9S'P??5]f1Gao_,/baXMYkVHb3(k!k+$:O,7A:Z^g"roBrT@^>=X?Mh`JS9JRd"d\6Qb0dn`'-O(M:n4^AGE*O"tUCr%0?)8!Oo*@fMo>%ikU@.X083GXpjIlJ&Ac[ZX%3X`6PbO<8'%Cap_g#$,X4U2M<+uPK$jK)=Wj:X!K0D=1LuW8IY96deW54aiqg4#%,*Dgd`r`OE]H4s\pG:UOnbmKu"X<j^2aq3RjXM%%njgc1EW-5H.+01<$cVre@'OBpKIdi+%tFg.rjg52A,^b:6Ugr06Are\,@mLh%Ig.G8qp/5?,l4,^[6XXSF/gE%!/ef+SHGPYj02Yd$s+\b5Y?Rc1BA>s5V@RtO2GT4YXBNr*rt7,AH]7.:`q-9!=NEA87t2=]E![;%Or;%bCQ[BPWU(+e*Pf7/Oo,41kDNjV8E5?_b4=^$0N`lW!Of1hj9\BOhU%YlQ&A[7P\4$$m8hmt-t2&E,j5Y3L3[JkT_4Gi5U]if%4%#[eKq_M.\)MiLjPQjuD:&qu%D^=s<=T9>#Sp'LLZCRhB#5/d4AQM(T5R?QNFd^c:ulIGck)L6=,,!e'he=t#e:^,2(Wf*K=)iV%(0o%(Ub5<#(+S9OC5Sho3\td/B`V3"P_FT:B[Kt7TFtF:@\W4$&@RH%6;'egmSI,O[NG<fKd2ErnaE`8'?e0,2^RWPCcXm/'0$uj%,oiIiT7RL)^_DePNFucfTM[s+';Z:fa'd_s!8W;DHTBV)*>kWPcH^E@KnDQa9,^-I5Uc/i09EW@dqOMT@@2WMS;lA6i?DR.j'Bli%&?`jC$:G[Y:D"!M#W`%(3!NK#iSrOE$jZu\C^H5<Z1j?eDM5?lD2#L/6)jq\EZ@<9U4FA:-03&g#:U^%,+L6Q(TrJr_o!,\r7Mdp%Jh8u&)WMq#+WPN99<+4/%LSaQ3gUDq&>$o#%913l<<Aotfjj;T?mQ6(__?L;3S\'*_R&<["1?Cko^L3rP7Di```fh3?W_ooH/UdS%i$o/5RK5#KQ9#FFWede^'m*/_[3an?#>nk$*VO_]MZk.^+]5Sa6W.2Gjj>fKYalLYZSCCn$.lIBlQoM>Wj=c<@kU"!Cae/F6o/(k%kmE@d_@a;*XCEaI*/C]OCa7X^&p-j3*`(9FOn=1iEbm6dI9F\/1?K]e=eXKe!`/W7kZj%G(kRD9AUlVq;&[k"]Rk;:G/mGh'Y"3k%*7;s9_h]"=k?-lgG\0!<`F3fn#f]\Nr+`G?(jV)QcFaA*0e**X(;Z5A<fU%/!fQ_dipD!/NF3NWbYjffE]u#d[LD`"E+1A\UXWDY%e-JgR7+4-:LMCNYU`KXI\&8SA'Qm2Kd5WP732"'6)PerI%X4hH!%]96Sq94(<q><V6fTpeO@(E=<u9"$%+RhSq-[0RUeI[$Tj"tf%FAo$'TcSd?K9Rh"4'4N[KsPX=3#"&EJ:K>L6^KBm3gGd3O3kg<LLhAF6r6"6D/glFFCif/12LdJU0nu=69/pc`f;MWbkF5TC&tsn%1GDWh\@Q3u\ur=IYfq5p8I"Ah6,pqmdM/X5o$>;=4kC,En<rgOI](BYB4>or(lC]d[O*^_<g&CA/&3\=Kq[N=Rd3it*Y^'/R\`Ur%ep9@5.OZO&!c1+O+fU1HMhd84F]`sOrF9Wu+1bZ^%f$^d\1Nc;dG&6],1pr+cq8=)>=W>!-Gpu5.Hjg^pp@lgFd<5d+%#)cdX]Z8%d7gec`Z4kO:mXL$lf/U0-MH;)R8(9sj0R+8_\1GGR9s'^`iHsl*gf=%;Nr>U&bifIOV"@dk-??L9/sN#FP5n3Bn\^S(^,DgF"fT+%@SolT*Q#(H"b?+Q]EjNDh:e70B+l7?:P2#"L^TrekD0+smpieXAO>uJ+j%aZ4Y-V"^jHSk5h$e+c46!\Z-75G):sZ_/=,M2-4*e\%9[Z4/FeEh*O,&QR^gQi!dUoG2>a7@q>W5c/@1K99S1?.SMR!YD_%K$o(R/IkE!b8d5uJ;07NBm-O_G`ANXdq))%m63TNDr#j`-k%%.Uk#',:oV",ZN%`4;W8I\k]J_'f_/)_pEm6i,hc6iZW;7Q&`mVc3Aj6(QuYHn@'sK+67u</D.7o:%<iCH\0*QA29_e8)>(h5%)Y?%WM>Jm3@VonI+ii)63/d#O&&uH8jA"JOnt!-5FnPm0SV_egC6eFedD%;=U#h6\cFAhF;$__`rOjb7p*X%mihXo!jUj$4Y;8>JXNC2%E]hDV'H\Pq(GKY+U%%]tp>fYKmSY@KQ=`3>T`ho5Uf0PG4Nfrd`p(?D@#<C54n]3j4GEDaG+[5Y7lXeo23Sg[K`Z9*b$@95!EVcn%b3ZE))s56K)-6lN(7rEQ$#ERal&Z7+-$8!O=XponM`<6@ZC&[@M4h49N%%(j0@6F)njleb5ialTQm6neC5_;QYoM;Ubls-cG"DMB%+tsLM`$&hc^!ns./Ju9A7=$aLVMX7kCD13%/Qt20L3oTTD\=gfKFCVKiZr<0MX)/(Bde<90s9gt.bQ#SNTd+sdm2"eQ?!I3OKHVt%%]6i]UM"G1BLaC7$Kau=+u!<SRFRrPK.2f_@**8B"jE#0?%lH+AqZYDoPC<ro#fu>[k4IVk)VgR3f_=Y1_2,n9L5GLN'#I6/=0!p%NUVOI6`*NmYh1$i?_fCL;H#1'@bPgu:8RR_FCe=^#kk0IIO9$gOBmqD')J%#lo%W'+:ZI[+-7VcP/c17,S.-_(7j+lQlcgSYt,F"%%L@g$`02@g(g;J:2C4A+k<[]NQ>fMVej3W#_pkJie91I3$B"k'/L_?p?_COniCOk@mkV)c,@=)R6D-.h5tAYp59##QJc^069SjD2%#f%i'7@4dV/7[X9#o+dU.9[>2Kn27k)53!!+U#c\/#S;[ZC27X9eMPl&Lo"Q-"SJD\uN`;obNN"ULlV;R/)i5b/i7p-fKeGPpfc@%H"[?#@r:.]@FX8;iQ;0UDGfjh98H3]80L2NZT^FO[Fq0h@brDr:]qQ*>G-^F-'WCYCFX-GBH9n6aA0Sc>)a"+F=HSY3'U&kVF&<U%:hHF;CT=$IRnQqR93g`RVo@a4n.5+A`t>t)IWQ(q%k+a)OO;`tL>n*^>6W@\,Y%jRrbrR6JZQq:ap'"V7"gTF&[8(`@#8dl;$L]G%JuI@F1jS_J$"(=Q>k3k^<3D'M1jZqo%W=/M<2OhPrDd5FpVnplCqG&,#rouJAMkX`"I(u\OB%=45f;PJ,LTM)[N$gYZ<*<1BuiOq%R@>QtiaL7nG6m639O^MU*i$m[JIifPOX).X8DXI.4?uE&%.b]m/4^9'DD4<;@@Cs^D[#Yb;A5nY!>SkUEBn-Sb<ZAST(5THJM.F3%8a%<uMd@0cdQn&5B6da?HGL4u/rSu*XF`tsMpFU"bXK7geDo8]qi^52rW8W29DrbMpmY$A*1'o6^ibKa`LN8#=j2<9O@:.V#[,B*%M3*F]QiL78NJWaN*17(7b`rKr`LN>%=Nm=mOMr3.#[,BJM3*F]RK-I:Xbi.Y*1I3oZtm!g;:)k1JAp<5$sCNbM3*ErS;<V#:/8Z?%+ZCd/[?./I=/:AI'*4"O3uP>[]9CieG_[YBZ@L+3(SmGI'DHN%[jOKXEdTWM&_AB@[YXO=fjk-X-NY')J21XI(FX@e!_uPr/Dp_D%oFu7t,%*-,-pnbiL._:ki!r2t?HaS8b!Z8s-it0*MBZRc[jXTZEK%33<Q$bP$=5IM.'&(kgnP-XbX'C/C_7I465FR(!aJ#M.7+ei%PTj?U="+1dF-\"\0m>'5(35ct?icTC!Z#gF111^'.74kiSFRq`\5&FtME"D"m"T_V,$Zi-.Z^un$^E0LL_CLG$bB19ZBujO!K4Kd%ENmEPW<cYJSVhs:*3'9Ibb^2YKq,.UE(II<KIYn^A]Q'u<=)gD\]U!;goJ(/73&C&"2h`QR9U+Z=a>c:E3jSG73&E8=j5ERON!`l%bghW]>FF@`EO[c7!LG<pK*"eL">&\Y9ahsEiiCKXmI2,=R-aMP7A^dn\hjRBd/EcWQtYf"^qhT-_m+&7/E*gl'?STZ7C<e%>c"%'%kX`*$p"jF_Rl/V6@-^A+6hM6Db6"Gj'@hea8$_6T`$*WO=m(J6b$56(1U1dk1+VoU!$X"Bk9%HG89uEZN,gLdQ72l6XY'/M;Dq/J%VkFH.#-'f$;/1j)h$LI6/UI)BFCmKd&.9;/hPo_RVA5"?7iDm$nA#)`X:TC86Oc?G8f6OfKShR_f/%s=W*Z67Y\%e+lBMa.OJ"@$%o0<n=glb8l\X4`7%P7FjSA!1-mRiLNq#pF4mNd>N*$cdcR7S=SHA+c=/-Z@C=U]AuDr4`6dm!L>&QL4q&r8Zq.t3XTp-W_\S)G^S%Le&"3ZH)Nr)`RK%Wh1_oPr^=FPaH>E,MCnRX:iK^op>-I.IX0%]>!%9p9u]_IG7YkRBOd=BKc$Mch<c&&p=D$eEp4p1=.PmZJ8^o%M7hL]2o&FPg3lp\V$=jk8+JW?I3`oJIU$k4%i[uY/1q-a,hlRrql$$4BK5rpK%EA+p[WO:<<<bZh4*6^Dd0Km;l=YqC'?:k?f/t"%Keqgl)3W-T^RuCdBR:dsdW*f]$t]0QXl@R@l!\i;jUtZj85a_d>J\NRP50:Vq)DLY_f?0c\2f57V>O#e42iS2HE2V;GZ=WF%!=s*%#8cD<HM-5$]qkjc2)Sq73"m>niDMr.We0))$iiX=`]Nj*O1ERq\SId!P0`LqK>q1fMmMYS6'WK!M^9GPgsL2X^YBXBQ7sSnr=abC%8+Le.r`qsZ]sqM+"nsfa5HR/b1W1!1ghZ6%.k/k.*Gq)',O;[.lh@j><=/Ob2Fm_+?Mk0-6u1DE36EAhrN""-U/S8;b5%:%kI7Jt%rGckj.+Br:m^CnGB?t?!(ITj>Zdd5t+j+sHG/`L!&&Y"-k?`PE^H;^l#EMR&"%`oM@AgdfafJ`4e6d\nQ=uQH5(`*8'u'gbnrfat%D6)rg1FDRB\&k+\<ig>j*G9%j>?+6J_!H>=A6"b&I1V!OY*)E01m-i5i1kr?6.n,rbSHODM%G^oS6,_rD[d$bXXooG"^*%4n-jZo%'hLqi<kVT,&mH5B=T3-hAN_dQP6lEKR$5Ci@Ko;dq2GO\@2+kYJl8k,%tu9N/Sh6];X_N]pIrX*:.sF<rJZ8YCq4$fo-%lcd1P1<%7ui`kDm/DhLQ5R<CgL0DlF;,4,76!PeF@<O.gj2nfpE*,>nKL5Jts"r!C9VB+]V%&EQiVgHKs-'fu:8dGWmG,mXJ9,`>ii(H[bk!%Gg'(ag&K8BU-^Gr.[_TV!61D>>[LS&pIJr4;k@W)1uIr0B`-S>BAK]o<Rjl.S7"mnikA1-'7/:l#DXr;Qte/W:QK1_939OsD<I%0%TeBl.,:31;q($4s2"&N#<)b8d'\50A20(jE'\Q8O7f;ejRZbBk,_c3b66DKqOC!.7Ze-E0;gbZ=lEdY>h;S`<STUK)[Q*YJBdVR4%IFDuTaA?^a9hMJq,eZh$k*Y>(s'inFF,IfK0ldl?1NUrkBBZ)cb1&lMQ*L37^,1$UbuY*&HEU"K*qc)OMrm+-2jurhI-ZMO2gqIr%_Y?RiQ2-nHI:E7i!rU[RXrG)/JhoA>b[;.B)8]Mt02,dg?Q$a0^,(PlHtO"'p\:^Z>eB,+UH"],2iFI*`\<G8$e%(m09"p2+)fB`%BYH0^;1)q!5Dnogj=%_sPL4bj-qEl_WJogu@l]uB2OC34_I,k'Q,t#bT,Z#mdhcV;'OM^&R5o1ZkH^5!DEO]hc?r+QPl[H3j+ReF%qpj#Pkd;l>fSj-o5;o>;/SP&5SAdg")&iO"A/m1dKHYh:-S',M.L#()C>BX>>688FTcu#a[&'B_VtiiO'-Xou'!kJ";*X]uV!-37%i82!-b]p%jfCS[#m+]"fY.stoVp[:"IKdq>DjO3/FMX\3bI0sm^,ekL(4:.6Q17oB/kFi+U4YkG\"](_k>X#,a!c4^o[AT\H1tsh%W4`?tcIuo_<jrUoA"Ch8AB3\K2\-@S94.8aB,VrWbHa'/r$uMnZ:d37+H3+lZX>7*\_EAtFCgR(9Y7sbN+V[!f2o::=iHKpm7ulq%k%2pZ\$G?n]PbS7#b_,]P!N6JrhFYcd:pPsQh@B7"E(56eOCshh4Jk+Q0e8S$F4Hc5J%5K,O'1nLmVN#GJ0."kL*S?K7FSt_nJgQ%$bYrlV#f/&8HbHDDECXV984]S[W%QAs"5LZFed".^->Ip"eGs>2fEuUI<S?<OpE&8]shG`]R'3nGthDW)51B-/ALmNAUWXh0W_=H%]o?EGiD=Fa/@r9#ZC("&rE9fh,/aCir($(`b1;/lUXQL1#g='BCn$>!F$K8=gKA?ESq'LkZPV5#D6QbK42`*p*(NaNfq(nDYN_<A%!67dQ:%Z;8Ui"+qF/b+m)*0"(:J>-UghR?iEKBp=ek_'!%A.(1BtF3L?/Vg6a8(e`fjRfj;"e$uL!,+"X,lbT"HcEl<r<<RB^,P-%r,NZn8;]cL>J:@>a'8g&)c=4C3n4t[eEM^.`NuoK+Dq1b@U*^5nC6l1UIBZaQ>?gns)7Ii-P$#T.%INsk@C(<MXqT*"/!,f?TdVB%1<8&36ZZQI&j^74b\MUu]u3Ba=E0grMR!e5OZISR00K8*W3XK?=/+_6]j]n&UN57AIbhbBVgd+KQC[:s'f"f>Js."]&&L1t2`6'9%/KOE02U6FuRAC]CW=fYbkY<kRJ()S4R^8&"^K1Z-4ELu$;'TlC?dHcB7\p%>$&\B*)2dFc;\[JXk9u5V:/Wq+SY^i5qqKR6bua(B%.K9657If3%)U0(rlD+.F>Xe8?a]b,dcIQ\.k]Dg,Mt8f`Dbequ^,]]NI!<`q42*^fC[/PlBqtLqZSq.0`G(gLr8tZ:^qMgKd<p*!%UA4$'c!L/,gs$/qioD]1(M@YCIt%5`n)rkPh='MSn2`^^IKogVBD0+?plGISA,C?IF7]G2kPt9HLH!n.E!dB5QN*Z&qO!>FdtD+/%-et4u8AaGtY'D!Wg)7uib!,YAP'"Z7]C=dqM]`a2?^i8qF-fUl[qR;IFct?:""5V/o6:%;,J!D=1RYn(Y(BBZ"js7TaXpZ_C($'Y%;8&N(d<HlB4"kHCR-%#bk$p>F[qoV)MNF`]pSsHU&Q6gNNb%2h_#[GihS-1Zg*B(1RhP0(q4WN'\**\M?7SYb,leN(Fp\T-_73iE%l4`Mkce5@3)!<]%B#`G0Vbq]^7i9cPHpIqB'jeF#4I"'IYW]Eho8>i!9`H0qEu)9"@9Ls?Us"s+7;fPMkqWD9hhp2Mi>&u(O`EUW%Xgl94gK&'t#*k`:lPfB)T@Y<iga46/Z,7dmYqo6H@)!1EY1o%6&-R]oEe9fm!HkU2XdYhocQSK:,>_E12hBc54k,bQ9`D^.7"^R`%hu*6f9[o*F_t4o'4AmiXA%jW3&4k7BG-Q'C-l=X$L5Fm!0'2dA_tM(ekg(u&?=bec&YAk#b$2ZTJWu(m6Wo>DTHrVgT3Uq>bA<cu%Wi&V.7f-0C%0^H*p^)4hT]E01f19%/<e$*0\:6_D4ZK(0k4>i=r&G(T=k&Mt4K,)N5t2)#>^G]LJGa97]%i"h@3pop>ur3&X:k?3%="1nVMeJ$QfBoZ)lgua]cLti75AIQ(\F,X/:FBm*EU=pRM?nO3]&h7c7dmEQN-S!Z*(dcN2,h11UKQ[aQ3O$QEC3I!NAdEbIMY/J%o/ZH8a[>6N^/sPe;X:s^5"<8a?uLg=pF6j3g/oWb"Sut^TG<dF3)eqs0mfKN1TVjob/UiIdI]7!"ViRRiiZYm#p;EpC7j+mh_%mO%br-^i<uG$08D)8WH<!]^]lmC+^7?6kT-,0:-f*YRn'=#/lW&^=lE'G:e\%IJe<B8;W-j>C/`9^`/fX5L)LmN@p?0KmhYDa%kqm!R%4q"t"$oXI;><:dgnMp*H`pZ2KDeYXh]<cO2O1\OI\!em)g!-s9gJp>YZfpdLm7\MU(2X;gD3l,)AB7db1!_eLghnFtW5\6WbX7f;%7kC&f^<eMtbLa]LQ=RSe5QL;?M_>M"^AGEF[)4f6eVOAo35g5b=e"(VdKPjf0a,n9<7U]l3OPI2fMZJ<chJSuJ(s7KGU5k6%5IO#%?%Y4jq^>>H9\<_?R\uE?F=![\%7rZpf)4V^^";u0n'I:hmmoIh<__PLrZ7@'5f$X5p,65TooSR0Q.9hBDurV>+8D\=C#A1#p$m+7%<F7OZ\%[4C&4p^"EG0N'GUB5-Xu]t2.GgBPO>V&m'k@!r_nA4f-=s?big"@*V6:ZXFJFUS!Q2gOJ&o]<P.1tBS.9-WBWgic"E3]B%\faR/>2.CB1#V<A`Gg8IVancfp;M=)\e5Bs5<0$19q(GFj?0sNiFfS^&,r(TV_bF<]<;slmY7(Po:W[H_393B81ig\[nQ!B*3eu$%[]e.*Ib:&lPeQ-Jg@J;5Z8<hgpe!)7PVugK"/l*h4i!(8oPdiogE"h%=4&K,\i'e7?gWB2.XV,ULWPG$Q/6[cKPoSUaoJm_3Y3;X%gZm]q.tL-[<d25>"^R8u?r""p\lCV3ib)u'N$p8K\F8jEg8[.k^Y%5J.@<\.l2A5#HG>q#KQBZ>g$'@?PfYj1fa9nL7>TB&Q:JKu%jS?.X[ukKfl;e@pX889EY5/fK\nUMbE[]Smltf0egfYWm%`r'q[!1//TNl0`Brc%3SI0Nc[F=!C?1]1f3?,s`SNt<,__6'>cgt9E%$#ae$4JH,J&PJRih&[f92R&BbpY=Q1=]HCh&%chYY,q#sf-*0G7&D[^8PSgNB7+mcERp4f/Ot$[l75jfVe1XVfC8P"e8$_M4CWFC%K-u=48c@CD*M(d%[OKj0i6A>JCE!XbRESQfRB36+[5[TMK_PJif'S7)mm9mAbLT!\QNQiL1/%=dAnS>LQh)P>rjF@R'CW#uPdGEt%o_`7n(cr*chm^HuFSD0N!Ah.fd'sB-6_k8%\!'t.E@,P=OZY-JYfg5-4a@)q#i!Gg[BH/6N&Q@"g\u?),8Q4nfAs2_L?pd_m8S&n%^P*'0M?>lKE-)rlXaYYJTs;WZ>BSr)/1e6qC)+]lk.KEo&T#E5"umiI@]Z`@okY_Nl_;KYHsR/lrKNh0U&pPa>P68A/A4mqrt[?X%\LNh+$qa:=;'+[44d=fih1Y9CpoJ^Rc=Tg6?k``(MS>H#ip?'#";feu%cM$7-0>1RCq>F8c($8&8!Y2anjfp\O/qPBST.=W.ahN#%3ZmCkDIcLgbiE't<<PNQ4+ZJX[@iglHK'>**sgXXD&iuaN[.WGmJK9][N#9]8^6PZLIP:el7DobJ4'6Gs7:_b\n41FBEQjHbc-J:%\E>i=KaG&QJ7pa`EfTfnoE0uZ(:3T8Ut<JIBr4u-mr)sum(bCIkU8QgQe4g3>Z-!hfT2D%4fA0SV]Fp)L\.pS[)6S=Z1U);Bg>%\%lTJ@'%V>=][Oa84_]JF)8l53/1M-H09IsQLX0c-\E[Z`7a6iZoM*=,%e^9SB$MZuX8JeZ!0VC*DZ(t\jN`=P,C[fQ]gnoO2&R2q_%P&EFsfh(LI=i55GiDC6]3,IC"$BSa>B:ZY#iE9#:*cnJDNCHH[!Y'r6N8X<b&;BY"9U8qEZPDe\9s81NC)L\8O6Y;5dNXUEAWkMb%)i"hfog?:-;thU&Clge<mRP9-Eo@%'<$et"L(`I.mUfAb6FWQmD5YLL$D9+?LL;XbIp)k(N;r[VDm@FQ;9Jq6n)o2/BA*4Mn,Ek2%NV!Z0MWP:O'X]m@B_:.hUM.A/8#,ka+-#D%KG;[T(hkg6TVNIZ2`PO6^`0*Ad<pe9UA59N7IpspMV]l%'ZG9`.@T^%dms!MDMmE]%j:o"GfI<9Xcr2dYiMUA'6;ScCQP_3@mnct?hr1MI^-bfGI"eCdnI:p*br9l^1uBFUd<pSGUA5:!XcN#S=3X-XJZNJO]tmaU:u7kG%=e%/7<>8d`XDF3+0\5TrDc#"u^;*mHpiE5gn+[*&NTM1e2+Pb-]JZ-2&6BS'@BMVGhOq#b^;F7B*;V\dMW-/Q22Z>!f@#%t^IIeu%!h2@6%0g%Kcd,Hj2S:t.Cl\6+88P`s2cslQhk7578:HH:em\@UO[\jN-C[*25\9P=DfFALG]/\sbab;8Z^IgHd+N4V0C[Z]="b-=%(u-bug76B*:tdlD05t)iX`m<Q]X9\#D)>Um[;dbTi3dQ:?QcfITAO%b6%!"3[S_F)gQJlJ#k_EQhV\=H#F5-u3&dQJJ8V7K)b;oV%Da<-[W>DdV<q.,:\#bU^6G%BXT7aae=oB>sc/O3TnA]p)"7_\bqdY^(]iQn+'OLjRoqXg+HN+dsks,15J!h&K5Q3XFR4<HD*KZqD%.*DY=p9OU1O\m,'3l^`1RDSFMEIO%ofn1P5VoA']UUNo+WtURW7fDUad#ZV%/Fq!p:3GdIM`3b6%,US^r8MqTU-r/ORDO`KATq#&%Ick%jkcSdYCC_BWUNY@FTF*HA#]q@QW]l.B4@qOdIV]InK<jXY]t]aVNMN,!S"A2#S7e/K2nFKMIADlkl56OpPH^!ujU[n"_r,+i%bh>Gb*$']R(>V.KR7GF,S`p2UVjlF\5&7Q+Mh=.Y\U8()aVbn/&#pGV-l[K>a!k9[ZDe<H9l$G"-5WcN=9$-0;.Dj!MnPXVoUHdf%=<,3N$*!a5^Opj:J=^uX8.X+YN9=9%UcbPfmUeJ>"\#_.mR>-*<BZR*f>pInN[o4N[\ZN#<Q9N;3-Ha-k9cqu&P/4(2j'3>*:"_G%2Rh2A_uQE"3=QsEGPb,'>e:WSoV7QG]H4DV$$8Mgnbk32F[kkD.<`cZITK%,Sg,GD`\@EP]f>TV4eI*V2a"BMZkF@,].r4D:_ECY%<Vff]M%e%i!:Ie>Ab$n-P&L8Nq43r%[@M*hAF"_5O$@]q]$<BD7EV9r._)Wh-rnQAfZZk0k).',,YUC0.eY'3,Qc,\CU1P7euO$#%YhuMLr@1=*O)VK,b(:8YDs2c4/7=$X:5=fgAo+YIaF"R9gjt[\H:JiQGB6u=!GA3QjcE/m`^bI[%\MZ:aQ?VO/kpX)g*KiXa6dPd%nF[60-Xo^mbKqKO?q.HB0tiHm(UA[oIsE2?jWAB10J]/VaV`.YQ?(Kaq_AD=<Sbobo)H$LI)-jmVin;$p!4Q#F4FT:T$-59[`(Ba%Me_@TEZ"le80uVu&EX[n7OD*8aGN(u`%C%bfu'R.ha[6[1Bf-'<+ejdL_:U,.@J/<,_d&IFru8]RdC>&e+2jlFkQ5hYP[^M4(K"O%Am:,a'@-0'KHC=kc>A"%4WR4F\aXX<M'9)2Sm1EAP\a%fBCecSQnK-sMmsm^UG%pDCUplmQqJ,Erin/1?g\G*([?]9Lm+Ohb.eI^%1CeESW[,m7a!sPE!#nYc;((dZrV`*?j#_LY/37j]6e:e"FbNYG9pDe?#?LYb8iWQRE1T<u*5lPa,YA^9VN8FjVq"QmFoCgC$@Rks%Sf-dq6iL@(5*"Mg2r#7uBa<a1?YPW^(19p(\"qXd@7Q'*OZ3\Y:!]h*%:K))Mu(?J?t\V7n9fOZATH/C6iuf&N_nY%G4W00XgY2j%?V?d@:(t5KV.Q8"<r[U?Y0`KYl:;.uGP7#!b[^@o._W59fOSe/VOL.#"neHo]$F6$ha\h5i@'kpgE:3&s+Z`B(>gnuLQh9-Cd?Q6%1+7A"Uhi!0YF4TuE@IGe7ONFa>Au8&=4('<WI?TQc$D0)>^KG@X/XP"(A=a[P(%g`'n;duXZdM`1#25<H@1hg\XAHngu?])3!fSU%TfJS8]u/:h['K/?I[%eu1a1s^9X_!JiaAKjdsp^O!/hsI*%:2AdPS@Y+%t]T!gA;b+1<7eMM5O#E'0t2)f%@L2l,j2?#hQ6ihKT9%/]ootBZtS-X""06N3ONqTF"td_ssfa@P#MYC-1O_0grm05RFdgBmg3RpW1WA<J"9.g<?^MW+QlN8d:mD[gn/65*5cM))Ei<g0a=<%dNPkP<)e>2h-Xf`9^RV#Ubbq!(#8OaO82eUMQEA&m6)NBm8a+PFf9;[;fo1CZTu@*c$OSXdEB&/[-c!3A@`tqWm\B/TcQ.9=U66[%V382u3bmn'l,CJ<(!"C=XZJ"tDsp1tY_8nq?haCDQuVF'<0me?:qlC("CY>*>%IS+8`V76a_W+k9/Af_mQ3UI+!YML4Dsoa>1I]-%2Yd:)i?$+G=$1S[8a)Z#>fG^FdPl&ER"L"Sf\d2">e^tW]"Df3W[R7H@md8Jit)jJXb"+n8[Yh5*P&0j<JE\S3d7c*dP`Rc6XdQ*%;dY2JaMQ8YT((k_:-9TukQAZ3oggRPY:M=>hr4D.\sML?j4naPgbU3>,[*_*)haQS8A(!e"S`J0O*a_hSDf-WRT:.T[LBn,7hM:L%=pXVYHdph;dZ;VoZ+SgI(&-%,/]brG&1'nOe0gMQR7DGLI,2Ic>A1>FamT,5#*op/pWFD($iB6t!(d>-TV9Q#)hW&)I@!t_df>[B%(Z$B-T"b(6_,a:r`,>Qp8?u[5<dp3AP)Pa4nRORr=lgiT^@kuMPAD.X;K.b<73o!aa)gf%h;q2@H$mo?Qf>),j-W"8<G#ICT_Tj+%3P/L87g/=Se6gZ22d!-U\nWiNs#k_j=C1tRUj!RDT0RprkLtUj!_1AY9^ne+%^X"pYOK1ii[0C*F*UtaHu_8I;GIY4MdC:*3T@WY%=7q9r'/0A+"q;MM[+,LXP)V&G\"2m>F@=A'p`M!Wip2#LNhAt3T5nT6T)XC/Xc2,s=rWs4'US;'5eXG&FVO-'D7Rge'sDU=mpkH2%M#P>*VM?1uiEToa]iWh2o;n.eT];\#!LL\unX(-W8VMY3)B&NZm.NSX0g8o,j7?s(6?(3AB)5QPP424-V=-aM0lZ,e2*TcdCO0%\%W%WIG<^L/In!Z@_-/IY/r+b"WR-i+=LTfc+%&.%':XE/+>K?KZK$=N\c`c*RQOsle\D#pb#dp3,R^ab1_p>2@1WfAZK+XMgU'mU%%7<EeGn%.'F=nabW/.Ob@/JY?c/ZfL;Un$F0)V\L&6I6h"_lY8=1nJ<EaJ/7O1[G&t=8(N;VNLip1e$dPC`:P?"/i*2JkdE,T7a$i%]n9,.r&K:beiO-Pc$(9[R]g*u']/qjO6.r@'tm[V.Z1Ff<#"3jWmQ1rWTGeiJ?"!ZGHbg/hTpc'XK!)`C=_noE&F)&i)MVk!N^Rk%(D&*Smm,H;^49@m'>+?LU\Ot+bnfjSCdmq9g`"ErJ86uK5d&f0hLMb3Qu?BaCm?Z(fBa\7T\&Oq56kQ%iVa=:/Z#'@Ybh&7#W@Pn%5hILa'Sak7^&VX6p"hs=d<l&9UA5.VboD-4aJ/G:P-'B)"XmU+c3m`4)tFqU2R_NOBU/bd*B9NUndR]#]DN+'Mrm*W(<oo'D%tmC%ZtR/UC*1]E:i-p(J@0()K577X;nt:p0-K!t^&`(Do*&r7&,UG+2Ms/\>85tG[qNL-Dkm)K!#N=M&8i1hJ@I#AK5o:d#NXH!IgkF.%n)n(r#3Q/[)o\EO](HqJ5e<BEDa<.FXY4)<S-*\[h)[i.5eGEk!U^0dH3<X8D\IX#%I.07(V"BL=$K3(j44/Hqi.HDF7_E"eJnFq%Coa0Q^j3gV(iVcf5=L,26hiAG*/!S]&mR]Dc`uCeagB=8XX!:HU@:Ag=Y#_g*+R'_O\#2KA3P>iP&Ub;c1Of#m;Za`-cgHC<!0oJ%q\)P]/kN]mF+?gNQgL=g!(iitFp&QOQhP6m<sTmDE2@4g`5:9:[<kca""1C.eb`3?of[]F<k7a:n(TYAnoe(7m:Y8r8clqY+c;6.%AIC6XcDeTJ'"21@b`>\Zj_n&%cSKmn/p:KRk0D7PPeOVCWquD5C+r6>5P<IGg,u]/+-_YjDXYWX.-#SJ.^XQQCp3R8Q(&UrX$5:=%4E/%#4hb;SM83F2oF$W$;:",#;NP_@5W?iQZmQZ>!Et8sb\>l=F$;HYXiLm#G8n&f7QC\SKugnGla4+^D*j^fM:^jVd.m"jD4aUI%Bu%-qd"(I"=2(nUOd[T7]j_722E#39%sr#-leje/]0D'\6-hdugoQWc^\@1Y9bX259?&MLZ<*5\&'sqdY!Kl]$EOn.Q?!KccC)uG%$"q++>3SSL+j/!2+_eIJJ[o4OnF%n9[Np[i1%L@^i,M.oPYAR0-Nl0Vo0#hUba\=q5HBd\CG7"DTCL!MorHKjYmH7gf7Gk+ff#hN%aOGf,T!`cBPi+Zlb3\7414U).,9(i(&BNYqcFodf28B]3SES0-I>2:;e'gniUS@-W<A`*@@6EGJm5%5!$k%)F+L97D1+11=1Q"9;%AC/a38R(/6Z7+FUPXT<Le&NLso%^k$+ikpj4H@beh>2DeL?G81'<3rAP#%k$CO85qP%/pbC6I!<U&fIEn9@L$^+`d8c%`O5FhdpP%pT4\bFg<]FONT3kZ5="5frb8k/$bjbN4:pq(T>o#1Hp0acL7P3MJN?kCZ8`"MggUG*O`*rI4"X@Ck:k=B'V\ATm9WW]rnrmP-h_8%AM<Yl11_:h_+n(['1!MERUDBNDKhCk`j09-M"%[hG0(^<guFF1a46ba6UI`LCa%Olm._,l'X^ePhtH5IXXa/a=bqaT,oD1"J%l%q%;V(F:`$:qDm7O(q;?G=Q!:-TO!_i(B+1NcoDu(F>gmmWF=BT\!lMd6T+J,Dm?FX9%fhU<>qRK5(fn>s5]+UlIX%&6mY%nq]mUi4B%"Nm3(1j_Z)g0S"?F'e#Z+>u.,q!+(\;fA!3G*hBFl=[j(,M3ua%SaS9-2X7efg8f+"X#q5+*k>=#5";/eeLb[]["IsT^8]8',HSj%TrqWh<%'sVVKf8T:Lqec49O7rQ.biVW]A":aSQ@sS-A++'#m@N]8]=$>Qop%^JJD'NLlg+;/2D>K-M79jXUK?1^GoQPZCYhj:nO:%n2ia*I-ta6GT$EK:hj'89kIlFg:/8)kKU`Eps70MH^r]31`"d$jEP&6Z]ecE*JJqS-uZ]&eZeUc[sd5n%-3\QS>-_dlZPMM<j.PZ%2(?#bfbE/,_i'-$NHcWSp?HD'Ar0JVC5kXER_,g.cQi=g'"_Tpj7D*8ZK+lX_V-(mYJSoc>,E>^KUk"?K>hLAM*!_;\`O`c-e/EG%0=:\1\gcBHi_)0Knc!l.Cd92"YIh3md^XR;D@&]>Ye;B#:XO((COY#1&6/N^N^3c/aG=)IePR(J,%rtd$O'e)$2]tB2[$.bs4GJ)%_)agq`_b"q`7r"DB+b!Ri_d69nC^\,5)4%3DYoA=/l\,9M`%iQN\)t39hQ#L<2JHDc")U>7L"IjW=QD[*f9mJf?"&fg$1#YX[XCd%b4g8F>ghCb*X.l,3T.X2;5tWg%mDUAN]m#/#+Kt13;!`pI6)a4+lW-;:fRfXc`<<3Yi#%F7IPi0T]DCjb*TZ5-8SBpF='q?:&QNG%U8*U%4VndM6?;.1)9nq+NFl0-98Wc'Rc@VW-i<6!&aGR@'l-f-$[ob0Z@uh56ZRIFYE&pO4moZK51-,d)iojf8G(p:*oE\ll'KW<%kd0B[FHNua[Ok^@=U**JBD4rI^CYR!Ks*_qm-U%3P!<1)(/qE\'M23f-t*&"C'eE8<[;0HClPfoCI53A'[%joW""@P/C&oA.Gi%_%C=:3E^VqbZ*Q=&8Y*ipGeatEL_HQT>4b)#]Z\R;t?Li\aQtoN/k:*#gXR*""EmBaR>0Z)`]:grEKPFh58WLE/Kbq:NIZ'.17'&Yj%4o4T7*uaS4oOY_1<m>e!`H)kr+5ZjO,S3SSRp+^aT!J2!iQ?"=7A=sdqJJnq0<U$m/mqHEU5Qh:J3iKn_!-O=UODo/<mh,"ni"f6%a/d*'ZD6EEH=[B1als59=4?<2;gci&XIc5KN&4+@RQZpg+RC%=n];K3cL3ON6X(=kbI*>u\,3Pk<RrGsToH7iqoZ]oX4NNGMDG^5%R'];BCeI=thR6\>``9PR<8g>fQ=O=R\t>UPh4@A\rmG(o1,dnap*tgcNci)pZN"]!pd88/d@;cFDo[E*>"N,MPfbd&YqD)*E0Z56%?uC%DI"Yo0(FA=t\k3W0IY0eUjk."4.W5T\?,$0$0Y5REJH"5#JlZ+aAGBob$LhM.j)U%3-_3S\:t&I]M6B=d-Bh49oUljM*$j$K%n-Wt!?f8AX2&ru3e^SYHs!(07p,>V/B8\]u)4Ud3DF_peEZ/-&EIR00DqE3@`$)rO9HFJlh@[fa0F.[$1'W``)R\=Q%\PDms+\;i%iXI.nLdggnT^9XZ_'hZk(\;V0H"eTLkTPeq5D's"IfD37FEQ+glf0f7%[t-&&`;%_]BJp2SE6M$LU93Kn7HrFr2!mX^(q'RZSh:[%cc5+!fBjPiCih4ZSm&tJ'o'mNmm/#hA*!=N?r3"T*0Ha[-rD65mdR>$Bi%/"EF]WbX+*DVJ6<38puQ>[-`\`ahf./U&Q&Ca--nS2%p-6<S;n0f=q^>]l&&r_a/^D&G,!E`WWoLFmg/Z7K#"5XS>gIiE6?2JcRo?\gN9)GlQZsi&"DbSV7o'OilNKlM-(^b'F"(G/emu=K%D3:>Np07LDCiO`eQ%l3f7fk.&]uO+\&2#HCa"R=<"oY'j8,kX^*9fO%*6gE-GkBiXiHa!5@!FNc^u60=2h3lVmi_-jo-GfFjuZZb%br<EtH>fHro\P/ZBYK&<d<c%Y5DnnPEYMl3j=%`maeSP2-qEeJ<0$*&YT1nhE&ifZ!:r_N-"N%u44"tlGHa)rmsoI9ha-GQr%WF;%[5[T#4mECT4i?jm6BC+6&3Z68k:erC07\/o?:!gYOtXWCCf`:JoPBUB!;10M0-Kp9^&cdUX=muS./k2gYJL#pZl[1&i-LE7([u`_%c3o.cHhe&*4aZuDO<)S)0RNFu!:<Y]3RhC$p]]:kbnk>G'OLk..)(>hU\Ot5cgLQ0G0an%!dN%Rr!%JNe*?,SHRZ[ZhfDu7!T9aK%!eQKm)\>3%04=PpX`&abBYK&Wd<l2=BBHmXj"o;:%`i:&]n,7N^V0a1Eu)E=jk&bg@pm$`V4U-H0a?Kbo5Q'`_"/tg"6e-["joj1%%7hSc(GL7OhZ3=lb84!'h=CeP?haIQ>[Me1!;gHDJaB0-!jjUokQPcE+R9JUs1ce`s*&^:XlL:SIXm4rA,<Gp?_I7,J,UG>O5_*h%5FQMpr;o/hT_iE:_tTr%!o^=9q#]SHo,YuGH1qO+0.6,jd\"G?%G%.u^-VYR,f%n"c)uNb=)2^R6^`'V&7#h$F\mI5cmj^'B2mN,%lDTV,+,?'RTejT;81J^,"/dD-hO_L.HuT)!Yf#]Hb,KT<h1"*p:C-JRbp;G;*WtS+/TR^9YK\DnL2ANe$m."pq8^%dn4EL=*pnXR%j@]<]Om^\rI.2=7P68Ks$&]hH)]moSc]4)B;Vk7H$e/RYVgHddEt^\BcKA$]Bt)#B*PBim.B%I&ZD='8YmT&t6?<Z)b(NcDH=UAT%md;`,24XZiaI7EV.dQq&,:#>k?I_=,U^Usu6u!J/DAOK!BUGZ(Rj^1I2#ok5fhE]Ol-T(?`R-@(^gN'bl_s)M&NDI("'hg4oLbf'%)RKjLSY7+:/N"MRNWtqC>h&Ang>T.$*rXs$Y`W%KoB>#2"cS/Q2"8#I%n8JqkVo.<5QL$9C[\hGcURcD'>4g%EW.1OIFQRc+VrV1%:b0@FXj-2+84a_0UWNQ&n#?)*ZtQPmDu)'5A`KSFg3:/;/"pS]e/05KgD9[Z;iPV(h6s5G%#N9hY<SVR%8VY.mM/aUjLO.geAh$%%J3?e<e?9_mp!FHKK`n"T0&m0unVK%h^O$ILEStFR3A+$9j%S+.I#QSSbrF't$P=f0SheBq-'1jFP8="Db"-Yd7nT<`Uba2(ll6#*%5u/Fj8\T^8lM$`k9Yt6(9<(@_):.TF=prG^pIT[c9*7IEZ5hLV,5/"1Ia;J$X_`;gE(pj-j=n$0T<_/'#8Ka*Q-pnQ%,RVr'kgkR%$]q1nPT:6hO`q[q_.B`E5<Ztl<u>gfLf,(g;t$+EI3&P`qQ-4!"^hc,F..bsXJN5L!=q+e&*\km@F_%8a<Ois4(i\>\cgO"2.M^[%8\Am%,;nS1nVc,K^Z7$7Xd3M=O-l[0=3QR:)XaSc<cSn@kT6T=A0-dJKCKPDOYG'5p8s)UY#QRU.kV-[A,=iab2'3E=AmSa<m-dq%QiU?./;*8E^SYNAp;)j@IGL;>?Q'=5$R7HDE/jKhAbeHCc'c`Pq2s2*Aq2.N0)6$&?:GZdo?\CJHWs>5IgDbgDHL_hcf:SP&lW`h%(Xs$HP>i^oY3<n7&,Tf@Zah:/BqSKADc+V_Iin[S?MBd3MWsIt&_q(tpe6[H]CH.kI93gg[fA%=ofcm$]$24\:D:kCWE4o:5&6L[%9WhS.2`@1ST4(OVl^8Z=_sDG6h4CC\.VJrSqG@?KnV!iI;b/7DWfh/k8F1sp4lQ%WH?T,IPHtss9OaV3>;9l;S,jWo-UK@u,gU/q%HB47(pnob`M._TgrZ`NVOV"o<qd+?h@jSSd:NE7+MjI;Y+ku==H=#MIQrM"FMOi"?G3i:f4#uVCKf<i8agXC;)P2EeC!ZLCO]"5&%\'rc<0JP=b)b>pS+F/>coRQ6iU%ZfB@O(>g9Gi2;@2,+-_D?K.9*Nrl3A.;cO:BP5'8uDVO(6.(3Sa(9IsNA1a?5^R#/?7jG5&\f%K8*dfQtmIFK&jd:<H9!p)qa%rbE!`o@Y2F>:Lt1b68C*&=76L!nI-dr3/G)+\aGQT.@4j!c[$V_`K'o?:l4$8)j)lmj,dO(D]1Tg%ift'_M\5#a52]$%<5Mbk*;$;#P@A!@js-"^!f:"kH?XU!ODtmB%;^AL]<=@.TU3]#QntN5W'.HO?VL_-;\>+*?^C(8FpPB\5YQ7`%NX\*F==,j?D^Ln'j9upWT\U1,>O9Prn8j';e&M)%qO"%ECP:V#EA&X2J0U]iC1J?l\r'MR<G1P&C`qtb[sc`))2&H)pTV/9(_8^T%mBM8&LCQ<tApSD\VL!,=AJ'mkr!_bmCF<n8[P09A)fO"=iU&N<@"A,mG+md1C,DRkEd&QEU^TK/X`b)mG64<[%?/aH3aZ)HQB?W'%#$T%1FW?G%U\F\-^Uso>7HX"t%,^$VE'QVM?Hoq+"6D[!2o;o!b6..ITNcQFa"n]>8oReY6M/4_5\o'5+Hucn)UTHbPS.FpOu\/J%Q;UR9JtK)UY51]%/X#G6depI"j((:4-$#'J!KSGpEG[LhgQ"Zs(F23,1F+gN!d%2hl"?NKSB"KTW!Q6BdD+3DX?kgW?Ia//'0d=-%)6bSPH\+,8=ai)gNP<Nu9aU@RGB?(,er+F=&ganb*VrK)JM%O1a^VVmh99;g,U_sdn-sPnbDp#*qPSXiIPW`r$7-6&fP(a,1*gnG%F^#EcU\*U\ZAD]T?1(mO7e.Bja;i5kUTm;6f(4'&eFqLI@.:F2#FoIE94r'&boq?:r)Btn'?[h+VDFV%nplYV)X0'3L]@t`b-[&[%_g?pj)/I;WSTq8(U;A`3'pD'/8n!e+R7RTk6FWfT(,DY9';V1[.K?L+5KC/YL6Q8]]D>O`X_=g"O$6c9edp/XiaY=_<8.qIp8?k4%Y%$cdp5Bi'ZOCb$Fe5Rk`#cCr`nZMF%nsBCJ*F7oOJIBgLe3W"eF6-ZL@D_@=rt+*I^[XTT>5'%DO/W*1[\a9->ZHr_U%RE#$p[d%BK'I"fcte92C,>30qH-M9F(L8h3QPpge8tK"Y-3#Tb:ht8=WN3mk!M6DeTrijL-H#Q?526deP<MJ;^!uJ6c.FRU0Q(2C3T+8CFoT%LN"!91`,LF9haf`GXjhu$8=A$ep"fuf`hXC*a>s%!'j2G%F0sTb*`S""t9COf\sO2J<l6FqV:L!oZLqlOlYXKb\YjpR,7H)*\[;6%8.KK7mS$#pk#=?81=JA/HK"q:bY28eVYJ*cNS5H3*'IJ0Zg\67mE\F"*+7NQ'?5bMF-;m*A:Mh],_A.)jKrkSnsa#LZgXU[k_/f(%#C@^@H'aSCr)'4*XGo>6"*uMlkGg'&_QFRP*'f_\[UBp`)r6J!:W'OJVD2H_e(2K1[Ub4hp-Gu^O_?.+KBWT_rd]s9X\*[Ip+>)[%Q&spXUgI3qmV7LO(t7*CaT%bM@d7fXiobIeZ4U[qp@bASnsJq>'t3++S/eo)!?2W*k:T;s?TaR3;pLgl[r<;Zm0kU0B-GF_Ok;VU%\aG57XuSAm\t)&)iL"77-JL+?Jk-:N9rqg5\okdNoq^_%g%"ElcW-_Y<c2_ecVg4p3ik7k$LWXe!lX@hYrLkLISh1qd!g#p)VlN;%4,dG_9\JQu;0s8a,bG$,"H&<%DSPMj<g%CH4&*@K/bYG9J4)VVi;0=E5P5hra<ZI-''G/!3^J9&.J-Kh>eBp/aC=lf)i#4I4^kL2%e!K+1_LtFb8U?:GT8!)6$j0)I0XWUMIFDu(WIi>pPiaub4I",6'"9D;&g8K&TDY^r+_70h9!0DR,Wqj?[dpMZR18/-M<g%XB\:fT%YN8*b3Q#rW1BJfg^DtIBW`sI&,I,_dG-?\fou1&N?)J"^ZS.<^3AQcm:nO$#^u+t!H-#@eCs3,CTa?k/Br?tT+g*I]k*^6FHTpT6%o0f=[aO81TS&lP9o'`.W"ot-ZBMNC8o99e1Yt2K2Y&!,oDtOV*8C)#rBu@Rm#s+gs079g/Aml[RbBX&W*_83Xf)J[XQ.6SUk./F(%+je/W^?G:7Il85ARmKB.XbTLcM:?`?KL@0trogo;g:>LsjCi+lE)U#t]o842YEBm9s&q<'!G#I.XX2eQ/i%&bG$ejF3,k+I>Z.dN%CY]Gt"ULKgrO/nZ:-]=DkaV&M2c::V;&`=OO_p/YnebJO3,MmjW@!/,C@!i_*cb%Y*Z6,4"Ij*"[KZ&/]<gPhit^*8c:XHlim_Dk%1p?[7aMjY%><?Q!8p7Q5,9q%.jI-gD_uW.Zi67`Js7sJ.7KjI,jbNLQkH$Lh,hV8Gl[CSm_j"eFUb,*V<ZkBpn^e^Ho1+;Q+MR#^%"u-$SDj\dk'*D[/F)%(rK*:(Ic9cc<SC8#q1(@/nSV]2nq0IK]Ri[D%'bW_gH7eoL1/^>ua=N3:,iUOrf5mNTL>b.:;.i<FCR>)8%E,<G'F8Yd"nHt$*n`2d':!o6$N=8(X)t#ac-_;6WgM<[VK?1u4Oa1hSi9^8D7!%?(1Ad1BJ24LW8o)%O0MNgYa[D1IMEB#Di&,r/%h+"%^A/aT$XNuHP&0GfL.1[dp3b>(/jSW!<m&-3EFlaf+(F1c[2Rj*L[Mkb)m3>WWB$?L_ljG3Ofr!noW.gSf6sePAr"-NS#i#ZH%S/8NtP;nGqB$$0Re)WdL:kMP`cYn^U@Y<4os)tjri>,uiWUm'eP'Y%P]Op!&4u\a(AjQ#80H*_B%4s?pRG8>h(]:`c!A<X2HF_'P%6W/hO"sZECGfe@9.G;lbaVS>;p%#lqP!BrWnU_BNrq=$VIW1F>'d1NK^&%>,jedP]Z"DdZ`"ut]RdiG6'>+bNbde,9g9arSQ"q@6%bj6i"YKF'SVnAETjT15MBUua>CS,E3T^GDUE(**sB*GrNc:*t0%T2d?#RPiLo+@%.]C%"k`1FH`NfsVof\3Y^#ZOO((AQ2C?J_b8%[4;8le68[[ZCr;=mHOK8<Q)2)GU=Q4_cHo[]0q*-807LC[0+GFBr;<Yk\Fr\9,AOH)%enU-:Y5/5G&Y+k:(1?p+,cdLno3dA/1R1%EKe(_iFamk*Oe,Z$a4<A73f]jh2.Qp612[PO<i9c8St]m:7h8-2d-?9).%t^K4J?@I,5;?iQd;#_6%i@mQ0ib[2.)t%Rk9ciW1GN%73>+6C5u1.%OnL6SeKa4-[qr'Gb3&1Dp1^dQB8U@bfpV?\Ro]_"DqX*D<^;9A=n(+mR`EMDQTaKRK1U."D!ko$8U$UPSbFq[Wp\%%f)=1$`3J"\WUcUgPqfMG6?;@*Du8]kh5XjP4jUX?auHo2CTLr2M@jZO^;2J9G)p]TK629aHVIkN+rpeXmokEPL<q1"T\reh/iBm`%O/Q?SaU$mn+Q:.63sqVO.P-QTP\FoiMTo^k.N-+X5S/[OeKZ=b-t*OS=OuU75LTjm!6MMr1%&3R5FkBm%0OUB5YEJsEL&>jN(PG4%f'b9Fe<h3<mulKHM;Rt=]>eA-e,dEqo)L%f!_<BNE)"oS3"/<I1+'Y8#sr#0PQ%arl@8QpQdH17WbDq+XD+%Dmqf<9l7;M7?BIgD%M9HOC=HRkM=RF>7Yq.j\ds=,eaUd&S;.SJ8e\-c;i<tEE/jf%_pJmc;i*MJ,iN!sWo+cN)7X63D.DbpcY&^F.&mpa$L_VKGj58@H%OJ;KOqDKHfe:C37/9j@+Tn1s#3s7>1b`kEZ4%qKY\JY]k+gD9oDgF"*bfU2L-nuLT_J.l14i=&T1bpq`B:&agbr1<u'Y)^u=l4iK%ZtLi="EQjUkqY$YJs#i1Obgasfh;V'7eY(mc:@T'C#f=]^7;G&WM%7O`Z^5*i>+T$"$H8eq5WlH$(?>!YrC^Kjq4f/@c5uLc2<*%%q<W6dBJ[YE0!N4nJn3uQD]QZCn*)#Q=6riE*nB*69Eu:UmOlDoR7*/<U6X)+!K!?SIaadOR'<+rN?b"0d6HYC,"V>3,]gZQq""F/%S3bT_PZE^C!W92C\XfleHHaP.ot(n5+qMPtO,_q461PashhY#$;Nm>M&W)`C`5e+LP&/`UP2IG!oOl!a`[['TB)rkS7$&\.n-.#Z%'+@c^NWB'd2/tCV/3m+Yq9NflY#KIG[+%Ac8bdrs7JfCUCI98EKHV"Q,Z$NmD;[*;iq\V1o^8oD[kGEV<V&U34SFkq7YL9b^@XTr%DbENg19a]P*dQ$mg$;1DZJ:"@$+nt#Kt0QkJ>?Ip,\HT\A'o3+L<A+0PJF;218BZCC^"ERdl>R6R,>/!6p'Wq_Ner2L31_XIO?"O%82<&b#XSu)V(q?@f[rt"1s?cha\X*T6.i146S5eEb>?]KGG^=;O2MMo8.LeI]uI]K,XJ+.]o0>9*@37%@P>;XMMHeEg6mN1>3NNX%h?iV6>![1#YXsUnYPGj*cNa[q0pQPCaeV@7Rk,g-"pbk96?&@]O3C!mA<SAYVF0/7+a^@/kVF37jHKce=`T6&!K7@(C?-Ub:A1Y4%a<6Z#mUZMMmoF`D%ol3hGD+,S5\B0#Z/C'5VZp5s_J[DQT0lREWdLPCp9d5]G=0mN8Cs32h+eRa5Y=3IY'*19=)a*r\3r-7=oF")%4![)6?<<OrJ]%ig54`s4$iuj]Aak@+2-]oe+OJLSF8ri+feP:ESTU'_$,@qnDBmi"A>,MJP5[43D/(:N$-%s0j*;chgObRK'6$p<%;bF.(U+,Gr$(beIV#$08iF*u6PB3oo%+NQf'?DHO7oF8PV3R:.X=&'UHg+[UW=0mL8TI?Na>0H"S<_L+?U=(/WOEc6fZPjCOoQ#4%)06PT)U(;8!PciQaJM[r$g/RfDS&tUAjV`)[9*'DeEkSW$muWYo(f3s,C*%@8RY/MKK>6TH70$UKF-%2p^qCNGcY<sE,:Ed(^7YG%]c99_45NkB`#t2$4OZ/^GW.cq*!tWD\/AhEiRkMpfc]hXW3!]$<d>`HIq2D"69;\SMh9nqp3K@.6gU8fUR+O]mfMGn,]UTgcAraS%N(S/hc"QMgAEe8HA>_N;#Cr0fHbTk;R&gPrJc7E]`<sgqA^>uQB5K=>6;E-le9W'I2%H;mF+C)Z!?O9*h!t,1M&I#5HE?3^1DGs7%/X9b$+GiNV&V\nU8$Q'=c'99VK*i"115[PV(=+A1(C:l=+JPk(@%.dMS]=U\]LI4(_'4_G@So-5(2_.VnS!/l:I(HH0Jf3/MUZ)]%bjHgH[RX_3)3V8./>D3?;Nc^>7-)mHa;Q??06L\rX[:%Fb-7aVR.5^B5<2sD.gM477=/aa(t)L[(^.;!:dVJ8TRo,?1%SRZIGL0H%"iTLV;@9LP79'W=1"fEFptHq<=Ys*/RBD0Yiq$#/VKZo:R0`($cVI^FoF10Da?95`$/G\lS2mK=?+#Kk:K@K",pli8dE"a7p-N_i%m-bWBRYbS"9Tg_n&FThi/'O#a-VgARLE)TY#VrpHmAOJ+=U^\>P^St=eg_C<8U[s-^$)2'#LD661FJ+*$l"jAY,g")W9url1G=n$%Q_ZVAbi(od=Z;M*@1_?IqlX!5:U9GP_uLX#ON**Png[Dc,_@:q+us_R_GV,2].bctla`MG5=i/XPY=/S,&:5>n;l>9D7+<UlFgdf%@\.UI.2q7u$A'Ci)O=+s,p%q7/`%-_j'%V.kCbD'6uUpjl#h%_Hn,Vdms8/gJ!k,@#V.[3?;i@[hn:>RdI^(AK1P:&[jt&@h;18Z%!G_!5omA._GN=`EH+L+lh7cu`KYksiamHmB3PJ%*,e)4'e>5*MDl'obSEml?iLseC7$]SR.A,iOVI,V[RT'c.%c0b?%*;4Z:F,W/%qIbtR@XBKgW0,rg6Hk%sI^KGr/4Y;iaTIjg#2/$3S]U`YeERd36rFOen2<(d1Vsg\,-O.4`m\IS?4E[R0g=>uP%:MRSSZ_+6n^[t%J5Rf%Ff'0q8_n;3_M0,u@pP4"3"!k8OT_bT05ZVS";e]!UU@<'P@!qQ8;79hUsSo$1cVXKI[Td&QeC"WRsIqZ+;t/m5^d&!h(FZX%o8*:3n]1D\>o`=iH#m$'3h-b,`9T4@<o(+,+ZihK<nuTSE_FP*L+/dbP*)<VnpN=?Y&qpJ`6WelkXC[4FS=rkg"U-?S<aDhkZ+M9%($$7SIVlXQZcK>ugEE[b->8,61)#lA>.!S$?-.dfCK.U5l*i$MYVp<b/DU$AO$?m^CuKZ\lB-uq@h<k'1Q7'cn6lbsWq$>]FIZo9%8A2Oe5@<M_^(Xg<;Oc582,.-&0>TEB*0:GMb&t2TLGDM__P$l`eN].`F<QZ92$?9eP05dX'B&tr'!<Jc!qi2befu,/Vp3M_4\\rP%1ZQg=ch+K$JKVlCV:-,Q1T3ulD1s29>9pbd3Kg=HM%_"p((*XpUpb4D;@eoS7?:G&+S<CiEe\t.>h\&l-01dgc1KKER,dW87Rqcj%,;==5_)PAe0l%:dVG4`MBPKRX>8[_rGqm+shQ%]NjTbU@VN5GBB6%U.aSuGV"%m@RR9f9h^r^)>E+g)ri&&iIjUg(EmA!grgDEqt%P!hk3G3rg`'+3KX-[b@3]AC$am?/`B=Jc3Fmcm8bjq<m=Nhkq>06@iM5^(egZ0GPX>TZO#@V+(6F,DJ@T?*:3[^,Rf=>L(Q6f&66%$-^PJj<7+[peb$pPk!8jh!Unl<S0p`QaB<)1.V6Han#qiEk<i]02[A\AE9K>$DgT-&guf9C(A>BAu5O57*4l-h>X'k=pW,'nu?t`%H3<;m_n&+u0)Ls,H8aG4SH8?/nE<gV7Mut5,WB9WHD]pN$P`uU<a#i$8A;=i?QSfFan%@f90hJb-;3(n>5q%VHJcJ`==Qkm2R:hS%,.jl0k2QkO<d_o1YM5$gA=)LsQ&%N1C?9]rAQ;V6E**6e"nVap)Ls@B?_c^"Z7*sil^%+>Y?JBN*p:tVn_QeWK!9epE<(S)/#5Tg%2/UjS=M@UMQ`@KY1o*.s2(HjqX=h"aoqCsqh?:M:RJNp`V4JG)P&LbKaiN?s,hGn):&*=\.0(M1:IB.j@!mSNN2e3aXG4'Ui<]FO%^@j>qIk_+]^)KW=H2a5c7FNQI*S!U*9Pl%V[mf:_c5&:2a'EF!7KXjPcq71A6G:R-ilRW;,?/$2*k8E:!dKG_k"(n=bq+kOX7N!\%mPQD'l#S<uZEN/2QKpaNn'.kP6h5'TI^jGuX:UJKa`"dVoD4!/AkPpGZ[+fXoB>isE>Sj-Ua&$Xd($*ri`U='M1tPN=g2WFK<hg`%-[:RS,X)sFVTn,,-@a@^,;WDJBn/Kp^TAJNZC%)_&%=)o,\r"V+u%2?p=$aV0TV/@@'oREhXaBhFR!kLoi-.`6L=j38l(qnmbMK/%P*2?(-p)p:o782G[aeM`&5%aq+-rg,gpF2`+a_76^+d#r,s5srXd/FuBDNnu\XLoJHC5#tQs9EEgItq8NN:,qVV]sShB)e$T(C$8%J=?BjTWpa;1)dCIR_a/9^d5l_>.HPtV(@\eAcqP/*'OL'S6:ENm^45daJSE\'8kg..pWe0<bb.9>9:Gd3Q47tP)1l!L.cg#ZR"+D%+gIQ!''pg16WQpsT+>b?4;)j3AeoK`QB'Kl1B01.O\(0q%28rC86cg!o"I7C1MS.dcnhdR;_PD(p9gKSrR+Z"!smNT7Z8M!I[6d1%4Q#+n\fH`p;k]\4k_P2Z=sC7h1-"J0/NGJuC=8B'k96&W7G5LP`-*r=PGBKQX)P.nlE>fO_nD7VaAk`+%=Ij`VU'^hGrj0`$GohP%KCui9/Z`gqS(:VA?.C/_-1L'bS(a8Sr*oO_Lsnn2jf(T?k)<^(c'Le59>\4p\(RNa>jDcsI?JL=/A:X3A0:e@5NSgZe66c#b,D3`%MpK<)X6<Cb7JRuq=$:1U'bc0c6F9Wg3OaGF,?s@>Nlin<-M\G4c7KP\6H;N4dZtt109=l\jRok)q_f4nh-%.S(k>Lq?2:2el0oJ.%Sr-9Y8"i^L2TmZ,'-]]j]KUX\1Ye7ET^3(=C6b08oWGLKL_ie'1_R.?W]?>IBXKS(n?gLQ`L*U#Uo$aKimq;J)A8j3$9!B*@S"\:%l5H!"H8HIFAZ]UTPhI",'E]LLVHNS5XtjakG.&lm(%b.Wl"edibJ8Lj%Ci##dG'R+/K]PCZ<%O6H=UD)"Q.p^r\g-j22kQh[-88]%Sop=ZA;30M5!kNA+68RkCIrQ!_*JN#`bqTb"3J8h@1%LF?!ah\!u#a;)"3mCg))j^b9&=V*G0dEZ_+E/TjsJL4Qc$Mj4T>]1H7ji%VP!d3b0?I88>+HVmDG`A(?/V_h7<Ej>02i9h<0i6hbH4m:]XVu[NB&H>WqC3]K(enF-_XH72""5^BHY0UaG9ZL-f@5J>&t!X>$da%Pn.`&n%0k<b=\KFcQ&@Ud8hgLrfUR1ao#KV\RmY^>sb+'1>[@_gf`T>"JPXQd3t3(>DVVs[W`ut%VISP.%5P"OX&pCr``AIcX*7F%.?#T1Z![,#Uj,I'i&5K_!jWs#Sfu<5ge;cqAjMgTc\VGIdIU"'R`+AhA#\?98'j6`U#;\GmtNC`[V9gW>65e89-jY)pkDocI@5H'%&nU4d-+.#.S]_o.&f:&+UJ>IJnE<H*lUfEU]oOj.._*bp[]g4JI.9YoZUYeN+L8/U.U$g&5n,XH=gj@!3Wq&NInKPO!h$/G_+<$6%LZPi)Hg8qtV/t3^Bf\R&F_HQHbq`po9G,++RH;^)/_6oeWa1q=Nk-S4+;[=lYJf._\ZZA8>]h'0eJZpS.:nTSaE:FT7TIP@M`G@#%)82Aq08--.GpoY2O_DOD8D8@jZBcbW:'hZ)Hn#pRVZs>If[g010R%ju6&i:%Of6-F8P[,(*Hs2XaeCED9F1McDFZ_&SZAVZZ6Ug*%iq0NDKR.Mkf_k\84Cu)LZ6ZC$0ROQN(kEMLHTT5k:INp#4&c50h3#iLs,\M$)+dm$\<]J_PuCr4Wsn'1Aa:8o0++oGm1s&s,m$th%iF=*rc;LC?=V?XZW.#YZ#,f0_KOHYNWcAok#)L4E]mefbXVpY`&\#'Y--/_)Gstc8+B6([reSBPNUcV[)&@n#B:2\IF;F%j94&Gl%6goYeEXs>5IdVb=/5cdeRq[r);ZFl_A.T\VUt)Vi#,QSR7`PX'gOm9YT2VIKESR7HrKt/o#M`e_mPrMKA#3,1.JO@5"fno`NTpU+%IGHPfMkF4d::*,BR+loI*%npmqnXjC68,'LcZuPFU0u_r12$$&To^FC'@7XX>*1)tl)6]a"u@"hA!Qd]8ojghAB(5b5r!.^=oaE/%n8s:9+"P>R'9)1fR%Fl.\\a(D]Q4TFc$:*4?!)56.oT%[RM]k.DY>4,0a1>.KVh-;n!A+^Cg1Es5VNl3%E\f'Fl"MJLFm<KIlX@%%HBq<VH<)D=&"A(bjqe3X(OY\?P.1s:f5t,OXpc6*jZ8='<0ZA5G#qBiA6H%V`?NYmY$/OS]eFgH-$+tQEX;''lQ=&)mPF3"'n<n5%2X]GKpToGr>QrI)XC0E6q$4dt<b1,YR+6WIXrrl_,iRT)@!'[blK,/U(M(GK?Qscb4>abYXqe_I;S)<fg^,9`dSdQW."Zb$ncTA&%8jp_agP^)D@]R+mFbuMk`P.2iW.S_.M[@ek,DF6TK<3@SicTp`X45.HkXcF7f)[rH'E>)t(k\N'jIEj\:Iu$UlP'j]'/A9HEk`[<%<+<jM!AaJYKYNN*L>D='8Aa/$dIO&6Z'>A2f=OSjs%1J.A7Y8ONURKM$Ge,6kTe:`Y"@+g\@=$hIq_L-fL>mE6:es"fL(<4/NYaV%`6iqX'Zh<^5OO]9G;BIJL0L[l8JA=?ord]q89U?:a5HjSWPD8&Ko6obCfQe](jb#(&\OCT@l',V`+e-^RL#?b:a2SfC<d!)kZ]oF%5Z2kUaDO;a<fo2?ktgl)N4hW8`r2HH6I4RlBd`oR1I$oBB=T1:`9#ZJ1JH(njMt9KY%X(tY,>lZOtJT9DF5&V7j>$b@lC=qSK]e[%i7LCfg5[@Ms*1(KN?qZg0PbQe/:>Y<i[ad8UYGX]pZO-.d!f&f<j6h2A?&&pcb<@7h3:V5<cZ:6Afm[Ul"t,NP`d+@dX>k1J8DAj%ZM\P7UU<Ut^idSp2U,9Z5\XGR(&[GTb_7;p88HS8\81E;gqP/I!qKWlE(DIP8j_D(EjQ6s\>8j]J.ZeSMXq;28h.2BOR[7pji/1,%?#/t$W4VN;?:f=&P.B\'Mc0d^mqE&\ZOsSiJg=HJ=$%q1h3MIojNA\NK,XP&kr3]u\@-.1K\lBuQ[WZ2+Sjs-:*%E1jn<$/cF`S-%U]Tt3\fmPc8AP"2;bG<0\;VPt9+%F:buRUO:q_A,"7)uZX>#Lr9CF9<Oftgm*CbK,3%3`fK49qo?$A!,R<X_;H!]I*:ZB"(bB%./%i?!IFG!s7?FI=#j22V+SZR/tf3*Y@.Q,`Slq!sr?fk>^2@?Tn]$Vrh(%lVT^8h-C1YD.0M\dD9ri-FAqqDFCk+*5]J(5D1W9L_]X%"=AI<E!uJnX-&(Q#+<E^4G)>jJCCp,o]ideJ1Z<[Do[D.--U3t(:"KTO1S#c=Foi3LP/qb,Nfd<bL[,f+r;A+-8(.VBm,,=/M\ki%I?mL)#-n_S?JB7D!b/X-G%/e\HHL(Nf-5:60+!-[Nj[C?-W<$8nkG$Q!E3.1l45dbD7s-b6Npm<\Q?3iYdX'Zqq/9kj%0\h1L8)r%8'UtoW!0IS,A<Z7dDHI:`bb,Y`;E5:[V'I,&eNcT.?58^\si)N1W9@OoT%/brJ[!DWZIt.VAhGk):d[+>=pt5>^uf`aaA!Y*OeSH%WC5TinHpRca[4)_<K<*&,b:!(T=2Yac/6Rnc*g6MTb_$OJ_gJfmC"bie\p^><NqPqBE+kSV%0q/5S?+2EcM9rM98K>91D\4O"u%o%H?+$sUTuht./oTHi/Va:^0a8bBp!Fk&ZIff<W(>BO',bs!ipCe/6EpEpMei>)uj#[;!LS@2.oOMcWAq[i4fNM?=XP=prRriLWup?%?Z(7W%<$O9UMQUZ*6nA]:QgmJ)/?QFn$WETi'YBf_1E[/:H.u'j,1eR;-_r;B=hYn4aJVc:Do9/"=`WJ'1j@j0>o+0WX(UY.\+o/%4>a%b$K(.;,'CPR(9he9LQEf%/t;-s7Wd<\W2Rl;[T17iXVsoE#uXTj[>d#S9>PDo/9)_;a8T;VR-/=r<\@9-F)\&VdqlL8'?EHA%Pb$Muq[TD;q?i^lAk<=&oW2T'D0bJk>8*`IU_M'a<SI^kQ#KTbZD27Y[LkSQDH-uZe*S^OYV"WW`!.bM9<k"7VT;*qW`m@LK"G7I%7X'ja5fsA/:^eSuoNTMqCg'=IR4oMA`iCl3`H5+&E8pU=47Uj[.;VH4OQn]Hh5ur0Z0#)\g]l&c)4.3=\lCmtdWDq2iXF`;p+d5A%L"(LR.M<&O@_2l(?Sks=pYEUpflH6nG9Ss/Y1k&r3gMfUG:CDG2*'5C.864%d7?E)JER.u6i7X=,lBj\Cq0c7/g8)IP,LcI\tV;P%D'u^mAB6rlQu11P90-f$a7_9HEGBXiX?t+taH:2E%;@gP;4kuf$dqS%l,B`(gBh2o*>mTOK/g#`=CS]B\d[!E=,E=tqmD\_&h'0>%CVR$mghZ=36S[VR:Ya33#f73LGS,j:"_Hh#_t8&N#7"g_'"BEj)O[fl'(Iu/<_C#PAJ$+g9a_p_-):kUE!hYF(g/a&I<d<8`b/*J%M!ich4m1<'jJgId6js7?F/c:0!p"WFq/PA=+jUiMc2u$NO=+2<0hR#8Cr:!rR[E=Gro)UP\=<TJm""[f`WMJEBs\H=&6dcp#-\`"%O$RN=77q4fh*C`&FAP?U(W5dVV,kk8L:T?LDP+d&ac#8dV!$QV"uqhJd&Zjj\?%$!,l-@0'uMRPMkPqHk\\KA/e'j^=H8^D15@-j%V1^hZ\FmE_l%@R'>m^Ma.d:.X>QWhR),g$?&QCm\P\J+K,fk*g\G%bg'3"2$j^^%USpR;1/3L0_W5SZcqtCb"$&`:hU5WAU2(gb5%#opH=g:"$L$ls#Xg%KF/<T,`>/K^8QP>)6V`tEUUg>dE(X6Ic0WnH_[1!XpRICTO;!krrG-eOWVePh.0Qg9TUH^*Jq`[nE8S2'Ii%H%XS,\C%G'A>D@9_AS\#F]ca`gQp<)#2W2j6hgIA^CoIRe&0ri-[h@\'#peTNr7HY]rjlo1G$RJAQkg,1fuHd-7tCDo!`MG^>>gK%fE-eqgr9-W?8_7PauT@gqg)<!W(,RR<-J/sWiNq"UnLF!F[Y4f7aD>oZ34<e<1$gU*la%9be"iS+WhbHWrcX>o31[C6](&X8?2+H%LjKuPm)N/S[A84_b=+0!d#^?R>Oe8iXUq<RSAKJBN?]mc)U0ME;L7KBg#m%LO@hK-X/iZ0Pdt)m9BR]d4.RUcNBuL&Su9e5M0CXD%l2_:*1!4OdUF6%dX=RoZ8Jt;Y@\N*>fH=bs;&ld[Bs;1boqA&(R69s7"Ci0-&`Q>YXqc<&NgpkJXiS^[4jQL@cO;%RhQ=);rlNfH%(d8##$]cn#@_db!5a2V0Tnmm/_Y^bd!b/g'PY`Xeql@"sW15bBJ<R+[+QWp:2q*p7.D:)YN*.=Q!dfYGL:Wi>a:CF@ZirO`"d`9_%OMLYX-#6]cj3C,%V.3;8dEjiKYkfP98g0k1GG-3p.lq-f.]]@-A>LNRgTak-TOuq]=E,WQ!YY:d6.eP&dD_8RXV?Lm/$9t6k6K;7%&9;2=Dk,Omp@Sm'=u78/Y%J;e+S9,?:VktS)mAFX3NUcKfU'DbH`kth<W&5[A';^Z'n?A+<e5m0=63X0anDUns',#[o6)%K3Qd;d%^"c.XJqd_8IEr$Y<\1:O6(&gsS_;8b1"AIf/^\<>D]./hn5:J@mr/nB]Rr[Y<OC8Y.i%fbk,A)4cUU5Gi.-cF6mQqm8l4eF;19XD%Y8STrH4e^Lot&<00NCR)P3D-Q$1G@SQ5,q^([OYn[*t5-*40$#7d8_H(%dO5;&b=tQ'`?UQGT57*bC$!,Jh8ArY?T[>gcr<78P_I%6lhI8o1`%m4`U(]=bIsmEo</L+SU0/q0iUu%I--$1\7V)'?^Ba.lD3bY8`P0X9MTA,[cu;&6XbC?F`KPPC,kGBCX[9+%K*\pj#OM%G&E3PH;_gp!BQ7jhqSF(TK(Z6"G9d3>\:&nZ@h;d9!eZ08e)/0=aA9\C7Ku6C6-IW.],&_3`^C:^8,c2nHjS\Xk:H=kHTt`CW4cl%JQfSGRb?c&&OHGASB-!gLKX5>1*@?_@@rj$;RdDVZjN:0BCVstAmR`942V/eSca%6_1Y\2qCYC+,auB/>AXF,0:l*XN30!46VH.H%OQiBgjcqf*c7cK;1q!1WFf$%<"ZCOQ]N=S:$.(8eA1*MYR\g=QBUZ2$_^kW=;G^ks/X8&[Ck5+,QuY6+jt@r@.`&urWJ2(6<R$Gl%Y,h:7KEK\>Q?Eqm\D!Ps6`8=I/]A0&[>u@X:&B'^Y=`N),5!2R-+`X616$+RZ4n2s_QK-ArjHQoRM"Ko,B6O@dB;T8@U*B71m2u4%?Gr'KL-OG#X`BR:j0"q'9.6>5mmhCEOk.s;AF$U$WlI`;_+&A+>\7Gf_eLn'\jXQG;@\h+HVZ7jkZ6"S]u#sR"Krq2s3C0N.Z#-J%MN'''3;<gp:Uo3P.3a!XpI`.t1)1a'W->k[FW`ZH4hj-Na@?jiA<NmSG11+LFB(naKd=o45F6tc-MMB6Bi4aZrN+DN64.:er-;]r%RXoO`L?S?J33.oZ3M-bIo;K%()`OnDW^o^%*OEe&hobUf`o1ur5-q@=Q,h5(82QhgOp_eqiSF1L3An#+d2U\0E#_/S)`&aRr+EM]%RXI`,=.q)2kXj44-V4M5\&fJV>UI?XD60U82C^Ib[qYUY\Or@"Z2X[\-ho$0r)iADXX')@hN!kQJ(i\7Y.'>'MAd@Q`TWY(o4%b+%3t\4-O.,dm=8PeA5-]Eq*-PQ+q`U[?F[o\t<lO4bYg)i@OS?uFk8A!cgFMUo+sJ.gaQ.>k'>55.mL<D'3q"BHSs5d\4%3Xor?i8*%`iLN=DKFthNn1pHYt4OJ9d7'EW2:]E;Om1"@X]7uc%'\R>U</cJNre^NY&<U/<Tc-c.3`JM5jkG/8hb7L).PrAuhtY[=(at%LG-A%^Isl!Y7lMNX):#g/`!$eWn?7oQ>RAp[+lA=9R$3IZTNf.+W.QPMX/e6n]!p>jP#:/)l_\@9?NB>[Z(rMWuOI^e!=Kb08VFIh3uZp%7)to]S:maNKbCIOOtBDd9o?LkW?;SX.C/R@$9S1jF8O"!*r_]5XD>51HVF9n"kc`Ej<BsDHJ\?MV#K.@HqNDW>XPfhh`cV@P<7H+%B;U3U/j!o9HhI395&.]X]*bPoiG(;)qoB\CPgf((?VU!R+j?Kj\#7WIaEI;>9pVUMZ<tmuXR'G.k1OLOq/XmofeRYFVAYP-YafjM%m$@9(!8Hf9[0*(h[WgF4kt_J,!IRA+PmASL,aQ`Q]*Fe^)d)@s,52\YO60AiCX?,L=-4ML7``Y^<$I3CDFqS!7hL)[CV$:m6?chh%[\Iim?@Knq35@^Y]'n7"\XPuiX^_YZm)QYckY0.P:1GM'GPdZ1GkT$5%8$3!dFf#ccb1\Bno7d'[kl.q9U]OXlg0CpoHQBlNqfjd%^ZU`Xk>&JD?DU_GO<_)%]34DEA+"6$=7Xp$>/VP?lha\0[[XI%7:aa2oC$#)@<t;Q%Xo&/f-feD<m>aYk3q+@+$-^$,eP(dQq9J3%[]O(VANN2lP_X[NI/4;%oVr.nLGfam*QjqTdZk''`D3VE4'BU(Bo#<)I8gmVSW/+50_lQ\QP-q).,"8AODX"%T!+^B"p)J[Q/ed\%)C'<u8&b[EVIVH)+aMos[Z60O&eeQk]da87#!]o5;\ls&66(8X)$uFm_4X)7B<gGLRjg%N/nIj[.=mV"#0qCoh[8pt6'a=5am_3\%7<`;Yfsr2PYG.fWGc9uCJoocI%*@pdAV[NPdjnRio3@iSOkDTrUn)o98HOM8$r7%*2\YO]'hl6T'1WS_J=o#e*+d4laKmMaG+T8&%apb+K%]eGmNY<&l_r(+;lUf(W^1V-iX#H7l,keM`=S+1>Sk4YnP71U:/WnFt2-8&ho,I+LfA&@pWqWFgLZJRADA[B[-=(sEHR-Ga%Oc7[\:MWcOJV*"^=K!.Y$;S]<T$^TPU!%=M2X7@uSI^S!9=EHL;`^(S]dB--)Z.^;0:r4.Q[/i:F4.Q%_(:rth*TG&lE%J1EBn/`%m5mN)NZJ<oQdIWo'CGW]VPt@(o.Tk$+YEhY-k(&cT)YF`gg?3)(qFBqA7(]"YhK>9AO_]E?OmI54e)bHh0dCralsJ/qC6::,LNjj%C<;IrfK<)L;@O'6nn]'=<^s/dM;`mJol2*u'9.B&#\A(c@Vkr%,MB":goMSWDMdiM<1bG33RaMi;7#Z$*O6(76uq"-P/o-ma3MtI%lKdQ@F3h44\4(#3LD'+kH=+Q_NC:';HXC]C_T8;dE^f,g@Q2[_:spOBHUu74M0%9mW?03j.n;A?lC`Mi+b[e;J]*kk^]'&5NkUc(%KS<n[Nj31o62"+/.nPZDWncFDHI_*W-m/iYFqmq/P)u>BeLV?H;9'UcHLkuCCaE2J6+(n%dI#8/kOhZhOYcI=qAJ\l/9_Ac$G;e_%7];'i\*TaNh>^WKXfX_?cT3-S[i9&<jVL_p#]MlE:)TqQcB_1=2cRGfVT[2;h0!e:W,,"!J]J:+d518uj"W+dG`O+$FCoVfm'Y;_%BsWVUlmh-@C_:lf&m,4E;gRMpPANEh**a[*j1#Tc%PEp44DU^\8nR1#;c8P-OUd^YbY^rd,fmPKr-Z^g)^?JIjR!eJ/Q[dX,"]'l%rFtIOL*ScH[tp2^B/Lp?q$is_l!Y1_Q*)-0q$BJe%=!_tiYr#\KYE1D[6n(@Jk]OE5@d^cR;:A]![0S`G:N:Z]=?UV`EnUH,(*t&%qb:<:R1>cC$IFo++CI]n)5$'XQ=t1#)M-Uu';^ZJkFP6d6,:4Bqn;E&EDK`=p?J,U!]_]Z466.&<MNG]5#/FcX0sC#rci(#?HjDA%(5AsSi@?_-H;Iu^crg*-[YdkUGG[VT3B"6+YqI-.5tFPqDNI('k0rrB?[.3-8e+e1qWr:uLFLH5OT/HGD(fQFA[:>Emo)tGbA6@4%g-U\NbknY62kI-U)%qunS8q0=a[JP9$&DCT3"aQejM34r]2iBmSY!G2OGLKNoTbrd8</k7g\H/FM#emT*Sd%e69kdn;6a9!LkEdb%@7,Pt1.C?ZX]A4)!r.M^SO3rbA3'r9V;(7i\sqc:N,TQRM;ACK;goZ&5*jd_)h@bN.;SK(*_sh"j_K1*,!!(po>8%i?8]GVS2AR[%#'se[``Yf@?s?Bq;`ouN#u#@dY2\8Lb/-iOY!rHMR!g_mdFrS*BG-hH;pinr<&7Y=2M7W\,[KG4'78l=1^u)&)8]E#AeV9V;nqS-%bg@A\[qQ4\;]EpVc.]2=;mUF[94^faI8*c.We5TZ@;nXAl]F:SEem62@o$g_o@sg'Nip]MjG4B!KQGqK?X-1LcX!t\Y`Ia07lEK`%mN+G`(tGi'gQG:"bkU]_HYfh!`+W_pZW`a].'VOjjISu8_*<MX)]+bcb.SRYO/IpTfd;rg7:P3jP$l.KD)dM-,"q&7103FRP)8l/%S"?boHF$45Obll]Sl3!+N`Y3O0Yh1ThYYpZh&0p;-K0NHL\mN(%cX,1TUAZ"(K!'r42fj>,2rH#(uDs!jf=R</VH<AMZE4`A:NEd%8<BXZ/Eq:r%(GQD(*?,tN\K["/8_=.4ZO5OV@*$%U9X6TZ%K^0FX:RW,_S/,6+cP<3S2DkRdq+)LBosU2OFLL#aY?Ch>#bfg>!qK%W8.Wn?Scp6Ot#gB<ROjQ-9Sa%@n[f?\<l;DBf%9n8FABVe]pY?9LdNPX+E(u(=1QCOPTt<<W9+";*p%^XSfArmJ13KUn%bWlXRa,%MKa)AD]0K'E++@MV'.'qkt1;UolWBo(fQ]()-0ECBB:IZ]90O24Wr[S-6ZB9)>ojS*Du\VR't*R7j3j`q-E72eog\O.\&!PceV,Y%%i1T"2tBk!+jPUZTC)t,J+2&3$/9@.8cjHo]n_Cq^rj=)"d73:nC_>s(:]nj&^i\cPeZ(!-%XorCc+E+<rBM4c_G1J$fq%+1Mi3;%XaF49a\PDY7@PQ6MBCfA941,*X?<>-9+@:5PE=lgWX\#Q.Pq+k<Gb8bV$oJ>W8c$j#/G\'^$euNJb]F#'/f#u1RMm-jRTVFKqjZ2%K^ol7fSd^_^FK_G,R?mWf6]3,]i?OfH7YjrAQ:Ee!=qHL1K@VdK^-!QW-Yha5Z;)Te&qN8IKqi+)ESW(3VJRd15k/T?%L\;R]+F\%EsF9Fkp#t7I\h2sag!/X.C#WueJa_G@5o+>oI*c0'PJ/IEa;O$(7(ULdE,a-R2"1Bq%%Yj2C/b2b>1A-bLXB.XlR#<:JCn\^!_Z;%R$nk],TrKg(Dclu.6CuOo*C11M'Qe]JZ!=f.fc\6p@]Zd5\:YJ['`m@V,O:O`1lD.ZIHUN5+$+_OiQP>;ZqPL">b<<1k_Lq(HPYi%=s=8NFL<AYC`X]D9XP.R88uiu_OqA[L)XX4>9s=roR!`o!]!r`7Gpa&Opj0GB#eX7Ih_L+ojiIb46Difb^5(X"f=qZf;QK=Zidm*%ODT7aO4=R!Mf(4bOB5t,r&"-:'.^=-,Ku53TAN`_V,b#UO#!!g(B6?b<e;[<SgFDB&,N5js*-K%*Yp%d6$dB?BuX=o4Hf7focUjt%ZsB9GP_3+eA?+Zi;"9clU3JAAR7<YL5.7gPF+1W)>%1J$j^dq@lD=('+91dOqk*m5..iD#$Y]Pb#kN<FjL->(X*.oLgR!N!IFj\P%/BDoOVg+JXJ6&Y\4uh3H^YFktq2bRPj1kT's89Y2mm$j8s7>VbJ,B+mr:feIg[gqbqtn.B_`pb>9<A2o2iI#RGqPo-/m9ij<0EpD%g_%5&fn9c\0+P&ABe`LY4O7K/?R1WGe6=J:%(ge`Zgt#RrQf;S`JO5DoKS4fYq"[n<)&<eZR=_COjiKX-/eP6Zq%CS<)ma?dtk>@%(*21O3oo?_O.J9^mN`K:&H^%'YnuO@@O-lZ^GA!rCI.2u!_6:+Hc7+=9euZ1#Otq?@e:<-MI(>'Al\84B,F^>.kd0\V\Om'*#%I#%o1gMd;[(GhW^4I(]R,U@,=]`qa@*_BHIt5M2Y)Lm7Oh1h5Xs^a+WTKl:Il&A/,5fmLO%k2R<q6Rg%e1TnROjs9IMd_bN;K^rc?"Z%0Eq<[2=VCdj%dNo1F%2rmDgB[bD5Y-3\=rC&2%A53q.IoOA[B0Yp>O%I@$Af\B0#?YD+o:S*N/meL3ah3u(*:1/moaOSHqs8-5BC%$2h9I;nekV(@Y%;1*2ah?(mT=1/6k0\<=!4a@]00_0^^`co#88kqW>#h?Rk8Z_G.crGd0*:!-l2GB]mCYiXoJ$_U:qIE>L&4q?)N%7urT8iRaQ6qE)*1Q4Z@fHs*LuVBHQbSR`Il#AK@RZgSB4@'KL>`F8eHOegI`@I"O_09Q>0G_C,4ZM@+O+^2@OUq.DE>5C%T3BZp)%F*e08D39gNVso!E:@\f]eY77f@/VG%hSU%r_t2_$_<LLOQ&;oK#reIbC%iB=(j]56H+crXeo"bZSI>4A'FF&/Pg8di8`d)IkufL;%#M<pXgOR3:\L"4\<nl=N:eo`FLo3O-S!:O/=a4#EIkbHln*R4mmA,4MP3d$eeZVR\XNtl$d<7A@9&.,`be5RgE=0u^4QG*+[Q[?f%<@Tn)8Xs#4s'HKN5$S26eY"ec$;g*>HP$3t;(]h>d,VdVoc.TU\s6u(24C;S3E#EO&,kZC]9eI@?W>HG552-:ipLisdW//W_@LP/%r'V1ClVL.8gcDUTiUCU,L6PV@*_I8[a<d1U)m]r,iND2G@B+"Eno3R`:)bAr#1h[eIoc7MC89Fei;b*()%,uB`aXHWC#*E*H)G=n%/a$=[p!/:[Fq,.3,?mc!UhDu.7g(C-qGi%B4)FN1-A*,'6Xp*>9,*),%C\CrpIB(j'dc@h[BF/r[HGK:\i?9M,-ODOqt#^>*mIQY%B!q]8f+I8c[S]Xpd^4-^Wo;8r48l!&B%s^g&Na?9AV*j*7o,_)YF4U*Zu1_il_nfBJP4W&_PdnKgm4NEWBu_4Wci!CEJ0V?XJC4_%IFqT9*e/;#_%Vd,nF7VCc*g]>\2c[a'AfEj,s)@N%C@]Y[Q0Ms_c#)sP!A(>Mf;4ME8>ZBdug?+b3a7S8UtK'bK+rmamcmGD<#Nf%gQTLD:t:"7:c+LpH)D#rJpHh,13A'k8_qTl80>fJj],n;HJPZ7Y&'M*/g;`=1,<Hi9H)jAoE]Z+Fc"&2LA7fr[EUFUC)K3.1F*O/%@*p\1(6e78?9spB(qS1t.]Zq_s,VE>-MQ3,a,XaKDR938KHnI'iSI6!%Y;:''(e+.7UYBX4;1r'@?KGXV.Q[Y=*IdR[r!'QMlpVS%gW+#4m'_!*W1pd<HO?VuE55R\ZSl\!1iX]sUp!o+F)<IEWq+0%?i?YUJKlFrU`T-F-]DMA['V(Dg?[&4Hqq!42cY&9(5UsI<W5C.%0u31.'rV)1XtlPC(9;t+?L*n5pu<oCIen=qG0DX3L:1UcEg\ZVbC=sTX_?(\ho"/6\$iYDOXQc]!L94!cr\X-RRN&V-)'3<MaKr?%)u&#RYh*lP#Puidlb/0\:g-g[p?AGs;%NO+3X;Vo%,4!mZY8s2lSdQ/%oKi6`Ba'0eE-JJ:e,HWr_d;Il/q4'9ncuQ<='M[?4@^N%016MNCWU]Tf6nq$HC0;/*TbfFg-+M2WKn%=7Rs*n6;'"P&BRC^CZCF,&*r-RS&fAU9(P#Z=a?lnF,SY2,eYRF76e]-QVO6l*>F,q%Sgg+^kE$7K4[R\pbTV*5B[1)M,Nn=4ATpD,RC`Ela4C7fF=t\ASs<ho*u$UNf"%]dXGQ;+ZY1,9'XJsOT6<+K(5e9eqOgBoJ0ZG-%dO)E_UR>Gej<D$=]iSL;a/CW,A0VM.)TQT+nS"NEU!7nK_q),OTH"pXlFUKYBMU5(f@(?pP.cU%*4u!-#^o\j:SS2GcFErXO*u.f%6M(,T*7B1'P)9u)kg&h^'b7Y,BMCWFH6o7Eb\Y%1(*'NpK^ieY>V2W:<HRnI?4.C?TbBY,+(s.6SDKnej/NMI3W%)WnV9#sKS0oe%he?[C'4:<KH:sE4,OJ$oX6p>>ZR?f>fiU/^[`i[.pd\/<,=+9GP-Be$LNr9p%=(U@[^[Wq'TL`1@J<c5q.LC2S41t@L6gZQ`P[$[%o:SDI@?1+!SK40*$MgW9`7_Q+]S'cq3c\]eM^2!E]/%olGoItCO]P`5T,"Ec*-,E,H8Kfl[mg31c1HCW,@IFWke-sc,kt;F:%(;X%ROI0ujO[l9cjE<O6=)h/iE=@2T7;<b_u&3G-WD)>&jXXIm%/B(P!/+>#WV)IDBV&_/#cE:F-`j02qH5bB;NXWT)cN"a@jD'2N"!i%d3I?X%^@'FIdXn8TrdV,jI]=#']NIW`+\#HV.'K*o5[bjYqlsqqa4-$Y&DF(Y18*ud=aOB.Y7kdW7go;D6m[(1Z'N,W$0.YpngU6%3/M"9BH_55E]gd>r0X8`9\,ta`I#cqW-Pbgb:OCgI4#oZO_g_#R-^8U+1s0X*]23e6D^J*cILiE$5<"1Q.TgPA,Np(k%]\W&'V?l%r&Hb=e[1n"F3@G1As0oFAbS:s6[]V=H3d!c;(8OYa&)RnD.JS/5i=4Gc6#bATLaaLR0rLIg*\rk9p-2<+cY:K_rZO5Q%V24Go2l.%(X:o>?'H_F\(foRVlqNMD+Q%:I25YA^dD0kH/:[8OhV`Ecs$sc(c7Q(]W05[6VY_QZrKoPE_=1,*C6CcR'?%!5`heCGd"&+P2,T"%2%</3$[B.;=/gE%]JpEJH;An2(Q$uUa$;V<WIcCUh;1Ie5KP66lC-_O6LuVk)X05o/F?E\%e:o9`M%+#Ie?TD;o=X\cR+5h7:"\h%plZ`Dp20Y2,F^gaA9_ZlX/j<JAZnXfC4WkhR05XAPRmJMT/08Y4HFoB%8Y*kB#)!GCE'fT&M'RtK""['TGA3g.L%G`7).I3B40aS%b<9r@YNnVd<KGjL%W(lS5Tdt,ZnN;Q:X,qgXdV_*"^a?P\t&o!CC5a&@&l<pVitF9:AEBN-fS]#2&/<%U!6,lj%Y:ki+=8&bll:B%"MI4PA=MJJodhlKmO%<n\uW@TLadK6;heb<\VBou9/3B\<eJ\l$24IV"R"(;AgqEqjZ^$)Jgd$7n-kIc/BB&dnVdGF*9H?JWrtC+%F,Trs,UlhPS]t_/X6u(6\'H[>/H7=O`o/a\YU>d2_2K>TO_=Gm<2X9DHY#[*>Z^_)eW5Ng,`N"j>eLWZZautW'qCYs=j*QUIUiTX%VZ/knmuAVcZ><[(+Qnj1!NMW&R&[.aa?oS7$=-mL#AEP=U5Go&\$*2.h';LI!]lQjG^8A=KU\I3kso96OLmQGj#pE(n?\C3l3Su_%V%#s>IF"*HJVdTQ*L"Pi_X;5uU)8H'mjE)F9Nul\pbABjFTS(JAMZ-8QtBK:,VE"[B/\W2FW"n+I6jWkId_emM>1b?W&k%t=LRgM%e@4IGbYK#bFCtqFU7*CCH"8f%-T#e$X6+l,>L0$0;u@o8Hkd'&Z0F`An`-($=%fD2A?NOY0tQ5gCbW`:ml[XO/Ya4\?p8YXju5D<%L)8&V!,P%c6(FB(*L@@fr+,M#J;f'u,,,EP(toB;;!>IE/#Ip/gL_2V+FGL;9"..@If)',NXQ,PR_ho+"[1HbkjF\=]06->fB)TP%$%/p:8*sA;:S..,2/2%,8lbG#/$c'9:N21eBqZg@$Gb1?<EUN:@@9gG@ZJu4+^VLaq2+2F:Xh`3O`BFaF@82N[3#mBe!VP.,AXML%h[J5j5U)%E#n^m\h^7pJ8Sld^+XjJUPcic(k`g7NFCr2H4iBia2#LiKjU!nNF=fs!F*^31V)l>LS<;]dTRPQAhuP<Nri+i]N]A5r%I:BH,N)C36@OKDoH6?NM5Opr;7bN7fNNa9]@0pcq+-:1=NnKdY0cuF=m*GTmYB(kLH=;\MF/o0n');sd]ad@(4W%USSc8Ou.CYgo%U$]UU!(p31c5\:_^X$UkmWD8FS6k>;'EOWG/PR"U*/[NAI-gbNeO\C,nQ]OV-^tQn$&0=/\&fDXcE%$R=p-qopl<)O<KK.dcTG^r%q!8T[28Ii;30U^j0#S#gdjk*dmZ!6s]:F(bUO0_'Au>Aj=u>(lG?@m-Hd=A69]lZSR94"X,kgT(SGn8"/PZFT7h:[%>>=+jKVLeu%06#MRfh:YJBc=`s:/]F#e+u+r\+0\Y8r(h#=;oeAf2#)uIBW+;K;'=J@Y,E[cEif/+d!$.dh<VQ_^AQ`X#\QJ_<2\IGDn`CnE5)F%1F"*"e&Zl.#1RhXY;nHRYg=$)%OR6;Ea)!shiZ_a^lm2k:NsUp;[]I0Z0)O%bA'5DkJUd;Z6#-unQCm#XhY?_/aKq4eNE5BV=>f`%0En[D<C$_M!jftiC!@h<U*T1VH$duFh3G`f!,U,tA@%/4HGFuOTOTe*$c51d"uAYuQl(Y_C)Q=TR@j9mXkVA"JahUd[S:SW]T,P4%iO)^XlS>Pr@qN;A+u>Z^DMsB7O]3r0B\AG-!c3RM-`U2monEI^[Xup=M3?K"c..!%k0d9I^lr'i-rCg^FojZ4&`NGI33'"BFmN>h%S[GSt+*c)uY*#JOp8<3qFX,$W==t115S%f)@IIW4&c(csff8\A.m;<YH&98\<b:Q;gT&QiD:?Y#f_4JA4h'DVIZ$$[-3)1_B7DGP%,AKIU4-n?'2/.(LF[i>(dTVcL18;Di?>"Oo.jhfhdsAg$q/p;HeE\HQ,.\`>I"3t.a(-fIaaBk?7`-5&#$l^o=s@K:+Y_o9\Ml>X%2;8hiK!!]5A90k9$bVGKjARk(8!7$6$Q;fQN-2^1Mak+8J3I-f'JIOHptY14?qhcibcF3Q)VkHg-]f+npV]pJ3r?@M:7kC3'aD!&%n#5_Xa4u^$4@1mWg$ORtd323(6e.<r*g,@b^M!8g4![E[`JApi?E<L,p-K6%M/72fD8m.;<;@)U_Ei[PIJuNV55N^JV^b+,Yk:cU%n??4\S_:IsSHU4,0H(M]Zf\jDRHq4E6Qj.>`W"%G4kDIpZ'f6?an+qnY5CuDBsom@#sdk?R!!kg;:kr\d8Kd#i!N_9?"Wd-rkD'A%lg4:PoM""\=r4AaaMd]s'odDVM=Rc)j7^,9i:0FrW[;=P>QOIkBrBENE0]<:9;k[']\Q,<E-dcaBV@s53:`u]I)Y,EP7W43,_DFP%nE2q_c>4^IC&&p?'*1fA<Xt5lAl,hJ/H&?E![?:Or_?Fr`#qruLV2M+M60i)3lg"RWQs.J\>nn/7u#*5<KY8?&!:s1^6TFh`]uo1%lm(nVR`+XHZP&BZoZtHTg.ZUe9Kf!7Y!s"&Q8WNImth9?NqUIF\Fd%WK'Y)@\PF>GREsJ,EuH95/9=jQ-G#)h'@."0n'!H"k*418%8d3l8c<9_l7u#kY#LG97_W_atZVpDuc:oQp*(jWY4T[+/C/7\^S%g:DNU?^A-]Y5qg5XbQ'NK1&YI"mX>unn0%=g%3X6S?CeVRhX%&ugI#/[A)QLdaVl*JuFXD%OsIk[gfsQZc_moVV^k$I1dA_*k#tWS]18QtsW;&t'K@"")Z$<DsX,%cq2l?KKOBi15,;LW[nP0;8[i%b!bkV88ZntghNW\+n+==AQ1<Q.;p/(b!B5>h<eP_8B7q$;meZC4jF[R:\(Om+F3OUe:+gUftM6Pdh7'9K;EKR[8(4L`qC8nr^0<7%SSL'!9'0-0Bt)d>qr]h$F+b0;9/g?nI$tp2P&3+dW^7fj;61S"UH@;pLJs$rgj>YVj&,(^Se6KhS>-LS3D7`*3@OOP(.:K0p1t3Z%!6mWA7b+HEXqQ^[`;Y6Jo.?0Y936g*&\jhC0.h[q6f)gkcR5$4"c9P;F."utauhSg'59r,&ma18-*PsC7/Q?^19#K]8GTBei8b,g%X*Y(k:n=@c9h(f`:9Y(CpOF=5_Z'mZPB]e<OIPD"l#l[$mjJ/TakLu7&aX$Ld87S&P<^Bq?Hc<#iuHP@[GC(<r2r_A#)mR20p78,%>ptgUkBsLFc]ZN*/8rN!,80;BY.MZ5e=LOBK?lqWksd\3&da#m+h5_pP),bm,%J'0M&peTrY0rXX@p#M_gt?ATI8/GGsG@NOqu"K%o[$<%C&2I+Z=?(kB6rD;kRsl=<Y"7[ikNmA6U`7=i7er::1Dd,Hm^mcJu!C,+E7*`pUXFpVPD["*<=>eJ'JfJOV4L>XZN:*1XDt;%Z*6g^CPd-,Y4iIuicrUub4b"j!e+*!J9Q,NR$?f=p6ura(iRHoU2^aTb-n9DE"t>F$EPsCHX0S37Q#1ZM\6UFohi[Tm0LTlEnW(.%>-lDZH;.M9$L,S\H-/#=6irCjJO,\??\@AJ[O/kOoq8c5^SN/gB:mBrN4&V&]$`ue(dac3O]#RdZ(@c6e0\R2[)`o,*O'H,N;IMk%Y9b<3O3#^4W2uY'Q+H,HDZt%BjmY_"SbR*!'0V5/VRNg]nBuhuTR5uKecgN8F(CI9/JKW<^n`"HYT*AgTu:!TI@$uMTX1P8DNs40%UhD'"ZpS)dK0#s;;k[kKc[;Qc&f1=3'OD7]V%k9"SI*fJ?=+flfM8l\ooitpnh&jq36PR)OL]\VmOnj)]r[=.m)Wb##Q^]VXrWXt%!'bM\8W93c0.6ma[_J**YCQ7uSl4&8I)f+V+)i)'aV"nWTGNiJ8H"??N#H?ka756t!,+Y14Ba,h"Wr\>r`]am^r$-d.DR"])AL:<%5SdQD+0=M::"ei?*<Z/2TSj;2O[>gJ]X7kDbp@DT:TTGX6*MDcNgG)Vn[/Rm7cHV4[.r>3R:S#)+seP$o.8j>2[#j?F0Fs5D#l4,%V+Z4m`SkP>I?nt7k;IdXHUa$@[nnK,jRZYhAe]CdG&1[&B"GlRk$:,_U?o"9[Q4XA6sa9Q@=NCf?\X,hQUs=<8Jo#/_k=&9TH->e%3hZ9H[]9'C)AT::^!Da%92em1o'6cLG\1^L2Da)qLTm-FHQk$RPlQYo)"g`\%g"a6(o':9UGR!.JoFA>eBb[T)1!2X"igf.nBaj;%2kUs)JU4Ih>00A-)2+7N3m(_oA%RHLX#57fcW%og$G"C)33l:p/0_"]&`$n"/gKc8>=BkK:uB5:;89nt;-cZ])-Jg@opKI(MoeA_%@lGg-aae&n>sP]Op1HA]cfmprb%h[*A+]HJ*]ee2>c2f4iV)@CZEEP4Iu0RhAW2HVTF[1&IgS1qfKJNk5X4I\UH$Xa`h$+Bs&Egh%6mNVVF5H-Zje9!W^"(lPj)diSG*X@m!6EmLP`p)i:+%i./?`R.0[_-amfH60HiiI(2ae;CGY>EdbP,N_Y4575SOaa-5I0q'N'9(V%#A$(#nZPY'K0]BoG>O(:/*f</k`I8Sg776u43)J(%AS^=gpVL/UElTX8$`fcOQ6b)=iA/G`FS3^lfkb5o4QiOht?kh%eD%W'I#E:%4^Wui6t=[o4=G]d4VAV8gl6@$FQ@gSZ@>Hp8<Jsm_WK<]jaT3#9k((9@\X?XRsOj?DWP_*oPfn/Om0Y.FSO2Q1N1`Kqj2u!(ojeV%&gStcX\?`5"5WCn9;N4]GE>d6oJ)I1:(:oaUOtS61RPVO#2SLB<$h-/1onsSLsdF',#O=qU-RXC9@S,b@11LD08s@8Jo17]D,8kg%ZP?>]moru:!eZp7!;,=[maK\_Qi%m.g%X2q$,sQ/@;[$lo5/67WcnFAI^?PA]Y4)`HS_`jm[%'=kf\5%r#!`ZP)9qj.VNQl1?3Z&%^C72%jCf`@<!_>%77X,uJ!YYu*3#h9M'E.]s(tdt2FR'p),KdgN83kmh<5g@9[r$>oP(igBYK=`,U+mX>b>poPVp()D-(G!4;6jA%MO+QBX$6*Cdf1J8`PY<25>#$7%&CS:1C9?7.>7aJ-0o1h\@3]L4YkE^ju,`)iP.a."-RU<8tK])G>[a?s$n?H/[%8-QfPAraXDTd%Cg?'ALu'g:Oi>MGhpJ)@Ec"td'Z+Wt7PeOR=&s40]+-#M<f#8M4s.qb;!(<A5GUpTh&qs)q1EJ`6'9a6Z_&<OJ0[l3%&*_pNG,Yn%!.rP-eOSW''X[ut[fT&A1bmql6hoGp4lN%SpRR>a2e!$>OSmH_d++D]],^bjWnW<LLaqt$0,@F0ac?L*8r9@.$/rhC87X+Lc>i[Y%/]2920gu^'O[-^CU>?;5P'8`#G.pa-7lV82(0e,8%&iUM8\C(e;@Z8+JaM+MJ-k\Nm)+"9U'0iB5c8n66&'2HGpst\A;I(E5<A(J%L2-!tI&g8#aXY6im1(JP<Bj;#`:.P336HjpCuOos'-iibPR!>5&:9EMbe(>EG`\9,C]9u]*='"thI-t=_t?#7:c,+!k7c/pNsC,f%qAEiWlXcA,Nj9oIPM\o!h;KVSHWWm;]GLb$*g)\Oa\\OnDJTi%.PN,h0;?TdKao;@rZ$-89ta#R0]fpKC8MQ27=5rcUa9M_G=AdR%HQ+Aka&K4S,a&I*5R4]pI(^]0`)D;:,HhCG@pX!M-/QO7IGh`fFj(!OZj9TkKh%'b614H71>??roA6(SF,@gWq5>=V5itOP/o^@&%Ij6F.N9EO8T1Ib(LsYr>;NB$na1RgK6t73mTM.?,B0C*7:u;4TSpjV>-CI@=?qr!gq1PLMK3SY)*.E35_PT"VmWN-`+H`f"TW5(<%m[7P/&1;]M^_2nCluf*j)]WT>KQociB,ru=`9\:BiTKfEO%?G_^LJe3TX2G67(,]=OV/;9_L#4qk3u.lc!sam.h_;f1iKS_f\dZc%_+m'\c7(f4X1CR7)4'fifZVs_4BBJ`.$\o!/N$IfpI<L+UAsuo+gKfuP'A7JH2KBWaBmB2)RY&O]1KV,p4s.n9*R&OB*Nf"K^jl:%[Sbsq4e#q&E!^89XMR^&e5uJ0)AoG7UrM?d3UJG`Tm1rIc99<*pj6X,o9F>VS8CoTrYg-j'JfD:Uo8.'[\,FdA#q/^RX.2pT-?d:%\>X7eh5q?;.k(X)(Bq"%UdJk?%(]?s.,9l4.;&_R'?dP4]WE`^Cqa/ZqMpIdBO#e"RX\\0=W75NRY]bCGsi*Fo50nT]O0NrP"TPp%Hm->kX<#W<,=kq?ZggM<^?lb9?VR82T<];D8nK*0`X+KVMu&<;dE.1H30Cnm=GY,A?nR!'80FHL)8'c<a'R+1e<&QP-0GqqXiZ5t%N&4&o5\F)7a'Kn"GGb,GQaKM]Cm[4]L4K3I]PIOk*WZp"o1C<rl&5X&jOcJGc^7UD">4,=aF!\)p[98)/PZur+=^_C&`k"?lTXX'%dbcFYPu8:C9+12M@VKHn5+6f@Khu8q^*?UE[j"sZXrJ(cm\B3AY>)(=rT1[n1E/FGA$;MXiR8-(CF0>>60keblQ6YGm3T2`*]^;3%<V`f/mbgU@p"T)%]SZNqB0V^@P[.bq![B)=nH`9Q8=O+1P/IU-lEeKb&18[q[i"BiSIA6MNps_.V3hMk^qBk(afZWM>obbVn?//J%<Q<oI6>,su[Hr>lVNgH[rdlfg;\@7p^:hjcN#pT+P%IZuf)c0.d7-r<2^3>'XlZ@IXt',Ja'O)/q6rd07>PM[I@GJ3Mo@5WUu`]'%ifWIls,'50DjR"p1/f\GlCj/-X/SV'PCgC;<^5VLZ/m3up%2GugLmpueT$mKU#soGk1csg_jS92BFN!=cNIRcd2#U)rTgYl'n?1P%hQVN#Ko)@?=X#Pa\o;X;(<Ke"2ldI!O2J-1TlZiLj`ai7f<Y)HNsI!7`F,Fsk7a1rDgN=GkInX*C;5,O=H!'%\_A",d/*H'T*o`.%oo"1:'.Mf`Vb884T6\Z,lr+EKRJHonB/h*`rjng$WS"X'`=`?45$^m[n5N%;H<)0Bo#C=M`^6KbfWX!le[[rOG$0Xf[N]=j("*SD%7>12>#s;'=d-o`5]?In"/n1eU0MCj5k\@..o]/erFOKThk%0?0F]Bo\>S`NV]3%pCq^<oS\pMqL=4E#FoRVkf\,`k1e/"&gq5R#.%m!D1O_nAA6jjrG?F5PX^\P6r6Geg&5g-e.dD1Et^=cfbZ%/tSh/Nt)4A0,fp"6uY%/R*i`Hi#^qXqT];G)u0BM;[(Kk4k=PHN:d+%.FOb$ZcmMHie4RdO\1O]'6\T5KQsk?n>rD[[0jD)GOl]XaR20QT*R;IBr,.qIu;_2o:8,6cOiWFqfA"u?eK2uLF<k2"R)(^O6U$`%4;=GeE>^1CYt$lGaB5U'4KTuq(^eh2i2jIP$#]-d\rHaqc^AdrU8)biB_sukW>XIVgfeGLUYJPY.6,-#Y4W]`c`$o5fi;c*:(SlV%$;WnennsRsC"g_(J.^,CBFkM2eH.h]iA;g9\TK6rnrcrd5C'4([+'ok!_:0B$pN,"\j+q``@.>C9/njjY/c4.C[eJ3oIL,#-&?uB%3;3#$6Xlnc[b$D(];JDKNND9-H0-o24ta[/6(F??f`cU;*RbpcaAGCPGD.cWL"fW('1_a\!L&L02!Ks!ZD2?K#R,2h56*UZ'bR&$%_BLh1-m30j<6N=[MkVP\T^&f6A%?4CPZkIQ'N^>9MT,*gI94YefQ(9HbuO/-ZFeDZiYk\)O(W;A;A='9>G=GRFSX+`frDK7PiEF6%$C*UMWklCW&I)_Vs#A!_%(Lrga?+if9gn:B8adnnAEDK\SN_1T\,K<SPV:q"9K8$oI1FP>Io=Yb"g8DqNM;gf>0CN<--9s%LL*_W%'Y::drHp*oc6.JGWXZmh.)_\,re_CR[4is[)dQGpG"-eXEFtG+ZmGHn$@92W-1?%>,a7!^$*#`BEq:SrcYh:bZl!T9R5l!>o2HiV%/:mYP+=aC2X2&24P/ib%^@bFLb&iF,UR#c$(@O]X#W>?elDmF10&G4P<UUOM\OntJ4\^Xu<7*\bdcfDNB'<*4o_2Y&p]45sn(g53%`9:u$$<Ud"IAc15-7t2+*cQXXmGG<oH0oRF%AH56?K=-L*hWhprV>&5gTua&V1InI$BO\h#Um,UTGKM@mFZ4=Gm^?d]0Ep]RD1$4%8tQ9&0Y<2sn%;k#*.og#cWQid*9o4W1,?V>W0+V:N+r?CMS1Pa@Le2-]<B>'1\k#_7EZ"*9<+OrS+BSeE8TeYH`OJRIm2eXCnmmF%M;BUaD0JFKo_?8`,B[mrWeY\up6)M#X6m(g%=1=uC?YEiI+L7G,Vg]_a1qWm1SYLIRTXX[C7"^c/*[W9OQJ0l(]N<5U7L"eA-1g;%\nf[AX4WPEiDEJW:]n6=::3681\GfRB4'KLO*M4`@W<1HG;L&heA2.V`[X!a&%IXUJt$n)Tn#>F4`FaQmO^N.ak-H&VGf74;$qtE%4gphOf<9*]lJaQ0DS6>AU@BS5OorC6<C(uA0G>&nCrBe$T.M<`s4:67e3)9Z*B5p-#]',T9ZfW4jkc0qL8kh;/XW-M:*_k_6pM.h%pmLqHq?P/7oF`5G16F.$'aiW]J/=hjC:A)\c*tK(Iodp@\irOPef9X2mB4Bi5X=hr'<bjg&7rorM6pQ,nK93"]/B".P`B;2T?PdD%9J7&S-187l@?b[!P((XW;(MEQMq9pLZOsJ&-TmZZ*Mp2uCuPSY>"IB4512"7hiQ'ncFR#kBjWYd8_SQpF!#G`Dl&UiKA(JkU5\h&%CNa@%;r6nqD[r=:5m';cmWL]A9n)skklc=pmc>obOY]aH]mQ'!gXpRs"%[oCq=QcV<@Y7_#T/$U`DjeJ?"7JW:"Z0TCq&oIKMe\:%V[a#ZdpJGteSqZOk&a,c.L[c\jIsTl)'GkVc)1P;A83S+NU&8P.24?^\(BuQ7o@Qp]J;g$bNGjnVTg(ckRK??b]Ua2G':aI81N@V%Z$+I9p0G(t?;<7C\%]1t!?f*?TW<O;2sd(ZHo*!nX#HEOI':A"/cD.4\p`M^6sUrc`kQ;4gM5r),L=j7Q3XKX@.>"n#pR'ec.4ob%7-j"2@#lbegKar(c$M\u5V"2==j;FDMEd_iBh*]W3j3W1U6Ni3DC_,=^`E3_lh*qF$`oWi+lb9I8RE]DL`G;-7n.tYs$+'ul!q(N%m3VW7ZEV'+&/bA3/J(q,!9iqZPP+FP]HA)oY#Ub<k'[uua[df]8#j$d"Qu3Iq7s,J8h`96Su+g]A$*CCm2"cfN^,'m7t4-'#B\F/%\)8\i3m^S:6:!4PBFV93rL$27fR3bU"@-g_P$=5BK2(#h$N$kTdL].D7(:@1'9Vnti:?pSEH^&.h+7J"bT'DXQ:>b8p4QiY*IAu]%9RUIsg"LBgCaBlaLE_O02AJnc2DL^KV3l2mAk26hROHk0#r]hP,)dG/&Xh.bCQ2@(/o3Br@C.V(O^k$/3E2ucVk[VWd^;6ka-esX%O[eRQ&I>f98^@ZIAL)2c&&W#cjZJ`nnL9u-/i_PoZr?TuG_uY`$"?:)(JnV/D'9iuB--hhq93[g3U[K"QY79lnF>EgYul_n?/.9f%dsJHOYQS7>U\Ag3QH]UVb[=;%Qb//,;&&1@(RAaA[>@cgGFMM39Dh.MR4UATTAoV_4[MIL3';knDFs1dbNu]ddCE[Qjt>9_FAmFL%ptZ]s*BG;4%@/JH$GStRJS\fg6dehnhh]6WS,Q7YLE=Mp=%K]o7nA'pKN$MJdeV$JmF#WoZQSX0#U/50N0.SkKS6nW4K[/mo4>kR%/,(q2M;#:k6f3gF(r4VOWg!!:Zdj5OBFFuHnUd"uauLV^L5u>)c?_CS5UPbS%ueb=DVJV]]?<7mo=DS+GFE?nQ`03AoYuo1),jY0%ATVJ*VM#a5cZA_,a6dk6D4s]p)U/@=2c8&Lqs@3uI[&4;ToH!'@c]*$k*s8rLJ?HWo-6O>opW,?RI9SU%?W>D6pO1fBu7Q]*R=H+%I>4`R;_O^A+gl8^kr"']?`A_p&alcq8sZHA??:MMCod*EaDLgU.r6qhFbS1%b$)qj6p`WuW01FuU;-PJn[Ju%:=P"#&Z^eN%:c5S%k9VGD0b*YU):KOo'!9+l(,G-L(^#HWG'nQtQU\Ih8,SmXO(uTO%n56@p_c45I;Sc[>7VKd6W?4LjSpjdJngn3?Aa!tcrCZVYA:-o%IVY7G/#C"u2g9-EB"?NRWt[t(>NM4FUH"(@KPd,6#s@s`8kS9hAc#F2f)VDX'1q`B-N$2%<:jBHf>dXK9$pS.9<W,TlH=(q':D2f%H#IeJea0Z'80'bPceGS]=oN^GRtid-YDP0YE89cj5W31>hJ%h]*mXQ+JdanPeFlR)3*N@dCpg09\2<r%$_G;RGCA.SRbh]/<L)f1%oY@CR"7XFho"E4qpPttR\d*,[3E5iURqioe^,pc?n1JR<\GmclnCpq;mB^DF9Z*-u%W+@1%PYI4E@;JNG%Ws]HgXRJ>k92pk8:Kt%j#jM+Ms`mGm@bW13l\L[*d("uDjZA&j2tfINHKOY7h54*T0`Fh<g"uRpW:#T(3#a5Gk$fh#)hSnkP>/fs,kD=WlbO$Ln&.:m8[?B%p4>'fao(^[`eTbFSfBX9U6`=W#r_DROe6"PW'su)ar/]BrVaF:(#VYE-96;<o;r/3U[&?##JGAlm]L"p8-93hNC:G2R9=EFZft.B%7QdRgR[.j8gQp.%<,Qk01:Ya'Sm@go6i\Qr@XjCX:hOD&E*8Dgd+_7B7#nWk<;?;Z^GNN%m;#+Dq[#,COijaQ47[pYRA(2%c@[d4%W;_B3Gg^,[$_Dk63o68,]l]u]kAbIsSpS`3b%]p!_?t]-R-Z5\q?lHjO,4FG*Y="8>o="N<<Q1iI$FX#\84m1-1kp1kmAKHIZWSW%Bqpq,o!YXEdM7h^<\I<6M#t6<o?4Xrq;BcV,?AE3`r6)AANIjIGruG+Dj"4)-ATDqWd1;?)!0.XKF/B+r`<-q/V&1D[C,=3LO*28%rBeL;WQaPC'U8LE;n.fh&Y,hIjA2>k_YtE7UMo3]bPgU1dCrVkhbcuHCp_R0%aSZm1p@8ja@U[2:P*l#Q%X?4e[8Yl;SrG(OhAtd%9'9C%aKSTjK89`)0I0/n%UXj]hIl&&C(5E.H1E>cXm5nO%fPm9/,Rq*A?/dHk?,:XJS$(YbG??"d5rHL\QcH0HJMKp@bq9Xjm/I+%L(,,-$K1hV-t46%2+I;N0#-5VQeK!4IhM`#dAK.,;4B@VhqfojoG3&PV$[8<]lt!j(Qm&dZ!Wpp:4(4^;>+JCOO'1e:EQp>f"ij2%BZi_Gq1'Zel(+qFBoQCq8cBt</VF\c+rTO14.q#ERh;n^ns(S7e8pNVZb<NJB+B"LRM!kI7&H9a]/Z4l4)E6*rSQ^_&'f*sqFY<_%Gs9=iO`e,FWGS=*l7KrVlQ!=gf@?.8knMUUC*A.okYY5+3oXnVH1Z$+2f1(A#K@_MfN';P1>LY__N,pZfb)m#p(Km&eYFFDA%TWs%eD7pSXFr%2lr5?9BmgW=%kr;ImidnUoK_IeIAQiH1ES2hD\h0,8".O@OIceZ@t\&dG/YF7[^=+?&-<U&Y!cVq`=Ys#pCgf0;@.*W%I,47JXJTVC?^pqKL;e+M9UuC6ZhE:;02:B,Qf^JR/SUI%]uSW3Q@cX/5-m)YD*[gh\X2MddW[/FK]pCu@@O=\RRp>6SmML+[-C[Z%Ya&_<i6\1'@Ji=7&%a8OM/rHcVCAfs#QHDQ@P?hM)<ioQ$N6j'A.1#l1`VH6I'/MMAIRn=j]sV5P!$]G(\-9DKIojD?$#iiI&a[C%LdJC&%'[(uKh'rUFDMdiS!o_>prBK+>G96PG4;nL\5\:?!B+T^U"]&/3^gpG/3FJegQ.?>\TPcPqZoL,STC=6>:Yog2q&&1n/+p<%2!R,N$e/r\2:B,7RZrd1@=NFsj?6_o!t%`:kJ<S2l_tD?0-Vp9jeH"qfX2M]kfCaU9D;hsi["BaqgQQRpAEj?Y_PI?=^WQ$"'EXr%-FDRr1q*/OiUAOPSm>^gZ:Bl_nO;:13XTYVIO>&d=.N+CJ:F::VaF<!r$IM5HlYAh,k/D03s`'I&FCHkrPU'^%"\2UkCh?D6pVf3%g4V,%beWWjQ,K(sX013mFhEH>5BWFk_YEU6Z&gugQI`67`%C-)nn#H41fnZ^-LS<`n/VZBHoNDFZWKZt1,>TB?l)IGi]LQunS8j,%JOTA:GMo$):ZUY3dlC_%L&D`DB-tAgTVY..bFMKD!lbstOfhVZ\X,o[8>a8"/Pm[Ldp5,ui59Aqoj\okBfK,nlL+@lj?!%[SbLSf%JFtgn[m&s%*jaOVh!\`N-S>k_?CrpKj;Qf$Y]u^=c%=EP:CD8"q8:)7p2"-KOs?En,O*.-ah#$DABsq4cK<T>7k_:=PEP_[\$%lA%h)tS*+SNh0R?X@0IuW)@3tZH:i@=[6?D<QFQV9cW^=PADOOR]J.nnB6P]lR\[G6:,>m:#lm]5#S,(mm!TdpSG3Sg)i@:teD5'WOK%qiN_;osuI7PNWq9Un0I5UGnp]hK;T6p<&==r>DP.1,YOcj0S>?o#][&D1Q("I^-4rP:K1(NFee.AYmD9p:OC`mEP(B1]7PcO2H.)%LrRk/mdTH-%3m1.<Umg+b&9Ec0%nmJ]u*m\9b5?/$ZE(:Fm#6!i*uu3T+1Hf+^'r7gKtQYmYUS6RR]c@p.P%(r?_sYdbM_*'S#oH%5hk^f\`E&V;;EmBLbCAJ<FsLcIVmF1Cr"-opH1YNVd3YY&7no^kdr?t63:*'89cdpi4!o>e"*ZLN'c3dkkUA8j$]9.d>SiKX28/e%=\XCO@;n;8hn*<cVEg\Y=0De,*>8[W]je/uWB?J)__#Oc,/F7b[5'URSN_ksj6tSJn-G5j1cG6[^f,qYqs['+D4lSA4cu3AU*G0i%f]?\i2bl0bHi7EsppP)f3]rT<"\!1E]&0n!+Q&1l\BQ;mbfh+O%G_pmkIO\AS$T[Gm?f$_YOcNC_HI`)Zq&i[k+B3dlYBUefh9\_%0X"Lr)Q!XRX0lA'M!A]jTtZOYYAYkso*WS39u^p8rkf=#L!P6Bfmn.>"5H.T[NaG=2ZuPCVmpJn@@Pa3*M1*Ul';7t+oEkTY_eDl%lJQGWqX;*'JY'`I-&4b]5<m4q8%MXPjZiQbF&n*mhI.Zj0<D^J.R8*FOEmU\2J4Fh?QsD9o.QNnQL!O+^UPEi[2#),@%Ym:=+#T)%Ire?kg,@;(OIr!Gj/B9KCV+p4d='2/X##]8o%),mU\>hAq>TG9T4P+j[oV/S@m1nC;&*)D:@%bOC;AEYN<hR/Se(;-47VJnSe-XG%eWH!_XnF(RnK)RdT(tEgH5BM"g/6&RR7%U+!B`[XT>+5YRq86CA'F("5E^etZ]##,!j.8iD]_rRc^j@7Ne^#kF.7'!:Bk*$ZKLoN%Ij_gCF$g1`q1VA.U?<7S'S^^ah>Lc^22bur>6nV7Mb7O0hM>27mnA/j([kA!2N8tUS([)J7YKU\\'31M<(>/9;W8G[G9hNc>P"jK%1%^jT"%+ZA*mmf'M;m*VlcuRA)oiVqH*W7=h1D21,^\1@iq]o"Ze/Z]-'Fi$OlP*ORI2rgE'SD]A(CZ`O>mM'E*HPWd(f;t7ZU`N%KMN3m&4Ya7qJ#$`7]1[s)u*K/PGq#Vrc53__04Ac$r&hu;Oqj316;0OP%CG_G]OdO3"RcHgRge<QhEl>lm6&LUsjhFS:4SJ5u\Xp%6R&`6TBi#0M.?Xula<.]JO6!@^.l7p@*ea.M4c063jRu]?5oWLEi&>Uf?(fseb/b+_54I,?JuE[IE5d'5$QGo9"39*+:,=r35d_+%>CK<-QKS+g[b_NSJdZ`(^tXPQ1d1:3T.%t?1KM4:Ehou>EEA]saJD$OSS4me`b[::q=_;!3EDSo:K6J:&aMUS'i0#t8n&DFZT9mL%UZP>$T8m'pm=g[oLfc2Q8&8l.-`6HKJ*dU=<j*>-.Za:S]G2$.)^:`9s/sQG$1EINZ"F]rA.K^m9m`A`.J-o5f&fZ8([HrF#EdLB%mo$P?&i%/5b[co_eFH/HT_kjOm(^mhVZtaP1gjreV;XCG+pU\B!p*/-cDut6W1e0bC76OY2:s\A-M(*Tr7SqHCfdaC!#"Y62\dj%%:mcKBi*C)lM4n#BX4]aV@I]3GBYIJBW.[Z4TFc2_0_kJ^]ZS3";>iY?BIetP03Pl@M:s;5'&4Dc'1J(^5Sqij)tYmUU)O#P$rAYb%\t?kIF,7$H)(`H!>pF!UlChK2EPr/b^*NVB,3]qXk3:,ccBDh?0u##1B?PGKDi"VrN2mYaJjb4+HE;Koi`4Q^g/d`r1LqbphXT(R%9Tf#fSC"n5^77Vi9LVX3Z.>#[YpL!re3Cn_#_kiYlMJCqm.0s:@;?M&+(7j@#S'7gg4m%GeSu_sJ^PqZ#"4]Od+.4$8a>$+m;?o_%8`Gj7S5GTTk7$j7!-;E:pNpr"F-cB#.mFuhrdZO=AeVY$@\lt0#C*F2Ym"CjfoU8^QUfl,%JT]3KmJq19G*&KZ5PN'FmbH=Ka\d!%&uJ(n;M)8"!gp\H<&R,jm90@-*o0.H%C>jf.rmrcV-ampf;mG+Pq,1s50!I.XDXj[Cj_RrKS$fQWn6=WH$[fD8&Ssp709:\6$EoP%%HW!:3jp<_%1GZ,ch^*<b\/RooI7W4KDcfIBd0;ro-=4&IoTbuoE=ICfRQiG3.*n.\QT<EShW(]fW0l654C:F%pXb@MfYX(,:/i.%Om2I`C7t=W8bGW=2BJ,(cSIrl@X%Y^m,-[781IOi"?*ID(6.*nIU-#b,%GC+.?:$2Q5Rqd+MHo(Wa%HO*/d':q`HVppub&l/Zc7X%:6Kf;i,OM"mIl-@SrUCpoBm/goM_\APE3*Vb()AWSW5\9'8^3Emn9-[<Z)HUr%h6j7RUl`kI>Gu:'Ja%;R4?s9/A%d,"0@L\#i;+%gqn;^c]h^`pu46G`b0%\RR7X34e#k;oc,QJVq9bVUZKSaSW,0Qen*8"QQOLmQMPGs#FW0I;3M%._klnVZbNg\Cb(JO9\VGP;r6l4%*Sb"%CKA\WAiWOEWmn3m^hMm&;iK58m1HC4<jOSZDpg$rl>E#$9153hOjpj[:V!LG8i4UMU:d\e+t%a(Dj_Z_P'Ih2R&IDL9Pd^Q%@>Ul1K$OK[h5>]"Q;=)6;'D!B"JR*$T8F@g\;)9YSs#U>k5^qHgRt[+?BrQD(<Z(i>=b@#WiSX!,/+Z`P6)5V\5WQA7$YCA,7?j_%1N>f);Mr/iOLXBhn/E<[\\tVn?e$+;pUTb"dYUAd$1>HI_l\AqmD[@KihY0=/Mm*D[SRM_hrgku!Pf/9/Wh]C:GisV1\De5VmXCR%^h@"BJaA+u>Li#Y4EE.YTcRT)Of';3XtdJ2+e\60M^4\6W=X7]A?^&Tr6G]%V1&4$9_$u;ld6t><o4FY\SUEc3>#QY.&Cqg#H(^9%N*.YMh[B@!\\=*QC06VaCp&NH><%Xjj:Md94lsj&';+:EVAbJE:(k<@?o>,J7b('4`1HI?ftR?:E/-IRjV+<rUllX\+UI&V5L5Q.%hu4ni'<.U;.soH^RU4VH+'+s^r1)*"#5`OjlHDQI<l$u,*rr]M#h%$t5hnlUBDZ-9e![E)m3o#nC12@TLh@p'OM3+1i=h:i.PIGs%lWb,1PZ,Hp0))C'EA`i7.LL9WZAEEg0e0?>Gc+qP<J@/%2p2TG-((H=L2R74bR`,XJ-0pV;tk^,rq/Hg<=M.;Z>QTf:+O#_p/Ke)%aK3+odpPs'V"K<k`p"b?[`)3E7tD<A5)2oeUUOMBPi<jp.f<JA'Y(V:fD"9_Ye2JLY0i9foFt@dT5%C#Bm+UT),J@AC,*O`Z7`4I%,%D"H/D[Tn]URt&AR%OKGEgO)W;X*`I-]\t7_e4\QSr4@RNa\5@KG9u\/T'FIh3/V>Q7_V"tLBETTW!Ni)hH)$<%G-8tF=3;>(+d%l$mf8Lqs22M%L2pG+ItJ^ZFUe01%<["eM5&f7dNQL-H8anG>TTIZkKYTi)o`E$gYX\>tr8/4p/8oR,qm8XtJSjlLgH,+D6O&M7Vs%hC<[%\*+0F$7IO[fA6igObWWgTbh*gf\)q55pV:5n9UU'UUYD/A.e6"WP`U>`'3@KqEaArfC,[3N)CE4^Q=:n<Bm@%doT\sW1`"(%`m3sbdI]=@YpOdpf:UqW5S`[2$H3ps"Naq5/fDMl+_4dOSr)6*ci<ob`C-R4#!`CeX:"(^I/#Ef$ArXT0-`L?g("9_NgV$=]?9!.%dO(dmS'3q,$7Ss_M)"&_.ZLP+m_M:3ja"ehro`VI[Qjf8J,R^nnXk<fqu?3LJ,b!X1&guucVjXn-!7_XO'+remaUjY);r)<rDtpg%8qp\/<V)[`q"PnUS_]?5QtjAN"h]?\bl@')rh'5XO7ka15QBAB2no7DrnRM>YQ+Lgs6G_q]p&Kkj58\]^\^e+]T7Pd\,Z;arq2c\%^OQ0j5Ft+>bC$buk)L'[\Yo9e(@I'X>0jAn?J!GG&)pf`nULJ!2Y`lQjZ(p`!IJXrY+j?5,k<`In#ns3Q"7'glJu5p]npht4]1r?%jB.!5rC9W9B.eMDk:Kc74QGbM(@u=5$;T[462V0Y-Sh3il"57.&he9l-.j_[@#>0/Mg;L\Xe9d<NPT:CmR*C'HF1\d\_H]o'1kcZ%#hVlr2$_XT5U=/BStDCFqgKTC]M;F_<%k:Ji"a<.Y^qh9c8jdk$F!D>8MBZHn6sm*d7m^O!U[C3`sj6L1FX=jAX8-?Mn2^RB+XVX%/\pb47!=!W.3)H\5MB(T+r2K0@ijun[)u;tpKLtgHP7oK=:;)I:eJ+F<7qC6LN:*?'I'G240`GaGK#)5EL!BZ@uF/L=&/<Y?E'fG%d?_1FaGC!M'*'^"-$AL5>\/-ug\X1T*en1-3kT-^%q3K.SU">/$61[[_@@3l(KOl/FH8CYiUs=`9RTZ.,P<aU83.E*'d[nh9"b=`%j(q4ekpdP-r:*TtP1IQtH26YNBa?E?I0Wad<PEHCq3&CiQG?L^^o5`#D3-ti8OF?D<fqbk*^sju>s&4GH9>778u/IU'AqUs$[qZ[%qb^h0+sZ@A"0O-0r$/Z,?/Ml!0?kkuLq^iM"T'7n"D*"<'HiWBq@pl0!pY:j:7leP4TKk@S'LI9RJ_MupBE?h$&M'nLPVTrY:7h6%),Kn':Znp>br2;s(3t!%M+$-?N;([eoli'JmH`$Y5%3)^\]UKX<NrD>iG-_mKm+K]k3[^G&h30]3B22oc2O<`O.iT]-60Due4rDo%E82K_OAkNRWc%Hc+r4,oh!`0lWpJhgC1/ttr^rGl[-7RSP1Ufe[$'oH<+=VLq(g*L*8/("EE?0IR^J[Fh8a:Lcsg9JAaTG)Kp4OY%Z%YZS0(3ndF4HT)3gI/MEneO(Mb"8lqa`;6;$$e-CJ&TGW(lJ8+8&SZ9;u*d)YfeF7cd67WjTD2`Ra+8QG_UN&ClIe0W=nHoM=o,%4J.2jBMoj!f"HfVA>te1mt!*Vj:sof$?a0lI\a6%L&-[(#Bh*m]6>@5kH!Z53A3p#8a^aBLtQFiklt6Zf0-JY&C*uJ9aUf\=cT9u%`S_qp.Ys?Uc\a8IZf7;`!S/E3;,lq7VV84m!/S#J%_ouL[OX7c?!i8i#_e'e]Rm*`WNgIiOr6_3rVM":<@hTW-GlY$7Btl_W>;^R%e,'D,UIZWJU;R:m"[G,F^ZV$t(,'HO6L@"%&RotZ&&a&khP>McHB]I?ar+ueemue=Xiu3!=8]=irmpeN5.L?dKgb8;LSe/+T)+f[%8U*.`-bGBIm<X\!O`hI*$k?%AMTDf<LA-m(.RIR$p-ZHKk8*0kX=O0Q7Oe0_6VPF$Lr`LqD"D(5*SlU]A2.5/GdN!m:sXrnNt$g+%Z'@p4KdpQGAQW>qRJ.CdPXmIuP;[pO[1mr(b[NY$q,\7R&UN8]p2DmqlZU`=2W(6j2&p-(@cc!q4[otWK:;8\1bg4U;G^FuJ4?,,%K,V*r"29TL:_2g#`*SqA,I()gI@KFSfPkdV:pdfTRNH^T;%f&P$.rT*Fs<Dc7kq<_BQ\Ub#b;^Q`(t1A]'kM1_OiTmerDK_6=Q"k%=^l4HUaep,m^&O:!'i'fTD9Nj;mWm`\!/GkN[Yja*;2Md2TK@s'"\cR2c;,[=:?X8CcC53N":CN$AT6XHUK5V8KC[8PDEA(/q6iC%0gRY9X>baRF\@Z!JgG/O\kcERFdN!d:(f)-+Uop&1RE#k!PF@^COLPN&rJH@,hOU``R!KfERB]5o.B@`Smp[d"5<Gt'%Di$Do;$7%jS_op<2/YHejF%Y0,5t]:Lsn_&1G<HE>^/"@P1/LF?>Dk!A/UJ9DHZak.iMqq:$`YjMa_TZ=@,*^cjXDO%b["nU$D)mC*rN\L:Xe%#52MJB;FnJ:UR"+l!p;&RR6<g*L9NtVRu7HYAJOej2&>tO.pHjn'&30hc:$H>@)2Qf3\jT9LaAKm,e)c$bO<R0@OB>fp8=-FJL7t%bPq\,h>E0o^0X3^)ds*.]6.N"#[A8*]o<XP$=&17[3]h6FHHo.0B&:M7:VCI5t%,,Mp!Jae*U!)L-'Znm=Q=JUH<t4\cbMA$108g%=Te?Y-MNXL)>TF5(tcJiV;dqf3Mo2@F:ii5<*<TrNN-a,LS'AHoMkHU2C%)'>GNoY.q]oOFKFNC>sG`+%--qUT(rKWdn]ijfh,Q.%[LCQ^`O(&N"0"E@i>HbK>@iaXMfu3m%PNIJe<K+Yq3oN>8'0(79Aah^Nr;VU*^QUuE_$F'$)<7nUVN@7Yf>uRK`-,Or!do44YIAY%9/n'2<^dISp0`rsM5A+cQ(9sL^_V'D84P^OSJM,#Ec((_3AJK_]p2t_r)@f5;/Gd`$VT>#k=97.R')-fe6CgA,2ONae?ee.q<aWj%aN8a3h*H#*F:\<2[]2Nr%S;E:%?8qqCRS.o>id\E(Z:I%dbe.ZH$]qWo]0_X1D7#tcJlL'E))5k>X];mXD%sb[kltU\CL#dY(T=t%j=qYar@U5&VHIXmmk-raG*e:a0?k[%RmIe&lhc)uK]9E*4kN`5%8ln`pRG!NoK5<X:(jG5ROT%DE_#7iJk/cm5MPVR`]bUXAY2RZ%gJs,=lj4nYFbRb"J=.30L+_-2;"UB_HDW)hh>&i=%FYsa.2"231J'+mU9!o-fXDo1^d_*9obQ+^!(`6@OZFO\WbW6rHh^uq3C.'7%nQaUVjg/9S_nG`7od*;ZICbebQ.Rs_4o*XRBN1,'Q^&YtEt<3'?aWeRdJK4WbVFH@EnJ\,7<OTtn)0q@W%fRR41*hAp"\`/(;tAq%*LMY2VQJ'e#[I(TO8K&NMZVV0LlN9c%n!"+;oa88a60G+`Do1iLe&\OMp6fPi^]9g;$-?PMtJptKU(rA&W2Vs2(a>:qSCVNd<W5h%6%0=Y5`>VbUVqpJoXU(496X"(pj"hma-;MBpm@'ZBWC6tlg1iDn#q.V_hhhXl`&PMN1-qHGiSl5Ul2]XV&D$^QY300%%_:gm]u1q%ink?rnp_"EH`p.SelCFB&oWT:%imgQ+;dkR+$dVb(hO]@R8;Rij>&&-Qf;ODagMI\L>[JjBBts;Gq%iJC2V#?[YDk0[o_Y(PKku3%/]_(5X5fJXm/SVf2k@N"7,B#/<^dt[7;@bG;W^Mha(P$:hb@_TD6Ha?&3tUa/rh/]@Y%5p;cL>q.Odd(Q]Y?2In@u[jf)!APj:ZD%Ae.TM+H^98oik,Ze$hl$pV',H'-XQuLk(jrc'7&qVD'4Ik0QGFa"P:*[Vi2Z+k$e'pb<<l'D5$\>hY+jr`$gnQEbGZZ0sYme]GhM%86d!>1f6'fXB<g1'iXfNkK!-:'Iq9D1Iad>D3+uZJdi07,Q:Q3:9SC>a`gJ?9)k`ZbHP,C)WjnRPe5uo1LVIFX@KhLEIN)N,7T>V%lFo%i_ZpMt?R#muIERNK$]"?3MeR+Y_Wp."lnpoi*taoZd'V\$lqY$s#"pI`769f2&R#1gag8]U/2%L3I`,3A`(EMFPW]WQ1p>U$%m$Zuf8;([,$_0a*KB^0e/dLm3cV*,.<>(/TmQ#!ljJbYMB,fAnTMdYgc@*D^:bg,E`hh"^Y)nWBo(nY1!aZJ/AZm)V&HqgC[@V@&%/BE!sp!so/+_0+<^4'db#uI=='Fpic7e<e49?DNiRj*VP?3qPh6b+]#JcJi5j<:8@oIGt(CN+'mTd5ZZWl(JAKaW_GCA&dqlK8fj%,7s;pf*`]WJ^-Oa&HAQ.J:SWe:cR.?H]9(V7$+_]DXIeT;[*KY[)^In@WSZ/C]S0S4d9EZ;C5T`ra",l[cD"cEfO#7?j')tQ2uPV%(D9=r'-d=U:qq_tCs@Y-L"8&3r\7mLqhc=BJbQJjfejUF*Tp%Mat1jrJ?&HOIqO^&8j*8-4@US75UT0*rI0r/c^?\3YTiHC'(m9/%'4l+DCIB6,5Oo/\3(bg`\jCX"iqrqA69Hc7L)OJC4GOZpl!49Hq+`%B[F[QkPWe;DUcn65-K`NcA@I<)Vm#_n;&$c*T?8s.C6+N5%a?g"O$)F2:8%YBsn@V?&:ps)Sq,Qi7>8neY3]DgCA'-!arYGj:-H9H1qZ9e9O_dC^AORd\-i-[WO^Tk>$50NSkGEUPIgB_i+2GI0%`GD/[8_!K&Z;%\U%E"c.8rL]>j;N)gr#-Hn5LSCI3HF+,<bT\hV*)#lMSLoRXntEkbH&MgZ<=SR"UDhOpi8^SEYu@1egEoaq>nn.%c%ndhO@eJO:e]F[p)/_kck(G$rs:XL8ZY^BP?M,fSm$%Hcd`"<Dqq,YA<GS`&0Qit'eC%D@f8RO6N64Y9EdEn"+k./q<PanJ%(UR%/t!2%B-La8PBZ_B2^1?n[g?+E066@YB";"#V!"u$>%LS*&l*fZ2uSQK^8o2o.a-K5>/]JLa(5\<!EE%+6COsi9Z.i'&M$^a`daT&%1W&<$<d<pT4&-uh3c;ao[kh-(%k6Q_I@q(l<J!M?NJmS'-H+@;NbePjjP?6:qc/Ech*%s&jV4Wf[bi3(6W:#0I8t)gU!-W`mESrg%j9GY%k1(g2?Xc_N_O:"N'H.]8!3gAdS.=(iNT<6hY$nZ+G$2S;0g^e%=M7?'*15CYgPYUS)kP%hA$r?_U5TNnkG$oAouT'KVN&.d%B%B23r]L?JodVki7ZP:a++$^M[&>fSG@MhPh)Z[MBQJ)?Vf)<N[FSb)U*tOd74BR-*id]ki!)S91dVi<DL!Ri)WHE46g>5N#<p;^%ZW4!?8Gr[.S%ikJ*%98u^P_AR,@LuHo?/9dlW0C2?sAXo2#e3!ZG(]Xqh,Z/b=*IkdqIjr:@eh]1@N$jH91?OQpZ\ZGTPhZWT-/A%p)KG*j5p);bfDl,O[c.dr.ld/GqI[k4CC#@.@=Y;RE"9o($Fb:[NVi%j;\t?O&a31'tZiN!F8VQ.m#Gk8.P:tc\snS$N0YI%e1El%?8U5M:AAGH]=]JKj"*,m,3P6c2cdC-qN%4`'OFA&`OB+&o@H.DjY)VRHX=s+lF`0.Z$:jES^@;^CEO:Q5kS\h+a+.>\k6D$Llg0Z%XaC%Fp.ARgDh9Zn@]=IoU="i8:'OeH0i=]1dfF*(qu$aCcbrS-&uu!qD)H$b+iRfa?2g@<?3Tn'KL)/4A[%.Pi<r_o$]Ss;EI(14%g$2Fk$fLUje9,*XG;V/=[5k1:Gs,5`^,:$W6"]n<4O$FQkPH:R$\h'jdh0nYpXEt^fh2`C]$pSaCJIAO6D6epQc*0+%q=0?p^^V>%IN!>e")#Vp.4pAG\Be9lkg;]WrSENIQkS6J4'-\g"@-GDLc6RI*KZHX,S-Vk7'Gs3)A)AWl,e($$D7JiZ'/3kR>jl>`.7_Dn19[&%FK@dg<8jq=Wd!!+":F9R@h"Nd5``eJqD+n?$*fJfVA)&JU2KPO[c$S5:ql^fG=G05o'S#AS\(N9lUlfWcTC];Fd&H)4r(Bq@YVur%_7O'.0gaH@fPK`<%-MM!Bu4uMnr\n++_"H9jT)%NV'FHfM&&Y2A!9`)!\1Sj">eGcZk>eo_.t%aRZEO>hmYTiCYJGgI*/4@s"L1N%H[l&"]6ga5X.tucj?UjEpnl[qg%'ntP^L(Z(tl=BdIgZ=(h\(`+cW'%SNVk>6T:eVJMY%^H-PBE+`<W3VE%6Q*+k#>^R`,bdcuth%q$^GeO3,k,3_%EPdTBX3!P]*/M$SA@HZm=BMb9B<Sn6=[98?%QE,$]Y!R%Nc2cJ+Nh#GSso?9<DO&k+O?,[eB9A3=V)dRIT/DH@4%'X8[3*%k^C'ml2J)ZQ2;cZK\BGK,b"k!j#Io+-+_`_iIZK$rp2%2_Mq.Y`'ND-]c`6l`r@bH"V78k_mbl668iH]n&N!gXJu12D6F%MUAagEf6'L2I#R;_l72p:qIS[mC5bIqj(q,3=>_SOB/c.nMP)M18h2PK;fF,;,E:(+7?DRW!CrF^rbp9R0\K^9nPMlD[VkK6pW\E%mg$nH4o$QOE66j$ODXgT]nY+'OeZ9K(O`]4o%B_#pT=EmQ\PIW/_[j-p)]^IQC5HU%YUBe.1<R(9A%#EdEUR?;ZU9aN1Ol)l;>C_%T7D\/Br%B.pdk:BD,Y]<$89=:InK0;b7*4hHlSIA]W&RqSa?^ZQ]=._Zs[m\;KaOOb"@T$CVi2#D?[K6+7^[KeWJRKOc4Tq`uIp\%2$U-.*/LX08A,,!HiN4J2kNoHN9,<]`,E5flZhU.qu/PcE]L!<<\bPLRPlA\J]J:_6Nu<CMRW#?Z0BY`X$INXgO0h@qCH,!I5Aom%e_B(kZ%-fUc&[FnmIn-JN8r5$GdL.H[:nd0lm^I$^Sb>2EJC[#SH'k"Paj>.=[3j/cg)ME#_eTiJW`/FVpP0kQ"j#=7u9fY\mrdP%1s7cDF-coE=rY%&'V6%NVu*JSoQmiCl\Rb"]n&^(#^]>4\#Ud\NS+6&<j,lZmK.!h-;!dRPiUOSX*(2'_`9-K.pedLCJgH]6aZNd%q^uHVI$+C+,U%]iC8;3=Jc3]2GUP@S`jpM4eg*od\I5_$ZccBN>pVS!K+i1%bC@kWQ[?#C'OMo>\=CUm8_B'7H>G@l7q?e/Tm9t,%)N[IEX;tMn!m3&t,<rKAES=&/?-$%L"nZB@k#.8jEG=,iDIee%GCu$fp#?]addG67\YEXqdei?n't7N2IL/K$Vqu&#mR2)BePd__%RhFnrOC;rF6#54mV3dj)T96"HhPd:S41X_+CdC1k.>5UQ4'm!Q&3IhB3OA"8WTNMqkL2P9)<lhsO#B5oKd7Wh9X;92L!;g93NMkb%[GTX?#BBTXnL0ZG<JMqj-na42:YB4Jj1\X+02VKAQ2S*<Nn7ZnBR0@MnK&1j'@.AX+2el:d5uq^pK7=I#1bT#4Ke6$OeHnk`J?$<%b`OIB+3@E+5$:=m'W.$6rY6dBEO=Nqr5IV2[QDS(-p/\oS@pK#P%%4a.Ef8t8o2*+STUT&Sa@7?k],G_*$_1_1("fgo1&_X0fdR!%^[AZ8[mh"=Y-!^RkB0hS;XYFn/2Ttu,jgN3\pbGbC1P2UZBp.-S<=6+Tgg4"o@?X=kEcjPoVXac7C@d1DBBU5+saHg23'j^a7:T?%*W!iIam(>#EQSsQ<,VA;Rq\X.Z(q\.g/cb5GQTSW9$QnYY3l0/]X]f9`*Ye:\oOMS<I(+N$5faS&oID@m",5<ZrQ"@Pi+1p`Q!'^%qSE(-<7a@ZCj?BQiZA2^)VJ>oX%Q4!54sB3g)n(8/*X2[pogi`9@#IE7(2hW.;p[b&$?(f*4?jQA%;u!_P8Ic-E.?kADPrm]D!\o%M^m%r`d68`_F',=48]kunTY:%`d".;1<lbYI%6DGEW$d;`#6qG1J=Znam8<tRSknP0@I;[Wj4;c[e)s9cp&gJ&>2Ve_"Z9dcq=7-%V5)2'JYVRS$gJ>F&O1:<iu,CIrPm_R5i*ME7O]C%bP$7o^%"f&'\0;VCU#1eO'0BMK+NoqbmP_um*Ic<.Se9-G@nm1-p3SIo$CD]%mJ\:CRYNmehi;GsrM_$c!MHIIXE1h#KV#lRmPlR!W\PWh,bdh(W@hkaPLJUjW1*C,(%rlD,$(LNne:7fPR=AqbD]I:iqZQ6Or9[a%D&kV`?REW)3iG9<8thZ36p^L13V.^"K6gTR[.PQClJmoNO#K^#'^hU1SNU'#*Q5hI\kr&&k,UbtVoit@@)**1^A"Y6Q<h*^YS?Qs%j0a8U6fPpIe32?[nB;i1h)N087s/6;X2Ye>*WVi(WfePN*"N2j^@kffh+&req)E+QL[W6J?%LRj,N[?66-B;CF3u:7*#=2q6(1Jo%q$+B@l8ESPPN/[+VHP=%5#8FOiYb^'<$HBXmX*/Im$@lY%]6u>G$rT/r+]H>:`d=2/rMOH77TD.71g8pX$Z^M"t%S\8Ed4`CjPQe%C@iQf569Z^hZABm]r+5#^=FcG(cf#XWZUplHgngf2I!WlAcSpiB89IO&N(Gs...TYV,rH$cK[;bd_$?;BXL-t\gB=YlRlE+J_9s]%Wl\P:31A$:,IF`V[C'6[=[;RE"gl,ZK'pA%rf-2t'ptRfqY\%s_409RdVZOh./GM>+Sd+)U!)5fF!mP"jT\F'7.LA1G@A&Z)^cbU%^),NScA4uuG3R/A,7&SeGN=)#>6#`$"d^I,'5]6?'S-?bR&4cmZi#XM5:.o^,Tkm(\rGKF5r@#^^_5'?8;LF2Sj#T?mC=VLC.,5j%pja`T(EX77]W-?m'7Ajo=ZY+&ZId]t@n"DS(>q]+R8eo'rkVNs8u$+#H/f?RUS*5CUU!nfqCD`.7&"08Y5CthL3+sBWtu(6"V.\5%^g5laf_5_6W:f)XS;e5"M>=mD7b[<=8fg.:g/^Gp[kq)#N6,h-ZlQYONKd=9HK/S"Q+ar2RdtZ&8B?SmcUUj3Y?@?Dn]A)c6tBh5%*lST=-[$c=T#`f)o"Z-bD#bWjS\[>*Z^PcJE'NM)jKY9+\OVkL/9(*$>_T649:78Y+X"-!2^T=8N#.Ce0&)LghLJ]Rg<jaFe8,'?%>HPf*'bd%Zcg8D6@R7G"c7'>b8S%3#5ZE*S'@R.XNjdt2%B1[+93[g9@r5e3X?r?E!^X7jY)5^nr]dm@e`1TEQRo?hSZrt&!,D7O%KZpCOZD=hNT[/:VL76ZqS9k^&,.'L7rcVIRPN!>bA=3.D'"6^"[6b6Z[Kj?e6"1E2qeW$(JTp[foMn594@8!WGj&1Nd`MFQ'A5\.%)2SK+BPE<U[@0Q.OZ!B*G+OD-%/^hsl#h5PrIZFs'1]^riu]+,&:Sq6klcPYhAs,g-a6E?/g*^qZ*O9)G&N%u9Zqbn4ENYQrpFL5%9?TF)!?1lS@A-']/:?`S*G1m3cc<aXR.\'@L;Ei?Qb/l/Y=,tU\qRY?eTWL&^=kloe8uEKUp,q(s0iEE]-9`hZK7#JQ7.p%*s(r@%!5\(;Z@qq/[78D!H#G+9]NdaIr#!:8^e!0X-)(NsP0lE8BPU#Ns*/>V)=sdNZ;G,/ZcZ!$AYp&aF1jlb'\f4o'u9lUQEC4_K1o_e%_P$]4`7jH\<7Xtl]qXK(\Y)WcT:n]O_VlPTYH_el-!&>4_L:Prq0%=aGmF*)%(L.oNmrZ]hmICV_AF#Ak&t[5GqEYMS&/BGm?>(<%S&-\kG&?6RjV:a`QmV?0'c>4P8MOG>$Ud\Mq\?9J^\sJ-D;l^Pqqab2mBN&dAXth/S,o&G+a7`_?jfJ\)gI:XXqI.NR[aO_0;@Z)%=Zsob9"_'Q]AQ)7Gi=t>Y*mj/ASuWEcP^Nb7:P(nSdLO.ZN0u;<!/#,:eKgj:K?p0')9E[)-&H#L]5%)Vg7UW0[!ea-#FkR80$Zr%o'I+P*]L,8E_#WV=.c:MC4BCu\3l%BGM/ua^m];);72W0l,IO)dCjUZL6uI69<(=IWNq*rH^aJEGCdtYP]fG?+!u7[WYBFm-^G5K%#OI<rK4>3dCOkfr<*@We*_ufCV4IlH@>(C;o'a[@.^iLfcQO=BV/)j.]j3L`;$rX3[ZtEJ<'cQ)/nS.10705l[p"G:fH3Q,H@O^V%67CU#'%tI.m;!t`f<9H\_*k3,j@&3OT&HOM]LuTZpN]OYP.d\U>n`ir:6N[Ua`0hS`o-Y<@a0fn-ANAU9<C/?S4.Pk.C^ODiGjOh%#LtMBA)"=_;iW%o/1luIAb<++BsqZ;l;T@lCV)MH^7JqOB<S@R"(AnurFfEcQ/gWiQS&fV&09hPYp8?QKn`<dj?CdW@U&<Aa)P!?%*&frghsNmcWmWBQcNs)<"I?ROJit:jjhXECN]I,!b1UF54b&q;B2rELg(,dm/(/YQnLF+q&\6+(oBagJ:dH?6-B_>4"G&&g9k?aO%aF+`,8;bK*!K/LEqM^e`\m):5!6L/E$b^4Mfa8:];`Br_I-PBjS-`sBjeCpP3V:r*6/5"NV,iSRY0^.o-&sXSPb'Xl+m,;h#P0s5%Q[D8S.2'(+KS^TRVKs^:A%ZTQ]]F+2/=Vd8kha9@O%J+E9!aN0EQoGA@r`iXO#u4U:5(.^NpWbp&ZdUi\M1giSDJQm3o&mg(ji?U%M++$Gmb)%*Q/PLaZs$iG6Y04C[3fs!Bad/ie7[q5X`b?iCVLk:_g>FSlT21EN/1Ys?NXRWJF@3K%"%)-U&/u_^R7>9$L9tQ+la6Z%S"W`knmSG`I7X=Fe>X)(,]3;QLXR@6LgI+`P6e&)'8c"0/JoLIcR?;hdsALWaop;<QE_s4P;F;#,2lSHnhM?V+[k`q2S_s$aggB0%X4%""94R=`UHg6?fH-r@5,E$G&pY+>47Di'5*NDk,D"KG^4'.r[A2.A1&@@h&\h%uB=Q;3L+_7ak:\#73Kte:NiH=VLsP`LL$5k`%\%`Y_MVO5&?aHM"\a>9Ad_;!_/m'Rs;G`^f*E*,o9r+W+8rI8/=4/r/Gg@Mlcd(`iC`[W5igpM;ZIc>8C@%*.^;l9EA\jV%!HcH*%G\[a$M9!.>Kka8BB-jNa+$C.ZSj0Z67-_r]:>`*Ql-UB\Jp:_uP*bKQ1O!eUBAI3Gc`=YCI_V66ARp!6_SOOL9^liS*eAiTo0-Ip%%KqoR,Gc1)>JspH@SQ<jqH8X1<,QN7j,SMjXpS)N!<`)KYS6Vt'%8;#aACcVX$ed#ZLdb7pZE]\XE6m$1?s!\m1'WCJ>c'3+.dM$%T;kFIZF25*,6id96jY)CfsKe0(lKL*g-*;6D6f,s"E65i$6(;h*H28J8i']qo9Yi-93``sLJNq><D-4D?dtV:nb8:.C"qBJhW;_,%AXj19l[.4\h:Or*VqR&sLZM!nKJTj3Ec:1[>%E\!NM.R8!>`HWP`!je]1lDu&[6Q;E_("BQ."mF0%Na6c_m>>/)bfp"oXkOk89"g%T5)TUn!4<2q?)i=43eVnF+;VE0@)Pq3Vl[>4K`Fq#pk"#09A8^309:=EQ*>I`&KUGnqW9L('asO0GU`/Gpp?_\t*\_a#PHV(_C[W%[)j_Ri0?LlHla+Xc/c?sTX'#G^@f<MD=cALi`X%r^lUuB5J&>4DG^])Fm%?-M+$7>CF"ZHbCiGOL8V!Q9NkSgkR%AoT+0RIj2\b^%pA1+WPnMc9N\tE)i?msHr:)JXM=r$r.mBMtgc/)>s/0oQX7>'+](,W?pDJ=:]f>AIqP80;R1!@OLl@HQA+AeT)cJI$T\_2R,LPp_%1U"[=.(euPGqFo[?`r*\_>;s'28/FljB^)Z;D"gp,8!Fe68<8)RZV,tp0Wb!>ZL:mHl<N,>,s,\EJepTp;ulMI:,*'BuJ!2CZ'IQ%GPg^4U_Q"'2BIT2etkn/,.;1BiC+K5p6VE>Rf8b'hD+"l-&L+Wr^?r(KG;.;(UN)\=]oAG`*QePq'8HR?OdLe5(u3j*i6SS8+QMY%:$Pk:!;iWT=/9#RKo9e)2K,h;&_4cLJr'(4I`j6)2dO=)DH]0(G%6YtV`0+F<\<KmcTK\[lYY1LN+Ej!O-6&49XgRV7E@>h5FTC9%P*Ck6,<3l[AiZ=p\`Tp50)CE,>6!Y<.H2Uc4]cbAE.^QuW4tKN(BC/8k2+][S_DL\%B10!KLjjhkBid>h7BWREM3!_VTdk5hA&h5%,AkZ;f\j:]@7hn\ka8C]Y7j+`7kJg/j4>V#80s`hiY!Y1amLbRL0,#D=_\*LO[j,':J;X4,('%oXoM1P`8XTjC%3lOX84o-S^C4U%%X<g#kiat..ar(Pm"SPV8&]2tBoVo.^5bh=&\&.r&2G>OcE1PC\6_B)@TjJ+i[>?u:sHq&p(i`\Uu!1I1.i+a.7$1*,?bhRfumXW%GmpNK+c<cQmZt8G3.e-LRoTNs&N7M;coTYMA+%rkcd^4`9pkX9/W3Q1_T36KO;8R91Tl,=XjkKid_dps&<[=YNC9p)Wb!!7]c/]l%c,MR?hP["_)q^iGlWLs,T.R1JYo_SS*D2fnOk<Yel;7KXN"$=1S+as^R4o(qG21`LVDW(Gr_0,`T-BHm)Ue[E18]C&!bSS"pY)@^%d8!&15n]anlK_0NkMB-4Df:nZ,%I(rk2Z;;T2Wp=V\r\8!#&4?GH$YbL7d)?h"Gge+VrscmSE_)<P$bp"fc$"hKj,3E8?nOYL3Q3%nJkaU&"FWKkiT6Y*hW>bDnkk1Suf4/@hWOogYDAF\,I'kA"*_[`\a>>e`:9u<AId?",ba?Ia>WRT3N>a5ap8"=Lhb7rB,FPLI$D+%0.>#E1.a#f9FfB4"5Y\4,uj_c6!HQ_-`Z7^SHX]Jn(EFOs2KGhKNN.-_7/)P=XAhQ!t`Y_@>l)<(Ns"^J>T%^oSui-b7V?H!4GG^%M;MtXDXK*&HQ6C]^Y'3=]rK`tCMj8Sk@9TnCd1gdOm^hI\TNBNi&$>p63iMn3f)Fi;!j9%VmUlojh9tYX\HH?/,:#+qc7`][SMb$%au,>3>2t`Z5E&2Tdk_S!p$DF^f>D8e,SX/T<:,L$VlFYNh2"J]L@.6RK;M&q'D8h4!GnkLaK6ot"S/;7h5>Nd,cpmOc13_H))&up%>rA;jV<qkVP/u2"jAcMn=`s%EhBNOr5[\E(*F$sPL^.O)SZJ?,$0`\\hk$bHRn9J+:"Hc!_ZXZPUme>+4[3)Q59qu?83Z@.+-hPU%Q!@ob]]BV@GMbT`$=UqBdeS[f?6sI[3SHW67\V]ZT0C<n3;[qtX^q=%YiD:;Y^QR9s&(;Ia)TD6@ZLaZ,(%ioREud-H8gsKoJpg'%<A!d)gjeq7gOc<mgn1iPji[DY:gMSlVc>IFH+%XR[G9t7)\Ma8;6sk;`k0MQHnON3(<0Dj2%T^-.D&AqOP#b"!?fhNlPB;<YY+n[%-hqiem-!r*<c.Df0,Kb&QI)/oD0tEC4eF`XS+=<u"Orhd/7c=ud*$%8GtOKEDMl/]`!:]"89OnMR&cM<CG/]@f+,=Qaf9tB-e9!j%IA4+GrictGOVg.Q/^1^f43WhnFmF_iH1+UZ4"jYmj/<%nFWO?,4[+b*+.p^'4ArChMC$f8WfC0ROrq+Ni\`=sDf&uOC>TVt,=/.&%qWCccPf;,AhBu2U\ngaO@ph3R&Rg?Ki8Sb$]PA8mN!3>)n]nd_0)a>)8S$.BFe4%122S(!O*[:>eEl!fF3a)qI.8a7ebS,!A2`F.%<jk1dmSq>@;Z86FcT@-Hdp=a>>t!,4[8<URr)TDK+,t1t.'8MPeuX^!\FU92\*Vs`?@-U'GDbih!Dj)maJ0Q6O^8Wdrctr4iJu3Y%auZ7h910M@+u]_.Rb]6m:DJ.5?nSe,(7_:lZkUC(/DpM(7'"DM/nPn7@qEKaGR#'6*Q6QfSLs)4!f++FU)G1r-Sa1^,NH:,"qar3%]u7Fq8BA7hM]_<VICXEJ$C#o?&S2>f3Ua(j:F,5V-m!:&qE3^q&<W=:7#8=Jl$Q33fb=Xjc&fu\5VF1Go$$3!V/-HC4nm$+@N#kM%=lU(QMPHtuBg"Al!n4L8!8Pnaj\AqI[8SNUH?ZtjcY0A8;bloWD4@[7N8-/2eU*Pu3@U5kg(Pu7o#bU3=>k;jAb\n^nPV78`7SK[%Y'D^ZPr4VS@L8/a\`+du,"K:n*-?`ic8l4HCSJduN6$;9AN5c++)uf>_'i>#HQ>3hP+uT#kIeC@,:I"7dEG_?a*=14$t,=32TD4I%VRtoN,a\,.LE`@jJ14:E2ku4Y*SM@tBOTn?ZGb7g*Hf@UEiFt0lmUIE^%%QZA@fKS/W,A7>rWep@:G1-,BsnDQ,A([P/aFFOQ?J%%4%:,ijRo2%FBu^cNA<i1JFUaT*&.'(:mp[-Q4]$+f/UXi,Ec=RoTlV:'_/Wl=6/s$DOfs''8'"Li48bQoKtY.crSbPDt)ID<>+!2%4cC<`0.i^\os_&L1k")&Tnr1pP8EEg9HB,'E.&VsQPA0snp6b`r4INl.>G$=%L#"_@i;@i?$dc<Rr;Z)-3pY8H`ZO0FG^s:AjN>G%'M74&h>4nuM\u6!_Vd3?:.'TEBiI'pNu\dWXd%1om%eXLPWl`i;WQuC8Q,47]hOC<3LuD9fW_i9>NqY8StJcViU)g%5,LkNk^/9U%)W!h_ggrY]3G.>$dEm,c&I[ch=L2HsI9D=F]mS\1a=36A=<>H$Xoond*4lU6BuHa,_L`CL--YcJEED#,Qq+DnSL"<6%@'j$1cg&K%5K6Y:<eVp[Z3?PFdVJ!rUO5BWcou([&W/?A5hg'pL"HT/\*4-md35NRa))jm25m[e44mo+O^iW$aDrOB4nBjcm(=YXRU%e_U]nb6%#X/`\'YPXH%8Nrr0^5ppA+W.F.-kQLo(33HN1HMOBT=.,B(IWD/5bdeZO*0:h0+E\4,X(e^p(XR.9AB^->?ji,r=8rjc<b;hSF(L%K*``Q\=h8RDpWW$;IY1q&ijutjY%h*D*Ra?f6bYJ(AnIR,Pi#bbD#G1<pq5l&P/$q-j[%@?Y0Ft7aFH6%jUkp&.uZ(0f)(3\g;@@%jHMRhT#?HF3:)@IE='\l5gGMJ".FBN:E6^^\g$?QJ/2>#B01sb;m2adF7m!G=uA%98,g"[;Bc/$B[:t"V6uSr0JVGPVY')<^OEMa%,U-u+Zd4pt)?EmhJH[MXTL&368,X`Kp'pYsSXST/,P*pi!iM51qd"PYiOGJ1J^J$BBs/kc2MJ7a7?001FggV]qK-9M"c;t!9cq,%%iX#nl"<t'7;7dQ8q)-@5eR/"o'i$$4H%?ar'2IiWBr1,dZ!F!JqJ?I?o,dppQ>RTnO8SCPeMTb/F431BP.0U9)H1mg_;a,<EPb=b%C*2X<Gp)/gFf7<t$muc0d0;]Gji$XuGj6sTOk[N)>R="%U-B_rfeJaXqc7*Wj*6&:/OHla9:I&_Bnmf\%=fEu1Y!kek-_LD3N=2%%r]i)A,`$0:$O3TVHi$J0C$Jm!<F?\\(RV+?jB`=#?dn^NXV1a?5Ti[Ra&.Re'WtFq5E9Ho8F?=+U#[op3P4EBSO-5E0D/lP]\^Td%jrpXKb>g$m.Ch!ZlX.:cs62?9n(^#=?1IM3F32fcM(>0hA1kE=^(M614iprKp.X=p[jR"_m[iJkq0S:7k3tt)R`B%r='RprR>X8$%A?Iq@P.BTF8`#Wb-])VfT4G)bIZh8&q>!WfF8[A(c1dFG2<W:rY'>GZ\`WmZbSC0(A?InB^,";&5Y54$!@;a1#F*FI-d^p+G_)$f%jp"H?O8V=8>&jao,qaLqP.B]^9'2Qq.%*`RTHp[cK9Ee+%SG`D5:D@]%\^)E7?:8#QWujK>k/1IEQKYo`&4_p1=t;J?^Zh$TugPZ%$mfu>1R-*0f2**HHpa+-i#GAKMK^IoC[Rn<>k&=NF3R"8bS:Z9?[o8jLaI2^8!M44-W0H#]L7sni[.:[R\)!rCQ>.2>k&M&k(9W^%M/0i"YKTFJd:BD)MitX1/kXuh^F5Lc%\mPeH&Rorj>*1B'q\>YQ^gN:>k8k^AM1QRP.BR2R_0BU;)4J#8!CIB3_JP'mjOSScD/Kc%n/`lqc$bi#2?-N/f,R?'>k9(4k(3siM(:ccYIl//dc<!)OXBV]DPZ?qplU`Kk"&,,RO;f)='S>=>k018idrt#&m)_;a]rm7-$.>'%Pfskt;Y&C$8me!%/u9gGq37&Pk#@enT6lid\)^R^igO4'R;7hZA?L3D^+pL19?CH1/L>J_\MT^)hPJ>!EA&VZahO(Y,mR?]f/uaK%>]MQI,qf%]-?I/JPfu!<dq#VkR?G,AB1h0PUFDUHSu-&$\XL5f(O]#Aq/^1Io%(HJPI][j9'2;O.>^\-Vb(._3$iRdjcm\@T@7>R%31Z5CjE4)SRbMO3J*qOWb$/mK-#_'"Pfslo;tALe:WZj^5#($gpF1qlm\_>5q4Eh\k(&oE'b=8!f3D.9q/[Y-=5KYb.[b'YW+<'A%ToutKLJ$]l,O2JI=$9F&>]W=[F3,5``&21,10;+cPIKP39'2:$.Z$e.WNX5tO&QaY>Z+pcMa"+NXuW>m1)IW%a]rm[-$.<aQ-9u`%<:\U&;j4cOR[VG8hc)A_S5[O7nkOTZ0"RsD\`TNQbS:B5I*Dg*eTsDDG>XpKi5\$],d',+P.0SM9'2##C@ZiAVjb)?_,3'gc\eW8%AcCIb2=omdY:>r5cDi.mH)i95_-N>E21JU]f,Ri5>k1ukie#?'M+^%58R-7=:$.&Z.U.K^[oG2Mr)QDes5UVXl[J94R_0Bee_2,D%fQWUn2<RspQb6Bk>]X7Hk)00g)qHkOef4f.4BOW3XLYQu\`UeuUZ@"?.u?o*X;lQ<gfSW&?L_OMiI8b.2)U=7Ha9MBZf9,rbQVA)%<0Vk"bZZm*T6moAfXB_`R_n!75:_S+%]q1MrnO8+Gmc7,.4VOr[$%uZe=$TXJlaIZ95^kGAh<_b-?7#0[2L\_p1u$nc*]Es$bib-%BWX8'dXGElDGB0ZkO,Io>OcVXF3VNY%FGn$f@`dp\Vk7W[gPC&,d'/<VSE(N0@t<q(Yi80i\1,<-?6lL[@dj7Sut@LXLPhgF2?In%`&21/1=s0E"*@[bG7Cum_;@,,.h8`rcLZ+<=#-+I?@t@Dn9GJqBuT<oR4DUIJS)$o]d@g:n$UMM$]_DVTWNIQ#%tF)qO5X#qn<gQ%EP_H.\AndAf3a"\]"e7@He&/hfAC?RYeU0Domm#6pS&%3&qB<Oqs3]>-eK]IGesCUHdN;rfAEWXYeU0DFG0VcpSoTW107^hJ,R(E%$iB8Y<G,DhQb6aVrOqJ+S'2Us=>JJJ@Xn?ikRj<&'pmQ[IkUZ:-Lp7oZ,umR=6qGUbq57"28@dNJ$1oQP.BWkqs3].f3%UpHt.[)%^$$I5lgI:2fT6eKgg`^1>k*k,)Wu^)/=C8pZD!d@\B'Ec]&4f+if]LA.)7?>ZCs<4\B-(;`D;fD2+Q=R\lV"*a]rnP:$.>:Cl%C-%cE^u`H-:rp^Z$jb/V+Xdfjt*;@@"PPO4hrS=E'[f\ANpEC_@PSAtq_ui\_\BM\W_Sk\^7QD`.qE.upqJ'j:'sNV^bSlYHm8r7#pK%atO4KZdGLMnX_<IRg&Oh1=uG:,It/?5YL7&#Ak)T>\K>sF!'*a'!4.@P.BXB9B)BZD)-V/7n_^-,Ae^.<]k)[\_p(QifYrHJmW<=%[#k]"nYT%CJii@!7/OMZD8b10*,:\Ji_`A2P"TX)J*^)QBtL!!eOG:3`N(n3K*uS)OZ-P7X,We3Jn$Bh9:iO_>]HklF3V0P6Bqr(%[7Ff1Gh49\`P&^u3#DL.UH,pF?q]XNLFnoe0"*%.q:Lk@k%+A3>k>6IEQQIk`$IWP&f2O)8R(bmI3l&,g6/u,CR`6WB3R-X]PU5F%Ejnd&MSCa2CC[gaY'Jh%qKpcSQHUYI>8#PXDTQ/S\pYm-\_WFYk''J\RcEccF34#3Gq6&,A1m]7P.9Y%9BME3/W!-g\$*`BqqmRD%k($+eOp<UrCG*,-Y5.!&F2\I[Q+?+49BMZ^DDG;kE62@+`$KKL'DId&k))gkRP-:]CX0G#/pZK?\E8fEk*eLeR7e%#YJ`kj>Vao9%Eg+&lP=so(;_FJR?FaUL\`K!bk*Ja'RUbb9F3-5)]J\;G1=pnpPI]\C9BM[e/t$MC\R[>gkE<@9T_h>do["n*bsduC2'6*Zf:6s)%>k6<;iej3XR4E`ta]ic7:$)sLFXu_>Y.F<)(4:7gq."'nr;$fX\k-.Gf?Hiln^l%?nT0KAjSdkD2t-9ob:Z`6P0\"mWujFjAp.GL%g*LgbD)ZP3K&82;99-WLpiFd;,d+ZFAuT#)h+d$`o58^Q$f8MKI&sjHeqRhRIlEcG%_Q>TH15EUpL>#rlp6-f_j`gXMA'oOkWee#%-#LndQcpa?hE&CKfTA)tVA2n`A?NH5P.BYsRq(E71N/;J/)Ip!r[t_PP.9T!>A*l+47n]Gk0][B'pi5^f6hnd>]]0VF2b1="e-79%hINeaoqjFNin-odP%S^5BIg7!A?Pb%P.B`1q^t]/J,[g,2jl2a]d]j3q"Kr]k28npP(t]Ejs:i$'ZCl9I$;)"j@eX(QS4b"DS@C!%q>$oBYi=l9%`aI)0AW!Q='m^!I!sI`>&a0]ER!7)mb!u?0:>K4^*G<kr2/lV@uk!nS1?5,l,iq[k;St)'rPCof=ZRS>]T]fER!r2%.#A\Z?S^4qItQufE;^6'jQF7l_6'durrt![ir/c?n,N<\rV9h"l[Snps8;KF[/g2uIu)X05r6e_df72rXDK.o.ntL4K>V9(nCNP*%&K"8u,.1DjA&TDkRI11Q.5Vn0!aG-[7u><4-*QLa3SmMm7(RZa#GeIb0G0X*o$W^=kF;fKUVnt6\Op^ehWFf/lRj7="7#99/LF@:%?12^`;ARB`o*H(g9q_1b:EnnMJVt70BkP-OjD@1W%lRUC+-f>:c%o2\\!n3HVP_--#lNRE7H+9V$gdm36N`bNk:),cGBl=8'U!WP%7kd@!4u!_,FqrA0A9J[[B03o$G-)tW9ET$c("W!C!3_NsjCB8Gr^o8,>>,>LbkliLR<(pIU,/%S["X7o;]X$KD#(S(A^-pKfG8IQ%0cU%Z2MQ:46fj\&ls&h<Xo(%sZ.Jsjd5Iup/q8Op-m<V>I:>TQ73Yk03&H\>f(Z3eoIL43;mg6B^-0<A_k(eiIcY4X@H)P&:;mCp%8Cr9g)*^\NH(J(OrK?p/'Q=d62HT]+;!]&l%i1k9SgT<<-dRLdXe0g8dAiU@o3JkaS0?S)c[0\PL5QOf`7-$U!:%+Iq^HEMbm5P"%J.G#.UGJUq?b4*.!JHSnp/"2bJ/_,?TCZ@8'?Z]-\?1Wl6s_CcrB7?5#%MlUFY.Ol+S+$7')S\U8BV*YiV`()X)5;M@h6-<H1JSC%f2!M&b8!Ol9&nQ4XOjMU3`7/G^&25Mc$qdTs-m^[_4ON)a]k0:J,R&A\V:L&0YQTn(FId^bEXNb8<c?2ABX6-kL4789.ioF@6uS?%[:S(&0\I58EFHGLR6R<_.s#.Ac1bJ2F@-dKR<Fe)1@^)3]/'%k#d$e7)79k$Dr-\C$+M`,VVo,;$^5NUrd5X`pRBrP>_h+5ACoEc%f07co-[(LV*8q]rkg57X!"?n=j:Gd)g$>Z=LclM@L:tQ'gahRnn'>JY!uLanDcrRZ=77VQe9ru'5:_<-Vp]8TD4V)0`8\\Fh'jDD%\glW/LJcUN[hRqep\K:^9,el5p&s7k*SId;"aWblc9)dHmOL#c=m>;1aX^s2/i7bdBe:Ei=(bH@q4UfBkPK7aG1E5nJ1i%:]/9s"%`r+,qS>FbE!170T0(?`n`'r)0+H]!U](3=P(_LFIgKY'B]=:DlNlnQBJ?PT]G(/M3[3MBsN]>?]FQ`Ig7AJtPmeU?:Nbr9"s.rbj%<T=).,I@UF.#%b&kju>70A?9F\[A433\)tA7LP.C4Lfs_Oh9BnHq-lX69/FESiX40Za?i.j8a+*^VO/iA&Ts;@`qapkCU-%OGH+Q%'XSc/d;DGFfMaY45pt;^-n#cWG[O5:%\=(DbJZ"D!C4"O5IimYih/Qah%(LoNS,SX3Ur/VG$1N;@L+>@CQ`jN6&n#"]bZ/aJEm#=%@6U%&CXQ2$,-?Acc4I,A<h6#XOS!i&Y!hUES]:86FL6F!bdlIA8I-,cX,Me:lu_YH6EcFPNjN)[:PIOkaJU=[&?4HPF8qEtqRi1Q%B@=Jb@.iR`3T5_8n;_n)WkDX;ZWh-te,qp!,kqZbh=L"<X)4mg@;ZM9[&<YCM4t%n-M'p*[>6kNA[SJ=(Og7_6kP=9-0[62+;(P[%=5&V0;8ROjFDR=Z1;^fOaEW&+nrBab\pN06U?pK3Rb]`peI*Jp963,p\:>3!'Y=Mm>c@mA2Y!"TH^9:j=Ra)27"BY]T%amLoTbTq%(?TE9nBKSLP1G*V5.;^;Jca6I?hB;,/jB;U=SOhu;fo!>(8sb,XXm>sLKRcUP.@kleRpKc<)LJ7=fN\=Za*[ZF(Mn>U=$i0(#>aZ%03QD$=gX@&Z>>fae'Ai5qF)0cY)K!,`N-qD(7).ObF^CpOo/Bb_P/foY_\Pgg;5T\iO>)+/@'L.93DmW^6g58kK@#irHpo3`.]Kh%R4F2!(5%l`XVR7WKe8]W?eYMH!USJ4a9R`F7UtgM?EkP33ar>K!=*`ec?Fk^?;G2rC!.0o:&*<^K]EaX],p+?V[>%D]ER.On$FU)%P,,)#4iUe,?#&<e$4U%Qf-'/7ebLA_XS_J<9t%W\PV+eTguK+o0&K#j"\.a*f\YTaecZ=[i&-f21g.1t36Gaj:`+&EL9t0I,41nM%C0*7Rcog[ghZom_"GAfL&[moT_4AM^#(@b`1(XJ,Ic(j9^Qp&Y[ciMrloe<[IZ72L)DW<XF#jn!mR5o=mY]oI;"`KpLGK>`MN/B,%'bS]OLcCSFmfn_*NcJMk[eXDQ"Y(frT6GtWr7<%/ZqmEMM\6'lAX/'RQ8mZJgpuS34WjEO5rud]m<+]bDa^a\8/#W])ju!<(g,(W%M)"lI/F`;e\`fnj:.1[$&Lk2m]**rI>Y0JP^)dJ[$&W=+gu+0P<f1GsT%@1rS%#<gCCC40!OeVUacJjsmL\EkhqunSEkDCOZMSVQ%'3Jtrm!rA57+*%eJ%Xk,)oRZ-SDqBYm+N*R6,4d*?n:(U]q^%GG4>uha^C0S;tlQXBPJSTZWgbnitc^X=-44h9IS^_PPJa/*bV-]%4Lk/G)%d'i$uH,`XtHC6H$#**;*1%*0<s6_AY8DI-*\sT<=8?<SJ1Gl$9oU[>L,=cf\qS6jYVHmQW!10mX>-+dts%OkPWG-,eGi1%q)Dg#6u5X4aX`@&!3^A4DG,iO$uF_KStW:F;>7OeT^%I>P+mWE*@delN.HfIBr:1AWj2#<^1p"PTi+D;&Pe^Z9E/@3B<u'hECAb5%k]`CgD['`%.t=R6Bt%Y-#jd6Sh@7B4OU[Ue7ZrbfhK?OGH1)cuGYs#WT[8\$^Wab4Ocehj&?rkV8j?Y7WrCH/p8^)3%HP!d\Wj#N%EdNUpd71kIUXLr+b@.mDG/iZQW:kB4kIJC_E5+p1Is?LkQS0;u@JNp2P1(R`Q2A(]CT<.G>32iOR^Tm42n%:+U4b)f`E,!L]l9$S%rlGA^A*;>NI`4.0]`cM(X5^eKAp.?olAb3O:hmFXC0[)"FGj"K-NZR7S%;;d;8Ot]%a-UgC]&4fSn.m!,;J`Qo5Zl"_fC"c+<.=<%(eGbZ'Z?[aS@_r:OT-1n-K-:anCC,ND]b\J]G<E55q3_gp?cC/lrZAHo]kIpX'8"K(I*&7pE_!nGLa1jT\W)m\U%ap72YR5&:h(C%F=)U.k'!qY`E8rX?@KJ^At6Kt-7<RHq%cVDO(Z(7-nW6I$FI\$ZEb_XQ'l_D@E[XV=T^isMPrk&@9Y9@eL*j(hkEo_U6DCYCc)4.%mV+?$cPria4d6+dnDK#q`6E.l-b&N_?BCU)&/#R>LJkl>-[Z5:adRcbcgR$IbDmI]V-?ZF/jFU_G0)H@]^1u9?Ll<k07.<hQT[,)%9V*[=-H@)34$@X=9TD+U-I3A?P@G)]feWZLm$Ic`Em-g)^XrZ;$c`B$$d\.S/-\BARb9J!c9-J0n4]E6J0rSV7$D*^Uj:T=@%&)l%5g=MAJSKWo)6i6pP(@EJPh,r*#>YQ0aYO1U*1Sgh/QS%8^eJ\qkU+=iGdHRUp_G";3e3][QQb-#b@]a<KtQ,1$R@)=*,X=B.%t@?%*Wki3LT2Y57@KL>e?c%t6CigGpD/fY-^u^e6R/P^=c=iaJ0CI%QjrV1Q/brZ;(ZWUhM@Ct7'sb9!?%OVI'j3r\XCDl^B"KRlds4p%Be!7fT]F^7%IPN5f@AlX)s:2T%Y\oi5WZKsHo4>/YX&Sa_(Fa&Z'Z&+jl+)m*oQ\F<mtT4c'6GNA,@oZdlYI"NFd`W$J?gJ.H)=k%X!2PX9a4RWO?6Y>&m,k(<"sd,rMBfXjkpnpHb=saVR/?cCGF)eb7dK,&nV6$TO>6S01Z<>*tYtKbdJNUGV?NNoMif7g4q])a2A8G%TpK`BZ?u(75=rJC1nohkV[r*pF@cbGf%a)8N>4k+X8CPpa-5RU*u78Bd2rj@efLA!?/dLXlXmPLOpCdtbAO%XIg"6s_,u8?-IcG]%/m#Ttl,5sa.:a[<XUQoNC-cT]%H>,cA-4*k%Fs*hrRfU3ej)W%GHLp:"=W=#H8?&Q:FaQ*_<QDCX*ZhH;%_[E%W,r5hhpoZH0?Nt%bpH*6B&k>*:OZb3EXV8d*[]EMUOjd_qkO"A0?1:kk`QBsXK>f(L$@QbcDSfoEOn<#1D!daVPmM[[=l]B5m`[XQapgH27_X9pGT=\%-f&u$"^j,n\[]cR=_-3c-/CFH*juC+\Z`pi(!P`]?Ys2k(9[55eAnE+RYK?#%kA22k6qF*-B!6>3au,SH'__T+CQ's<3+jr'#!5P%[:68E^g&hn_%WT^X@!e.nA";]Lc1*M/HjIk=P#Ntr8GbTDSr7)3\XcOF_Pa/4s3KIRL'N0QaiL=H?B]7@U^26G>GQ?7i:i'8iCUC%%rAXiWGP\n:s]g]S0r,k%q/.eV['"'./L2iL<'Sf`7sW>Aueq!DojqO_a*F>?je%Y2Y>$$6l]NO9Vd-]@RIp4IrUJ^&nu#?7G9M+%:Iq#]ao$"ldjH673cp$Y/@)k8S3/6n=8H%2/NfR$RL.Gg(s"0Q@(LCaAthQb<Ljj-\ugZfl$S`rI'TiJ!6*-MYE23JYJAJ@H>gd'%R3[O;eK6FC+H*c9an`I::8B'@P&2@S/.3H)*[c9#qMe%^)MHAYoKt@IM0/em-[qn7=u6<%gtr":l.pSFgBaP##B<[!J3qPXhVd.*%M?2C/*#O8V+pf$ID_u,Bp\s*Z*^1/SIRCa,im$]W.ge\_fklen!HCM2&sHRE.9[Ut;eZ7Rb=(6'.+G3]J?PWI^`0?jJ6ntN_s6<`%jl`-MN)1fQ_ia[/MlL>9U+^)I'#^JRItSemrFVse^;=Id!!bR(!hGWa7eG#?mo1k"#ZEk^ku`;7Ac><ggjQmQdAVs#QG`3mmjYPq%e]6Vne=iPR!VYe+7\Z]4d*>"jbK>2_nQ'hseCQ!iKFcSU2#frDo['fD0>!5Jo#c;u_+.^iG0VT`nf1aVpFD"hjq=3k:m`XrbJGS\%PS\p268gAG0V22T_ZkkG9^;W;.aMh;TEFfD<NT&iRoHFR"ABo3'Dt_o(N4sr^Rh4Lf[JQm_E.#>Wb40*l9m(4+o2[QHo=_4a?nXp%gdX-c/',NH&#hfn9[AuRZXo!G=Sl"5:PBbqW"<*1E#jt!N-TKto5(lClIt79..u&pRi*;O-7m7;Ja^F+qlC>qfh]"EI/>8f2fbed%<37(S])5CCZIlqmFWu2b!tG50GYl:W.?F_a'R_kC7lP*0=%+KF(b:5\&R5<u4eQF.p8);p6fWm10KApU\2,J[(=Pt]=U!:c9K0?@%.';c6\V):h9J4M^kbHLU#"+kX#nA>cDfq>\*PLC_,GjnkNef$1\`FO82'Zk`Z4`J!774qfY,K\<ZX;>D^QcRfR`OHhd?2Q1/7Oda%j"-^`alMNNalP'aPKDr<\s(8!m$YrY/4u/Kl)^PBaQfl"Pf`6m9U3`djI+3Y6:WPgh1]Jc^RNq_f/#O7k&NS0VQr<G?I/60Qc\kN%qN]1qXA5&%p,&[Gq48T_)5$@TPOhrM/!9MX0p23ac<):^F5Y4%IXXN5ZTj6.7/l@FRE5F\1R?,`XYb2a$aega4OED1-5/3aaQ.sH%b[c?Gc-,q@KJh@;_XL7[KQ42PXO&_=RCpo!-^,EOgFSO-9"?C;*JWbMr(rEA$o,-$Y31Ue41QoiT%ESPO>a_@.JhR?E^e08A[4aO%-LsSeAhlijSa/;rPc23a2-NfEEo(L*^-q,Il'TR5*Hi(Kj)hr(5CRSsnE6^Y5<g`<b+"*7rq=N6=5+9K!]=Wo^H698j2!bVJT9:C%3;@E*e[n^G\rL=KqXNOD$X[_p?=\Ii9VJiWLqcp6!B!Upc"ikV3]4b-,b*:K]!Tihh&qI`]uX(tc#C;KbEHa+"XRVVq??@%B[t8$%IZ"Oh<P\S;5(5+3=^Wg@i)<e$(/#4_$aR.V%?u,F8iG`9AYVJac:et0SulJTO5%h=cJAnn!2cn4qu!BA[%\)+9jIXmns@l9'2ItG%6?n2SlR!*Zkd-gY?P[!B$31G:g`=C:)Djcp:DPoZARUan.@U.\BS>'o@jm:]<,XuWHY$WgYdeEnkYj)p81)OH\u]Wt!o7`pEg6fV%B.Su;:F,Jn5*'-ODu92KXZ%;-D6YoaK;)Kh5qQ&.]pS[\Pqb%&Zj#o*Ks7'u6Z]"1dLo-Y.Ba\V?]R[5>:YU5iU#M@8u+Ku='XXr%g_(nNX1.>e$C,0Qc-K9hrm!\HP/aW7R^EQc0]q7&p0Ll[c/c%?]Wr(Ze#8je$@Rj8;+B"HF'=[lQA$TrX/=gXOR74`O>]!=lOt(e%$pu$'r()2@Z:'c!rM-E/Of3m$MjfbBEWL/.Veif#&W]7gPPo/(oF!jtRK!'A9Xg4haUm@fhE!7rar;$V(J,Kp[q`hm9puK<Ja2du%_AbdkLr=VtFGBd3G7"e!\L_kZS;;hm06d$.%6e'GJ9A;YcoooGXb'es6_g%]Yj?8X)%pN..-]J?3.g<sQ5IjSbpY4R0'#&bWHWg@%]P,`EUY8RHK!oKfF?8`HfbS4n)I7M<aL$@\G)JB-lOencIBlAU`t68;oq\`PbqM^g)>k3rYL?\:boPe-"TjI;'%EeaS@GT>%;_%Z%o4mkLVpYp5dRta\Q<U]Dq#mUl6ud*284=`UU(eah4W2TRiC>83_QpX1@2h1/[bg&W0(!sjBl[bj'GJp:;Ra%r!mcn<;]KOVFeDDD%:da9MTdHsP@ZQb%:*&>)Moq$DloGC!MMGajJ8&&0>1VH`1#KSJ345<;+Amfh,)X)E%K567*a)-C-gK%e'@1*Zd>^DaU)t0.-aH?J%au`Nr2+hm0I4S+#j)Cr0piT.)M`W*FE>5\NpK0=Ad#I!,1`Y)'_r<OOjVN`4Aa@T6>otHXlce&AC)O>p$gjuU3kWC:2X?9anu9tb%Mee*,UZ0I^]o7;d0)SuS)m23lX%lshYf\r77,tN4BFA"0]S"o?f.5%+V7Ia@BnZ?5eB>B*W^"m_mo)Ap_jNC[;#6cARr#^YFCfI+%G-:qfjuLpX$UnR#1!F8NU-m9lqAi@YFJ<%hgEAj7`p;>jfsP=G%bpr*b"[dYY6l[`)>WF?O`E3Z@`AY<ilbNCle"*S_NWu%3;90c%frLu"SDY@5qX1DdIKE.8,3>'.m=<?3Nm5?Jo[]_"MYP!88BlI2\[q)VJD*;VnamFkSkh7<H;&<a<A&tV%fmTL[J&EqMAD3e5sI%o%o:J);#^q(c6#%lE$BM-1@+!E!:oet0lP"s3HBTh;R!#Ghr!Q&c_6i*D!FERJeEgH1+7Uj"Gd1p'[X,\_&<m'Q,OUa[W\oC4`(Qfq%<5Zj_!qQsLRG6lUI>DNC(>-(;#)$>o3TskaVa0'lH@LOc<tj.H]_b#nU_V92A[[PI@$Q[Kh@X^ZUD'\tcY3BG`=)Kif)V9QEe\/[%%;$#@pli>i&ct1VI[mTtU]gcfQM9)qHf,SR"E5uf.Y/L1%32ffnP%_,4X#&Y#d<p3e,UJ@H/EQ')Th$NpES1S/)UJ,&5Tu#7:e/&%P)dA9/r24n;fhnsnO9:;d?*1%S%Sf5P22-sL.XdVhF[82$!C7S`[k/8rB/ES(12@YHc?HW5k%Z1s.+r%^)rJf"!O]+:9b)RTcbER%Fgl9mUZW@2j'%Mp@h3L2-(]Ft*Qlm,/G"3G^0i[^2AQo(b@8O"M>Fde+Ep2bChfBi>XLNBcr-5SMZl)E3,1uN>ZF<gA492>)5@Z\%DHE;tW9Y$?>rL]i&P`4cXB0$`:.lZRgGT:gDJ=*tM1Bu@8>*T+)6qb^J?fV+*nn:C3,Var$M@A$U-cTkV)Sie>au9FCrO>6<K8`6%64=_QbPjY3Q`]VZF?g*uMHT+.%.XU*r17eqEO*QLh6<miQIX#0W&PX6of/X&0A!;nkT.<dG&GE?1RV,BmFA;aar**>8m6F.LgTnj%!?.4?I$_FP>,E82*CSH6Q`Cg+V(8:gZ7PNHMY1KX2LXe^Kli9.#)k>8WZR?,HE\)>SN@,C<6+B%.0dh4(_MF;[`$6t)`BIj.+2h:%(ZtdsdpZrA!j\oAUDX'mG>OE+XiT)H$ebGYR$4h#M%Rhm9*miOn7k,E+I-7NjHYVqg<K50ZEErs&5P4dGT`1r^GAKn[)]_^cbbS!%c.fusF;6q3(VK_Br7>sYUZZi.WX-_8W<o,EWN+>0Q`LS:1K><M9."C@p.SG@jHukVfe$,GP%Upe,gT_\8=m@QOZbLc+q;.hX[o%O%C6AF7oce\D.Rokk\XJYYF/!Cpa'@HASr(UP*3[tSr,*.t,CPSOrQ$3+;*jc79@T'aR&_EFAu4c`%NpU#P%/%"Q6adU29ClHHID&G%X=21H=&Y8pY,Wbn>[>ICREC[T;mdo5-E9^^bg_ur1JqTOqoR?TjI*&(GoUA[9HLTu8s:SoVUf:m9XRH`R<k'laRtEhi1<?]aVZ:#%F]*2(eX_Ye1R4k'gQu\Oo#k%*]]`ql:L7Zi'e"E@C/>*<R4=Fe8>Zl.W-,cdA\<,u(?PHG;iO\mJ9&G$=pCSU'dn^-(TCl6?8#71%0iP#+ilRFbS.R$(<M%6fE`HMKlNJf:>+(P=_d''PA^=''b/n=oE91K!-sbL\;nR-j+Aoi[a$]sOD`1P2nhdm``,\&(.:\'EU6&s4%9IVK`np3%Vs+IG^J,ONAdl5$gHN*:Rqn'&Hs8+bDIsM"feQ5Pmc[UEDmH\+C^AmB2?9^W%qr@SR]Y8[krV&PSo_tc?J"Qc(c*nd%%J,JPdO0<JNr5T?JQ0!+U5C\.]qG2TcqB'A;d[C~>%AI9_PrivateDataEnd